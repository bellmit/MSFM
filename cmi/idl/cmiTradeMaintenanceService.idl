#ifndef CMI_TRADEMAINTENANCE_IDL
#define CMI_TRADEMAINTENANCE_IDL
//---------------------------------------------------------------------------------------------
// Company:      Chicago Board Options Exchange
// Version:      Version 5.0
//
// Copyright © 1999-2006 by the Chicago Board Options Exchange ("CBOE"), as an unpublished work.
// The information contained in this software program constitutes confidential and/or trade
// secret information belonging to CBOE. This software program is made available to
// CBOE members and member firms to enable them to develop software applications using
// the CBOE Market Interface (CMi), and its use is subject to the terms and conditions
// of a Software License Agreement that governs its use. This document is provided "AS IS"
// with all faults and without warranty of any kind, either express or implied.
//---------------------------------------------------------------------------------------------

#include "cmiV4.idl"
#include "cmiTrade.idl"
#include "exceptions.idl"
#pragma javaPackage "com.cboe.idl"

module cmiTradeMaintenanceService
{
    interface TradeMaintenanceService {
         cmiTrade::ExternalTradeReportStruct acceptExternalTrade(
         	 in cmiTrade::ExternalTradeEntryStruct efpOrBlockTrade)
             raises(exceptions::SystemException,
             		exceptions::CommunicationException,
                   	exceptions::AuthorizationException,
                   	exceptions::DataValidationException,
                   	exceptions::NotAcceptedException,
                   	exceptions::TransactionFailedException);
       
         void acceptExternalTradeBust(
             in cmiSession::TradingSessionName tradingSessionName,
             in cmiProduct::ProductKey productKey,
             in cmiUtil::CboeIdStruct tradeId,
             in cmiTrade::ExternalBustTradeStructSequence bustedTrades,
             in string reason)
             raises (
                 exceptions::SystemException,
                 exceptions::CommunicationException,
                 exceptions::AuthorizationException,
                 exceptions::DataValidationException,
                 exceptions::NotAcceptedException,
                 exceptions::TransactionFailedException
             );
    };

    interface TMSUserSessionManager : cmiV4:: UserSessionManagerV4 {
         TradeMaintenanceService getTradeMaintenanceService()
             raises(
             	 exceptions::SystemException,
                 exceptions::CommunicationException,
                 exceptions::AuthorizationException
             );
    };

   interface UserAccessTMS
   {
        TMSUserSessionManager logon(
            in cmiUser::UserLogonStruct logonStruct,
            in cmiSession::LoginSessionType sessionType,
            in cmiCallback::CMIUserSessionAdmin clientListener,
            in boolean gmdTextMessaging )
            raises(
                exceptions::SystemException,
                exceptions::CommunicationException,
                exceptions::AuthorizationException,
                exceptions::AuthenticationException,
                exceptions::DataValidationException,
                exceptions::NotFoundException
            );
     };

};
#endif
