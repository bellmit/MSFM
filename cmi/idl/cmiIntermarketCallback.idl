#ifndef CMI_INTERMARKET_CALLBACKS_IDL
#define CMI_INTERMARKET_CALLBACKS_IDL
//---------------------------------------------------------------------------------------------
// Company:      Chicago Board Options Exchange
// Version:      Version 5.0
//
// Copyright © 1999-2006 by the Chicago Board Options Exchange ("CBOE"), as an unpublished work.
// The information contained in this software program constitutes confidential and/or trade
// secret information belonging to CBOE. This software program is made available to
// CBOE members and member firms to enable them to develop software applications using
// the CBOE Market Interface (CMi), and its use is subject to the terms and conditions
// of a Software License Agreement that governs its use. This document is provided "AS IS"
// with all faults and without warranty of any kind, either express or implied.
//---------------------------------------------------------------------------------------------


#include "cmiIntermarketMessages.idl"
#include "cmiUtil.idl"
#include "cmiOrder.idl"
#include "cmiAdmin.idl"
#pragma javaPackage "com.cboe.idl"

module cmiIntermarketCallback
{
    interface CMIIntermarketOrderStatusConsumer
    {
        void acceptNewHeldOrder(
            in cmiIntermarketMessages::HeldOrderDetailStruct heldOrder);

        void acceptCancelHeldOrderRequest(
            in cmiProduct::ProductKeysStruct productKeys,
            in cmiIntermarketMessages::HeldOrderCancelRequestStruct cancelRequestStruct );

        void acceptHeldOrderStatus(
            in cmiIntermarketMessages::HeldOrderDetailStructSequence heldOrders);

        void acceptHeldOrderCanceledReport(
            in cmiIntermarketMessages::HeldOrderCancelReportStruct canceledReport );

        void acceptHeldOrderFilledReport(
            in cmiIntermarketMessages::HeldOrderFilledReportStruct filledReport );

        void acceptFillRejectReport(
            in cmiIntermarketMessages::OrderFillRejectStruct orderFillReject);
    };

    interface CMINBBOAgentSessionAdmin
    {
         void acceptForcedOut(
             in string reason,
             in cmiProduct::ClassKey classKey,
             in cmiSession::TradingSessionName session );

         void acceptReminder(
             in cmiIntermarketMessages::OrderReminderStruct reminder,
             in cmiProduct::ClassKey classKey,
             in cmiSession::TradingSessionName session );

         void acceptSatisfactionAlert(
             in cmiIntermarketMessages::SatisfactionAlertStruct alert,
             in cmiProduct::ClassKey classKey,
             in cmiSession::TradingSessionName session );

         void acceptIntermarketAdminMessage(
             in cmiSession::TradingSessionName session,
             in cmiUser::Exchange originatingExchange,
             in cmiProduct::ProductKeysStruct productKeys,
             in cmiIntermarketMessages::AdminStruct adminMessage);

         void acceptBroadcastIntermarketAdminMessage(
             in cmiSession::TradingSessionName session,
             in cmiUser::Exchange originatingExchange,
             in cmiIntermarketMessages::AdminStruct adminMessage);
    };

};
#endif
