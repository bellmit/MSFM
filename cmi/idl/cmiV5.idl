#ifndef CMI_V5_IDL
#define CMI_V5_IDL
//---------------------------------------------------------------------------------------------
// Company:      Chicago Board Options Exchange
// Version:      Version 5.0
//
// Copyright © 1999-2006 by the Chicago Board Options Exchange ("CBOE"), as an unpublished work.
// The information contained in this software program constitutes confidential and/or trade
// secret information belonging to CBOE. This software program is made available to
// CBOE members and member firms to enable them to develop software applications using
// the CBOE Market Interface (CMi), and its use is subject to the terms and conditions
// of a Software License Agreement that governs its use. This document is provided "AS IS"
// with all faults and without warranty of any kind, either Express or implied.
//---------------------------------------------------------------------------------------------

#include "cmiTradeMaintenanceService.idl"
#include "cmiProduct.idl"

#pragma javaPackage "com.cboe.idl"

module cmiV5
{
    interface OrderEntry : cmiV3::OrderEntry
    {
         cmiOrder::InternalizationOrderResultStruct acceptInternalizationStrategyOrder(
            in cmiOrder::OrderEntryStruct primaryOrder,
            in cmiOrder::LegOrderEntryStructSequence primaryOrderLegEntries,
            in cmiOrder::OrderEntryStruct matchOrder,
            in cmiOrder::LegOrderEntryStructSequence matchOrderLegEntries,
            in cmiOrder::MatchType matchType)
                raises(
                    exceptions::SystemException,
                    exceptions::CommunicationException,
                    exceptions::AuthorizationException,
                    exceptions::DataValidationException,
                    exceptions::NotAcceptedException,
                    exceptions::TransactionFailedException
                );
    };

    interface UserTradingParameters : cmi::UserTradingParameters
    {
		cmiUtil::KeyValueStructSequence getUserRateSettings(in string sessionName)
			raises(
				exceptions::SystemException,
				exceptions::CommunicationException,
				exceptions::AuthorizationException,
				exceptions::DataValidationException
			);
    };

    
    interface Quote : cmiV3::Quote
    {
        void cancelQuoteV5(
            	in cmiSession::TradingSessionName sessionName, 
		in cmiProduct::ProductKey productKey,
		in boolean sendCancelReport)
                raises(
                    exceptions::SystemException,
                    exceptions::CommunicationException,
                    exceptions::AuthorizationException,
                    exceptions::DataValidationException,
                    exceptions::TransactionFailedException,
                    exceptions::NotAcceptedException,
                    exceptions::NotFoundException
                );

        void cancelQuotesByClassV5(
            	in cmiSession::TradingSessionName sessionName,
            	in cmiProduct::ClassKey classKey, 
		in boolean sendCancelReports)
                raises(
                    exceptions::SystemException,
                    exceptions::CommunicationException,
                    exceptions::AuthorizationException,
                    exceptions::DataValidationException,
                    exceptions::TransactionFailedException,
                    exceptions::NotAcceptedException,
                    exceptions::NotFoundException
                );

        void cancelAllQuotesV5(
            	in cmiSession::TradingSessionName sessionName, 
		in boolean sendCancelReports)
                raises(
                    exceptions::SystemException,
                    exceptions::CommunicationException,
                    exceptions::AuthorizationException,
                    exceptions::DataValidationException,
                    exceptions::NotAcceptedException,
                    exceptions::TransactionFailedException
                );
    };

    interface UserSessionManagerV5 : cmiTradeMaintenanceService::TMSUserSessionManager  
    {
        cmiV5::OrderEntry   getOrderEntryV5()
            raises(
                exceptions::SystemException,
                exceptions::CommunicationException,
                exceptions::AuthorizationException
            );
			
        cmiV5::UserTradingParameters getUserTradingParametersV5()
                raises(
                    exceptions::SystemException,
                    exceptions::CommunicationException,
                    exceptions::AuthorizationException
                );			

        cmiV5::Quote getQuoteV5()
            raises(
                exceptions::SystemException,
                exceptions::CommunicationException,
                exceptions::AuthorizationException
            );

    };

    interface UserAccessV5
    {
        UserSessionManagerV5 logon(
            in cmiUser::UserLogonStruct logonStruct,
            in cmiSession::LoginSessionType sessionType,
            in cmiCallback::CMIUserSessionAdmin clientListener,
            in boolean gmdTextMessaging )
                raises(
                    exceptions::SystemException,
                    exceptions::CommunicationException,
                    exceptions::AuthorizationException,
                    exceptions::AuthenticationException,
                    exceptions::DataValidationException,
                    exceptions::NotFoundException
                );

     };

};
#endif

