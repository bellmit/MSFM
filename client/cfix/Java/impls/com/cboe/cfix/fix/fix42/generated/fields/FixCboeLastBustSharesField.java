package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixCboeLastBustSharesField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [9368] (known as CboeLastBustShares).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixCboeLastBustSharesField implements FixFieldIF, HasIntValueIF
{   
    public static final int    TagID         =  9368;
    public static final String TagIDAsString = "9368";
    public static final char[] TagIDAsChars  = {'9','3','6','8'};
    public static final String TagName       = "CboeLastBustShares";
    public static final String TagFixType    = "INT";
    public static final char[]  taggedchars_value0 = {'9','3','6','8', EQUALSchar, ZEROchar, SOHchar};
    public static final char[]  taggedchars_value1 = {'9','3','6','8', EQUALSchar, ONEchar,  SOHchar};

    public static final int     None                  = 0;
    public static final String  string_None           = "0";
    public static final String  tagged_None           = TagIDAsString + EQUALS + string_None + SOH;
    public static final char[]  taggedchars_None      = {'9','3','6','8', EQUALSchar, '0', SOHchar};
    public static final String  text_None             = "None";
    public static final int     Local                 = 1;
    public static final String  string_Local          = "1";
    public static final String  tagged_Local          = TagIDAsString + EQUALS + string_Local + SOH;
    public static final char[]  taggedchars_Local     = {'9','3','6','8', EQUALSchar, '1', SOHchar};
    public static final String  text_Local            = "Local";
    public static final int     National              = 2;
    public static final String  string_National       = "2";
    public static final String  tagged_National       = TagIDAsString + EQUALS + string_National + SOH;
    public static final char[]  taggedchars_National  = {'9','3','6','8', EQUALSchar, '2', SOHchar};
    public static final String  text_National         = "National";

    private static FixCboeLastBustSharesField flyweightNone;
    public static final FixCboeLastBustSharesField flyweightNone()
    {
        if (flyweightNone == null)
        {
            synchronized(FixCboeLastBustSharesField.class)
            {
                if (flyweightNone == null)
                {
                    flyweightNone  = new FixCboeLastBustSharesField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_None;}
                     public String  getValueDescription()             {return text_None;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_None).append("|").append(text_None).append("]").toString();}
                     public boolean isNone()                          {return true;}
                     public int     intValue()                        {return None;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_None);}
                    };
                }
            }
        }

        return flyweightNone;
    }

    private static FixCboeLastBustSharesField flyweightLocal;
    public static final FixCboeLastBustSharesField flyweightLocal()
    {
        if (flyweightLocal == null)
        {
            synchronized(FixCboeLastBustSharesField.class)
            {
                if (flyweightLocal == null)
                {
                    flyweightLocal  = new FixCboeLastBustSharesField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Local;}
                     public String  getValueDescription()             {return text_Local;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Local).append("|").append(text_Local).append("]").toString();}
                     public boolean isLocal()                         {return true;}
                     public int     intValue()                        {return Local;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Local);}
                    };
                }
            }
        }

        return flyweightLocal;
    }

    private static FixCboeLastBustSharesField flyweightNational;
    public static final FixCboeLastBustSharesField flyweightNational()
    {
        if (flyweightNational == null)
        {
            synchronized(FixCboeLastBustSharesField.class)
            {
                if (flyweightNational == null)
                {
                    flyweightNational  = new FixCboeLastBustSharesField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_National;}
                     public String  getValueDescription()             {return text_National;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_National).append("|").append(text_National).append("]").toString();}
                     public boolean isNational()                      {return true;}
                     public int     intValue()                        {return National;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_National);}
                    };
                }
            }
        }

        return flyweightNational;
    }


    public boolean isNone()       {return false;}
    public boolean isLocal()      {return false;}
    public boolean isNational()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixCboeLastBustSharesField create(char[] array, int offset, int length)
    {
        int param = IntegerHelper.parseInt(array, offset, length);
        if (param == IntegerHelper.INVALID_VALUE)
        {
            return null;
        }
        return create(param);
    }

    public static FixCboeLastBustSharesField create(final int param)
    {
        switch (param)
        {                                                                                           
            case None:     return flyweightNone();
            case Local:    return flyweightLocal();
            case National: return flyweightNational();
        }
                                                                                                    
        return null;
    }                                                                                               
}
