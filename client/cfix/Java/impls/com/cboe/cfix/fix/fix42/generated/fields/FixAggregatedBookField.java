package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixAggregatedBookField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [266] (known as AggregatedBook).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;

public abstract class FixAggregatedBookField implements FixFieldIF, HasBooleanValueIF
{   
    public static final int    TagID         =  266;
    public static final String TagIDAsString = "266";
    public static final char[] TagIDAsChars  = {'2','6','6'};
    public static final String TagName       = "AggregatedBook";
    public static final String TagFixType    = "BOOLEAN";

    public static final boolean OneBookEntryPerSidePerPrice                        = true;
    public static final String  string_OneBookEntryPerSidePerPrice                 = FIX_YES;
    public static final String  tagged_OneBookEntryPerSidePerPrice                 = TagIDAsString + EQUALS + string_OneBookEntryPerSidePerPrice + SOH;
    public static final char    char_OneBookEntryPerSidePerPrice                   = 'Y';
    public static final char[]  taggedchars_OneBookEntryPerSidePerPrice            = {'2','6','6', EQUALSchar, 'Y', SOHchar};
    public static final String  text_OneBookEntryPerSidePerPrice                   = "OneBookEntryPerSidePerPrice";
    public static final boolean MultipleEntriesPerSidePerPriceAllowed              = false;
    public static final String  string_MultipleEntriesPerSidePerPriceAllowed       = FIX_NO;
    public static final String  tagged_MultipleEntriesPerSidePerPriceAllowed       = TagIDAsString + EQUALS + string_MultipleEntriesPerSidePerPriceAllowed + SOH;
    public static final char    char_MultipleEntriesPerSidePerPriceAllowed         = 'N';
    public static final char[]  taggedchars_MultipleEntriesPerSidePerPriceAllowed  = {'2','6','6', EQUALSchar, 'N', SOHchar};
    public static final String  text_MultipleEntriesPerSidePerPriceAllowed         = "MultipleEntriesPerSidePerPriceAllowed";

    private static FixAggregatedBookField flyweightOneBookEntryPerSidePerPrice;
    public static final FixAggregatedBookField flyweightOneBookEntryPerSidePerPrice()
    {
        if (flyweightOneBookEntryPerSidePerPrice == null)
        {
            synchronized(FixAggregatedBookField.class)
            {
                if (flyweightOneBookEntryPerSidePerPrice == null)
                {
                    flyweightOneBookEntryPerSidePerPrice  = new FixAggregatedBookField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_OneBookEntryPerSidePerPrice;}
                     public String  getValueDescription()                       {return text_OneBookEntryPerSidePerPrice;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_OneBookEntryPerSidePerPrice).append("|").append(text_OneBookEntryPerSidePerPrice).append("]").toString();}
                     public boolean isOneBookEntryPerSidePerPrice()             {return true;}
                     public boolean booleanValue()                              {return OneBookEntryPerSidePerPrice;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_OneBookEntryPerSidePerPrice);}
                    };
                }
            }
        }

        return flyweightOneBookEntryPerSidePerPrice;
    }

    private static FixAggregatedBookField flyweightMultipleEntriesPerSidePerPriceAllowed;
    public static final FixAggregatedBookField flyweightMultipleEntriesPerSidePerPriceAllowed()
    {
        if (flyweightMultipleEntriesPerSidePerPriceAllowed == null)
        {
            synchronized(FixAggregatedBookField.class)
            {
                if (flyweightMultipleEntriesPerSidePerPriceAllowed == null)
                {
                    flyweightMultipleEntriesPerSidePerPriceAllowed  = new FixAggregatedBookField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_MultipleEntriesPerSidePerPriceAllowed;}
                     public String  getValueDescription()                       {return text_MultipleEntriesPerSidePerPriceAllowed;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MultipleEntriesPerSidePerPriceAllowed).append("|").append(text_MultipleEntriesPerSidePerPriceAllowed).append("]").toString();}
                     public boolean isMultipleEntriesPerSidePerPriceAllowed()   {return true;}
                     public boolean booleanValue()                              {return MultipleEntriesPerSidePerPriceAllowed;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MultipleEntriesPerSidePerPriceAllowed);}
                    };
                }
            }
        }

        return flyweightMultipleEntriesPerSidePerPriceAllowed;
    }


    public boolean isOneBookEntryPerSidePerPrice()             {return false;}
    public boolean isMultipleEntriesPerSidePerPriceAllowed()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixAggregatedBookField create(char[] array, int offset, int length)
    {
        if (length == 1)
        {                                                                                           
            if (array[offset] == char_OneBookEntryPerSidePerPrice)           return flyweightOneBookEntryPerSidePerPrice();
            if (array[offset] == char_MultipleEntriesPerSidePerPriceAllowed) return flyweightMultipleEntriesPerSidePerPriceAllowed();
        }
        return null;
    }

    public static final char[] truefalse_Flyweight  = new char[] {FixFieldIF.FIX_YESchar, FixFieldIF.FIX_NOchar};
    public static FixAggregatedBookField create(boolean param)
    {
        return create(truefalse_Flyweight, param ? 0 : 1, 1);
    }                                                                                               
}
