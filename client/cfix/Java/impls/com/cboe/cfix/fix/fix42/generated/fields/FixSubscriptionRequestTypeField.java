package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixSubscriptionRequestTypeField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [263] (known as SubscriptionRequestType).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixSubscriptionRequestTypeField implements FixFieldIF, HasCharValueIF
{   
    public static final int    TagID         =  263;
    public static final String TagIDAsString = "263";
    public static final char[] TagIDAsChars  = {'2','6','3'};
    public static final String TagName       = "SubscriptionRequestType";
    public static final String TagFixType    = "CHAR";

    public static final char    Snapshot                         = '0';
    public static final String  string_Snapshot                  = "0";
    public static final String  tagged_Snapshot                  = TagIDAsString + EQUALS + string_Snapshot + SOH;
    public static final char[]  taggedchars_Snapshot             = {'2','6','3', EQUALSchar, '0', SOHchar};
    public static final String  text_Snapshot                    = "Snapshot";
    public static final char    SnapshotPlusUpdates              = '1';
    public static final String  string_SnapshotPlusUpdates       = "1";
    public static final String  tagged_SnapshotPlusUpdates       = TagIDAsString + EQUALS + string_SnapshotPlusUpdates + SOH;
    public static final char[]  taggedchars_SnapshotPlusUpdates  = {'2','6','3', EQUALSchar, '1', SOHchar};
    public static final String  text_SnapshotPlusUpdates         = "SnapshotPlusUpdates";
    public static final char    DisablePrevious                  = '2';
    public static final String  string_DisablePrevious           = "2";
    public static final String  tagged_DisablePrevious           = TagIDAsString + EQUALS + string_DisablePrevious + SOH;
    public static final char[]  taggedchars_DisablePrevious      = {'2','6','3', EQUALSchar, '2', SOHchar};
    public static final String  text_DisablePrevious             = "DisablePrevious";

    private static FixSubscriptionRequestTypeField flyweightSnapshot;
    public static final FixSubscriptionRequestTypeField flyweightSnapshot()
    {
        if (flyweightSnapshot == null)
        {
            synchronized(FixSubscriptionRequestTypeField.class)
            {
                if (flyweightSnapshot == null)
                {
                    flyweightSnapshot  = new FixSubscriptionRequestTypeField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Snapshot;}
                     public String  getValueDescription()             {return text_Snapshot;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Snapshot).append("|").append(text_Snapshot).append("]").toString();}
                     public boolean isSnapshot()                      {return true;}
                     public char    charValue()                       {return Snapshot;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Snapshot);}
                    };
                }
            }
        }

        return flyweightSnapshot;
    }

    private static FixSubscriptionRequestTypeField flyweightSnapshotPlusUpdates;
    public static final FixSubscriptionRequestTypeField flyweightSnapshotPlusUpdates()
    {
        if (flyweightSnapshotPlusUpdates == null)
        {
            synchronized(FixSubscriptionRequestTypeField.class)
            {
                if (flyweightSnapshotPlusUpdates == null)
                {
                    flyweightSnapshotPlusUpdates  = new FixSubscriptionRequestTypeField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_SnapshotPlusUpdates;}
                     public String  getValueDescription()             {return text_SnapshotPlusUpdates;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_SnapshotPlusUpdates).append("|").append(text_SnapshotPlusUpdates).append("]").toString();}
                     public boolean isSnapshotPlusUpdates()           {return true;}
                     public char    charValue()                       {return SnapshotPlusUpdates;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_SnapshotPlusUpdates);}
                    };
                }
            }
        }

        return flyweightSnapshotPlusUpdates;
    }

    private static FixSubscriptionRequestTypeField flyweightDisablePrevious;
    public static final FixSubscriptionRequestTypeField flyweightDisablePrevious()
    {
        if (flyweightDisablePrevious == null)
        {
            synchronized(FixSubscriptionRequestTypeField.class)
            {
                if (flyweightDisablePrevious == null)
                {
                    flyweightDisablePrevious  = new FixSubscriptionRequestTypeField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_DisablePrevious;}
                     public String  getValueDescription()             {return text_DisablePrevious;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_DisablePrevious).append("|").append(text_DisablePrevious).append("]").toString();}
                     public boolean isDisablePrevious()               {return true;}
                     public char    charValue()                       {return DisablePrevious;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_DisablePrevious);}
                    };
                }
            }
        }

        return flyweightDisablePrevious;
    }


    public boolean isSnapshot()              {return false;}
    public boolean isSnapshotPlusUpdates()   {return false;}
    public boolean isDisablePrevious()       {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixSubscriptionRequestTypeField create(char[] array, int offset, int length)
    {
        if (length == 1)
        {
            return create(array[offset]);
        }

        return null;
    }

    public static FixSubscriptionRequestTypeField create(final char param)
    {
        switch (param)
        {                                                                                           
            case Snapshot:            return flyweightSnapshot();
            case SnapshotPlusUpdates: return flyweightSnapshotPlusUpdates();
            case DisablePrevious:     return flyweightDisablePrevious();
        }
                                                                                                    
        return null;
    }                                                                                               
}
