package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixSecurityTypeField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [167] (known as SecurityType).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;

public abstract class FixSecurityTypeField implements FixFieldIF
{   
    public static final int    TagID         =  167;
    public static final String TagIDAsString = "167";
    public static final char[] TagIDAsChars  = {'1','6','7'};
    public static final String TagName       = "SecurityType";
    public static final String TagFixType    = "STRING";

    public static final String  BankersAcceptance                                  = "BA";
    public static final String  string_BankersAcceptance                           = BankersAcceptance;
    public static final char[]  chars_BankersAcceptance                            = {'B','A'};
    public static final String  tagged_BankersAcceptance                           = TagIDAsString + EQUALS + string_BankersAcceptance + SOH;
    public static final char[]  taggedchars_BankersAcceptance                      = {'1','6','7', EQUALSchar, 'B','A', SOHchar};
    public static final String  text_BankersAcceptance                             = "BankersAcceptance";
    public static final String  ConvertibleBond                                    = "CB";
    public static final String  string_ConvertibleBond                             = ConvertibleBond;
    public static final char[]  chars_ConvertibleBond                              = {'C','B'};
    public static final String  tagged_ConvertibleBond                             = TagIDAsString + EQUALS + string_ConvertibleBond + SOH;
    public static final char[]  taggedchars_ConvertibleBond                        = {'1','6','7', EQUALSchar, 'C','B', SOHchar};
    public static final String  text_ConvertibleBond                               = "ConvertibleBond";
    public static final String  CertificateOfDeposit                               = "CD";
    public static final String  string_CertificateOfDeposit                        = CertificateOfDeposit;
    public static final char[]  chars_CertificateOfDeposit                         = {'C','D'};
    public static final String  tagged_CertificateOfDeposit                        = TagIDAsString + EQUALS + string_CertificateOfDeposit + SOH;
    public static final char[]  taggedchars_CertificateOfDeposit                   = {'1','6','7', EQUALSchar, 'C','D', SOHchar};
    public static final String  text_CertificateOfDeposit                          = "CertificateOfDeposit";
    public static final String  CollateralizeMortgageObligation                    = "CMO";
    public static final String  string_CollateralizeMortgageObligation             = CollateralizeMortgageObligation;
    public static final char[]  chars_CollateralizeMortgageObligation              = {'C','M','O'};
    public static final String  tagged_CollateralizeMortgageObligation             = TagIDAsString + EQUALS + string_CollateralizeMortgageObligation + SOH;
    public static final char[]  taggedchars_CollateralizeMortgageObligation        = {'1','6','7', EQUALSchar, 'C','M','O', SOHchar};
    public static final String  text_CollateralizeMortgageObligation               = "CollateralizeMortgageObligation";
    public static final String  CorporateBond                                      = "CORP";
    public static final String  string_CorporateBond                               = CorporateBond;
    public static final char[]  chars_CorporateBond                                = {'C','O','R','P'};
    public static final String  tagged_CorporateBond                               = TagIDAsString + EQUALS + string_CorporateBond + SOH;
    public static final char[]  taggedchars_CorporateBond                          = {'1','6','7', EQUALSchar, 'C','O','R','P', SOHchar};
    public static final String  text_CorporateBond                                 = "CorporateBond";
    public static final String  CommercialPaper                                    = "CP";
    public static final String  string_CommercialPaper                             = CommercialPaper;
    public static final char[]  chars_CommercialPaper                              = {'C','P'};
    public static final String  tagged_CommercialPaper                             = TagIDAsString + EQUALS + string_CommercialPaper + SOH;
    public static final char[]  taggedchars_CommercialPaper                        = {'1','6','7', EQUALSchar, 'C','P', SOHchar};
    public static final String  text_CommercialPaper                               = "CommercialPaper";
    public static final String  CorporatePrivatePlacement                          = "CPP";
    public static final String  string_CorporatePrivatePlacement                   = CorporatePrivatePlacement;
    public static final char[]  chars_CorporatePrivatePlacement                    = {'C','P','P'};
    public static final String  tagged_CorporatePrivatePlacement                   = TagIDAsString + EQUALS + string_CorporatePrivatePlacement + SOH;
    public static final char[]  taggedchars_CorporatePrivatePlacement              = {'1','6','7', EQUALSchar, 'C','P','P', SOHchar};
    public static final String  text_CorporatePrivatePlacement                     = "CorporatePrivatePlacement";
    public static final String  CommonStock                                        = "CS";
    public static final String  string_CommonStock                                 = CommonStock;
    public static final char[]  chars_CommonStock                                  = {'C','S'};
    public static final String  tagged_CommonStock                                 = TagIDAsString + EQUALS + string_CommonStock + SOH;
    public static final char[]  taggedchars_CommonStock                            = {'1','6','7', EQUALSchar, 'C','S', SOHchar};
    public static final String  text_CommonStock                                   = "CommonStock";
    public static final String  FederalHousingAuthority                            = "FHA";
    public static final String  string_FederalHousingAuthority                     = FederalHousingAuthority;
    public static final char[]  chars_FederalHousingAuthority                      = {'F','H','A'};
    public static final String  tagged_FederalHousingAuthority                     = TagIDAsString + EQUALS + string_FederalHousingAuthority + SOH;
    public static final char[]  taggedchars_FederalHousingAuthority                = {'1','6','7', EQUALSchar, 'F','H','A', SOHchar};
    public static final String  text_FederalHousingAuthority                       = "FederalHousingAuthority";
    public static final String  FederalHomeLoan                                    = "FHL";
    public static final String  string_FederalHomeLoan                             = FederalHomeLoan;
    public static final char[]  chars_FederalHomeLoan                              = {'F','H','L'};
    public static final String  tagged_FederalHomeLoan                             = TagIDAsString + EQUALS + string_FederalHomeLoan + SOH;
    public static final char[]  taggedchars_FederalHomeLoan                        = {'1','6','7', EQUALSchar, 'F','H','L', SOHchar};
    public static final String  text_FederalHomeLoan                               = "FederalHomeLoan";
    public static final String  FederalNationalMortgageAssociation                 = "FN";
    public static final String  string_FederalNationalMortgageAssociation          = FederalNationalMortgageAssociation;
    public static final char[]  chars_FederalNationalMortgageAssociation           = {'F','N'};
    public static final String  tagged_FederalNationalMortgageAssociation          = TagIDAsString + EQUALS + string_FederalNationalMortgageAssociation + SOH;
    public static final char[]  taggedchars_FederalNationalMortgageAssociation     = {'1','6','7', EQUALSchar, 'F','N', SOHchar};
    public static final String  text_FederalNationalMortgageAssociation            = "FederalNationalMortgageAssociation";
    public static final String  ForeignExchangeContract                            = "FOR";
    public static final String  string_ForeignExchangeContract                     = ForeignExchangeContract;
    public static final char[]  chars_ForeignExchangeContract                      = {'F','O','R'};
    public static final String  tagged_ForeignExchangeContract                     = TagIDAsString + EQUALS + string_ForeignExchangeContract + SOH;
    public static final char[]  taggedchars_ForeignExchangeContract                = {'1','6','7', EQUALSchar, 'F','O','R', SOHchar};
    public static final String  text_ForeignExchangeContract                       = "ForeignExchangeContract";
    public static final String  Future                                             = "FUT";
    public static final String  string_Future                                      = Future;
    public static final char[]  chars_Future                                       = {'F','U','T'};
    public static final String  tagged_Future                                      = TagIDAsString + EQUALS + string_Future + SOH;
    public static final char[]  taggedchars_Future                                 = {'1','6','7', EQUALSchar, 'F','U','T', SOHchar};
    public static final String  text_Future                                        = "Future";
    public static final String  GovernmentNationalMortgageAssociation              = "GN";
    public static final String  string_GovernmentNationalMortgageAssociation       = GovernmentNationalMortgageAssociation;
    public static final char[]  chars_GovernmentNationalMortgageAssociation        = {'G','N'};
    public static final String  tagged_GovernmentNationalMortgageAssociation       = TagIDAsString + EQUALS + string_GovernmentNationalMortgageAssociation + SOH;
    public static final char[]  taggedchars_GovernmentNationalMortgageAssociation  = {'1','6','7', EQUALSchar, 'G','N', SOHchar};
    public static final String  text_GovernmentNationalMortgageAssociation         = "GovernmentNationalMortgageAssociation";
    public static final String  TreasuriesPlusAgencyDebenture                      = "GOVT";
    public static final String  string_TreasuriesPlusAgencyDebenture               = TreasuriesPlusAgencyDebenture;
    public static final char[]  chars_TreasuriesPlusAgencyDebenture                = {'G','O','V','T'};
    public static final String  tagged_TreasuriesPlusAgencyDebenture               = TagIDAsString + EQUALS + string_TreasuriesPlusAgencyDebenture + SOH;
    public static final char[]  taggedchars_TreasuriesPlusAgencyDebenture          = {'1','6','7', EQUALSchar, 'G','O','V','T', SOHchar};
    public static final String  text_TreasuriesPlusAgencyDebenture                 = "TreasuriesPlusAgencyDebenture";
    public static final String  MutualFund                                         = "MF";
    public static final String  string_MutualFund                                  = MutualFund;
    public static final char[]  chars_MutualFund                                   = {'M','F'};
    public static final String  tagged_MutualFund                                  = TagIDAsString + EQUALS + string_MutualFund + SOH;
    public static final char[]  taggedchars_MutualFund                             = {'1','6','7', EQUALSchar, 'M','F', SOHchar};
    public static final String  text_MutualFund                                    = "MutualFund";
    public static final String  MortgageInterestOnly                               = "MIO";
    public static final String  string_MortgageInterestOnly                        = MortgageInterestOnly;
    public static final char[]  chars_MortgageInterestOnly                         = {'M','I','O'};
    public static final String  tagged_MortgageInterestOnly                        = TagIDAsString + EQUALS + string_MortgageInterestOnly + SOH;
    public static final char[]  taggedchars_MortgageInterestOnly                   = {'1','6','7', EQUALSchar, 'M','I','O', SOHchar};
    public static final String  text_MortgageInterestOnly                          = "MortgageInterestOnly";
    public static final String  MortgagePrincipalOnly                              = "MPO";
    public static final String  string_MortgagePrincipalOnly                       = MortgagePrincipalOnly;
    public static final char[]  chars_MortgagePrincipalOnly                        = {'M','P','O'};
    public static final String  tagged_MortgagePrincipalOnly                       = TagIDAsString + EQUALS + string_MortgagePrincipalOnly + SOH;
    public static final char[]  taggedchars_MortgagePrincipalOnly                  = {'1','6','7', EQUALSchar, 'M','P','O', SOHchar};
    public static final String  text_MortgagePrincipalOnly                         = "MortgagePrincipalOnly";
    public static final String  MortgagePrivatePlacement                           = "MPP";
    public static final String  string_MortgagePrivatePlacement                    = MortgagePrivatePlacement;
    public static final char[]  chars_MortgagePrivatePlacement                     = {'M','P','P'};
    public static final String  tagged_MortgagePrivatePlacement                    = TagIDAsString + EQUALS + string_MortgagePrivatePlacement + SOH;
    public static final char[]  taggedchars_MortgagePrivatePlacement               = {'1','6','7', EQUALSchar, 'M','P','P', SOHchar};
    public static final String  text_MortgagePrivatePlacement                      = "MortgagePrivatePlacement";
    public static final String  MiscellaneousPassthru                              = "MPT";
    public static final String  string_MiscellaneousPassthru                       = MiscellaneousPassthru;
    public static final char[]  chars_MiscellaneousPassthru                        = {'M','P','T'};
    public static final String  tagged_MiscellaneousPassthru                       = TagIDAsString + EQUALS + string_MiscellaneousPassthru + SOH;
    public static final char[]  taggedchars_MiscellaneousPassthru                  = {'1','6','7', EQUALSchar, 'M','P','T', SOHchar};
    public static final String  text_MiscellaneousPassthru                         = "MiscellaneousPassthru";
    public static final String  MunicipalBond                                      = "MUNI";
    public static final String  string_MunicipalBond                               = MunicipalBond;
    public static final char[]  chars_MunicipalBond                                = {'M','U','N','I'};
    public static final String  tagged_MunicipalBond                               = TagIDAsString + EQUALS + string_MunicipalBond + SOH;
    public static final char[]  taggedchars_MunicipalBond                          = {'1','6','7', EQUALSchar, 'M','U','N','I', SOHchar};
    public static final String  text_MunicipalBond                                 = "MunicipalBond";
    public static final String  NoIsitcSecurityType                                = "NONE";
    public static final String  string_NoIsitcSecurityType                         = NoIsitcSecurityType;
    public static final char[]  chars_NoIsitcSecurityType                          = {'N','O','N','E'};
    public static final String  tagged_NoIsitcSecurityType                         = TagIDAsString + EQUALS + string_NoIsitcSecurityType + SOH;
    public static final char[]  taggedchars_NoIsitcSecurityType                    = {'1','6','7', EQUALSchar, 'N','O','N','E', SOHchar};
    public static final String  text_NoIsitcSecurityType                           = "NoIsitcSecurityType";
    public static final String  Option                                             = "OPT";
    public static final String  string_Option                                      = Option;
    public static final char[]  chars_Option                                       = {'O','P','T'};
    public static final String  tagged_Option                                      = TagIDAsString + EQUALS + string_Option + SOH;
    public static final char[]  taggedchars_Option                                 = {'1','6','7', EQUALSchar, 'O','P','T', SOHchar};
    public static final String  text_Option                                        = "Option";
    public static final String  PreferredStock                                     = "PS";
    public static final String  string_PreferredStock                              = PreferredStock;
    public static final char[]  chars_PreferredStock                               = {'P','S'};
    public static final String  tagged_PreferredStock                              = TagIDAsString + EQUALS + string_PreferredStock + SOH;
    public static final char[]  taggedchars_PreferredStock                         = {'1','6','7', EQUALSchar, 'P','S', SOHchar};
    public static final String  text_PreferredStock                                = "PreferredStock";
    public static final String  RepurchaseAgreement                                = "RP";
    public static final String  string_RepurchaseAgreement                         = RepurchaseAgreement;
    public static final char[]  chars_RepurchaseAgreement                          = {'R','P'};
    public static final String  tagged_RepurchaseAgreement                         = TagIDAsString + EQUALS + string_RepurchaseAgreement + SOH;
    public static final char[]  taggedchars_RepurchaseAgreement                    = {'1','6','7', EQUALSchar, 'R','P', SOHchar};
    public static final String  text_RepurchaseAgreement                           = "RepurchaseAgreement";
    public static final String  ReverseRepurchaseAgreement                         = "RVRP";
    public static final String  string_ReverseRepurchaseAgreement                  = ReverseRepurchaseAgreement;
    public static final char[]  chars_ReverseRepurchaseAgreement                   = {'R','V','R','P'};
    public static final String  tagged_ReverseRepurchaseAgreement                  = TagIDAsString + EQUALS + string_ReverseRepurchaseAgreement + SOH;
    public static final char[]  taggedchars_ReverseRepurchaseAgreement             = {'1','6','7', EQUALSchar, 'R','V','R','P', SOHchar};
    public static final String  text_ReverseRepurchaseAgreement                    = "ReverseRepurchaseAgreement";
    public static final String  StudentLoanMarketingAssociation                    = "SL";
    public static final String  string_StudentLoanMarketingAssociation             = StudentLoanMarketingAssociation;
    public static final char[]  chars_StudentLoanMarketingAssociation              = {'S','L'};
    public static final String  tagged_StudentLoanMarketingAssociation             = TagIDAsString + EQUALS + string_StudentLoanMarketingAssociation + SOH;
    public static final char[]  taggedchars_StudentLoanMarketingAssociation        = {'1','6','7', EQUALSchar, 'S','L', SOHchar};
    public static final String  text_StudentLoanMarketingAssociation               = "StudentLoanMarketingAssociation";
    public static final String  TimeDeposit                                        = "TD";
    public static final String  string_TimeDeposit                                 = TimeDeposit;
    public static final char[]  chars_TimeDeposit                                  = {'T','D'};
    public static final String  tagged_TimeDeposit                                 = TagIDAsString + EQUALS + string_TimeDeposit + SOH;
    public static final char[]  taggedchars_TimeDeposit                            = {'1','6','7', EQUALSchar, 'T','D', SOHchar};
    public static final String  text_TimeDeposit                                   = "TimeDeposit";
    public static final String  UsTreasuryBill                                     = "USTB";
    public static final String  string_UsTreasuryBill                              = UsTreasuryBill;
    public static final char[]  chars_UsTreasuryBill                               = {'U','S','T','B'};
    public static final String  tagged_UsTreasuryBill                              = TagIDAsString + EQUALS + string_UsTreasuryBill + SOH;
    public static final char[]  taggedchars_UsTreasuryBill                         = {'1','6','7', EQUALSchar, 'U','S','T','B', SOHchar};
    public static final String  text_UsTreasuryBill                                = "UsTreasuryBill";
    public static final String  Warrant                                            = "WAR";
    public static final String  string_Warrant                                     = Warrant;
    public static final char[]  chars_Warrant                                      = {'W','A','R'};
    public static final String  tagged_Warrant                                     = TagIDAsString + EQUALS + string_Warrant + SOH;
    public static final char[]  taggedchars_Warrant                                = {'1','6','7', EQUALSchar, 'W','A','R', SOHchar};
    public static final String  text_Warrant                                       = "Warrant";
    public static final String  CatsTigers                                         = "ZOO";
    public static final String  string_CatsTigers                                  = CatsTigers;
    public static final char[]  chars_CatsTigers                                   = {'Z','O','O'};
    public static final String  tagged_CatsTigers                                  = TagIDAsString + EQUALS + string_CatsTigers + SOH;
    public static final char[]  taggedchars_CatsTigers                             = {'1','6','7', EQUALSchar, 'Z','O','O', SOHchar};
    public static final String  text_CatsTigers                                    = "CatsTigers";
    public static final String  MultiLeg                                           = "MLEG";
    public static final String  string_MultiLeg                                    = MultiLeg;
    public static final char[]  chars_MultiLeg                                     = {'M','L','E','G'};
    public static final String  tagged_MultiLeg                                    = TagIDAsString + EQUALS + string_MultiLeg + SOH;
    public static final char[]  taggedchars_MultiLeg                               = {'1','6','7', EQUALSchar, 'M','L','E','G', SOHchar};
    public static final String  text_MultiLeg                                      = "MultiLeg";
    public static final String  Index                                              = "INDX";
    public static final String  string_Index                                       = Index;
    public static final char[]  chars_Index                                        = {'I','N','D','X'};
    public static final String  tagged_Index                                       = TagIDAsString + EQUALS + string_Index + SOH;
    public static final char[]  taggedchars_Index                                  = {'1','6','7', EQUALSchar, 'I','N','D','X', SOHchar};
    public static final String  text_Index                                         = "Index";
    public static final String  Commodity                                          = "CMDTY";
    public static final String  string_Commodity                                   = Commodity;
    public static final char[]  chars_Commodity                                    = {'C','M','D','T','Y'};
    public static final String  tagged_Commodity                                   = TagIDAsString + EQUALS + string_Commodity + SOH;
    public static final char[]  taggedchars_Commodity                              = {'1','6','7', EQUALSchar, 'C','M','D','T','Y', SOHchar};
    public static final String  text_Commodity                                     = "Commodity";
    public static final String  Debt                                               = "DEBT";
    public static final String  string_Debt                                        = Debt;
    public static final char[]  chars_Debt                                         = {'D','E','B','T'};
    public static final String  tagged_Debt                                        = TagIDAsString + EQUALS + string_Debt + SOH;
    public static final char[]  taggedchars_Debt                                   = {'1','6','7', EQUALSchar, 'D','E','B','T', SOHchar};
    public static final String  text_Debt                                          = "Debt";
    public static final String  LinkedNote                                         = "LNKNT";
    public static final String  string_LinkedNote                                  = LinkedNote;
    public static final char[]  chars_LinkedNote                                   = {'L','N','K','N','T'};
    public static final String  tagged_LinkedNote                                  = TagIDAsString + EQUALS + string_LinkedNote + SOH;
    public static final char[]  taggedchars_LinkedNote                             = {'1','6','7', EQUALSchar, 'L','N','K','N','T', SOHchar};
    public static final String  text_LinkedNote                                    = "LinkedNote";
    public static final String  UnitInvestmentTrust                                = "UIT";
    public static final String  string_UnitInvestmentTrust                         = UnitInvestmentTrust;
    public static final char[]  chars_UnitInvestmentTrust                          = {'U','I','T'};
    public static final String  tagged_UnitInvestmentTrust                         = TagIDAsString + EQUALS + string_UnitInvestmentTrust + SOH;
    public static final char[]  taggedchars_UnitInvestmentTrust                    = {'1','6','7', EQUALSchar, 'U','I','T', SOHchar};
    public static final String  text_UnitInvestmentTrust                           = "UnitInvestmentTrust";
    public static final String  VolatilityIndex                                    = "VIX";
    public static final String  string_VolatilityIndex                             = VolatilityIndex;
    public static final char[]  chars_VolatilityIndex                              = {'V','I','X'};
    public static final String  tagged_VolatilityIndex                             = TagIDAsString + EQUALS + string_VolatilityIndex + SOH;
    public static final char[]  taggedchars_VolatilityIndex                        = {'1','6','7', EQUALSchar, 'V','I','X', SOHchar};
    public static final String  text_VolatilityIndex                               = "VolatilityIndex";

    private static FixSecurityTypeField flyweightBankersAcceptance;
    public static final FixSecurityTypeField flyweightBankersAcceptance()
    {
        if (flyweightBankersAcceptance == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightBankersAcceptance == null)
                {
                    flyweightBankersAcceptance  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_BankersAcceptance;}
                     public String  getValueDescription()                       {return text_BankersAcceptance;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_BankersAcceptance).append("|").append(text_BankersAcceptance).append("]").toString();}
                     public boolean isBankersAcceptance()                       {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_BankersAcceptance);}
                    };
                }
            }
        }

        return flyweightBankersAcceptance;
    }

    private static FixSecurityTypeField flyweightConvertibleBond;
    public static final FixSecurityTypeField flyweightConvertibleBond()
    {
        if (flyweightConvertibleBond == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightConvertibleBond == null)
                {
                    flyweightConvertibleBond  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_ConvertibleBond;}
                     public String  getValueDescription()                       {return text_ConvertibleBond;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ConvertibleBond).append("|").append(text_ConvertibleBond).append("]").toString();}
                     public boolean isConvertibleBond()                         {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ConvertibleBond);}
                    };
                }
            }
        }

        return flyweightConvertibleBond;
    }

    private static FixSecurityTypeField flyweightCertificateOfDeposit;
    public static final FixSecurityTypeField flyweightCertificateOfDeposit()
    {
        if (flyweightCertificateOfDeposit == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightCertificateOfDeposit == null)
                {
                    flyweightCertificateOfDeposit  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_CertificateOfDeposit;}
                     public String  getValueDescription()                       {return text_CertificateOfDeposit;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CertificateOfDeposit).append("|").append(text_CertificateOfDeposit).append("]").toString();}
                     public boolean isCertificateOfDeposit()                    {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CertificateOfDeposit);}
                    };
                }
            }
        }

        return flyweightCertificateOfDeposit;
    }

    private static FixSecurityTypeField flyweightCollateralizeMortgageObligation;
    public static final FixSecurityTypeField flyweightCollateralizeMortgageObligation()
    {
        if (flyweightCollateralizeMortgageObligation == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightCollateralizeMortgageObligation == null)
                {
                    flyweightCollateralizeMortgageObligation  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_CollateralizeMortgageObligation;}
                     public String  getValueDescription()                       {return text_CollateralizeMortgageObligation;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CollateralizeMortgageObligation).append("|").append(text_CollateralizeMortgageObligation).append("]").toString();}
                     public boolean isCollateralizeMortgageObligation()         {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CollateralizeMortgageObligation);}
                    };
                }
            }
        }

        return flyweightCollateralizeMortgageObligation;
    }

    private static FixSecurityTypeField flyweightCorporateBond;
    public static final FixSecurityTypeField flyweightCorporateBond()
    {
        if (flyweightCorporateBond == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightCorporateBond == null)
                {
                    flyweightCorporateBond  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_CorporateBond;}
                     public String  getValueDescription()                       {return text_CorporateBond;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CorporateBond).append("|").append(text_CorporateBond).append("]").toString();}
                     public boolean isCorporateBond()                           {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CorporateBond);}
                    };
                }
            }
        }

        return flyweightCorporateBond;
    }

    private static FixSecurityTypeField flyweightCommercialPaper;
    public static final FixSecurityTypeField flyweightCommercialPaper()
    {
        if (flyweightCommercialPaper == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightCommercialPaper == null)
                {
                    flyweightCommercialPaper  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_CommercialPaper;}
                     public String  getValueDescription()                       {return text_CommercialPaper;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CommercialPaper).append("|").append(text_CommercialPaper).append("]").toString();}
                     public boolean isCommercialPaper()                         {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CommercialPaper);}
                    };
                }
            }
        }

        return flyweightCommercialPaper;
    }

    private static FixSecurityTypeField flyweightCorporatePrivatePlacement;
    public static final FixSecurityTypeField flyweightCorporatePrivatePlacement()
    {
        if (flyweightCorporatePrivatePlacement == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightCorporatePrivatePlacement == null)
                {
                    flyweightCorporatePrivatePlacement  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_CorporatePrivatePlacement;}
                     public String  getValueDescription()                       {return text_CorporatePrivatePlacement;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CorporatePrivatePlacement).append("|").append(text_CorporatePrivatePlacement).append("]").toString();}
                     public boolean isCorporatePrivatePlacement()               {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CorporatePrivatePlacement);}
                    };
                }
            }
        }

        return flyweightCorporatePrivatePlacement;
    }

    private static FixSecurityTypeField flyweightCommonStock;
    public static final FixSecurityTypeField flyweightCommonStock()
    {
        if (flyweightCommonStock == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightCommonStock == null)
                {
                    flyweightCommonStock  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_CommonStock;}
                     public String  getValueDescription()                       {return text_CommonStock;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CommonStock).append("|").append(text_CommonStock).append("]").toString();}
                     public boolean isCommonStock()                             {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CommonStock);}
                    };
                }
            }
        }

        return flyweightCommonStock;
    }

    private static FixSecurityTypeField flyweightFederalHousingAuthority;
    public static final FixSecurityTypeField flyweightFederalHousingAuthority()
    {
        if (flyweightFederalHousingAuthority == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightFederalHousingAuthority == null)
                {
                    flyweightFederalHousingAuthority  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_FederalHousingAuthority;}
                     public String  getValueDescription()                       {return text_FederalHousingAuthority;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_FederalHousingAuthority).append("|").append(text_FederalHousingAuthority).append("]").toString();}
                     public boolean isFederalHousingAuthority()                 {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_FederalHousingAuthority);}
                    };
                }
            }
        }

        return flyweightFederalHousingAuthority;
    }

    private static FixSecurityTypeField flyweightFederalHomeLoan;
    public static final FixSecurityTypeField flyweightFederalHomeLoan()
    {
        if (flyweightFederalHomeLoan == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightFederalHomeLoan == null)
                {
                    flyweightFederalHomeLoan  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_FederalHomeLoan;}
                     public String  getValueDescription()                       {return text_FederalHomeLoan;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_FederalHomeLoan).append("|").append(text_FederalHomeLoan).append("]").toString();}
                     public boolean isFederalHomeLoan()                         {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_FederalHomeLoan);}
                    };
                }
            }
        }

        return flyweightFederalHomeLoan;
    }

    private static FixSecurityTypeField flyweightFederalNationalMortgageAssociation;
    public static final FixSecurityTypeField flyweightFederalNationalMortgageAssociation()
    {
        if (flyweightFederalNationalMortgageAssociation == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightFederalNationalMortgageAssociation == null)
                {
                    flyweightFederalNationalMortgageAssociation  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_FederalNationalMortgageAssociation;}
                     public String  getValueDescription()                       {return text_FederalNationalMortgageAssociation;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_FederalNationalMortgageAssociation).append("|").append(text_FederalNationalMortgageAssociation).append("]").toString();}
                     public boolean isFederalNationalMortgageAssociation()      {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_FederalNationalMortgageAssociation);}
                    };
                }
            }
        }

        return flyweightFederalNationalMortgageAssociation;
    }

    private static FixSecurityTypeField flyweightForeignExchangeContract;
    public static final FixSecurityTypeField flyweightForeignExchangeContract()
    {
        if (flyweightForeignExchangeContract == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightForeignExchangeContract == null)
                {
                    flyweightForeignExchangeContract  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_ForeignExchangeContract;}
                     public String  getValueDescription()                       {return text_ForeignExchangeContract;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ForeignExchangeContract).append("|").append(text_ForeignExchangeContract).append("]").toString();}
                     public boolean isForeignExchangeContract()                 {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ForeignExchangeContract);}
                    };
                }
            }
        }

        return flyweightForeignExchangeContract;
    }

    private static FixSecurityTypeField flyweightFuture;
    public static final FixSecurityTypeField flyweightFuture()
    {
        if (flyweightFuture == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightFuture == null)
                {
                    flyweightFuture  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_Future;}
                     public String  getValueDescription()                       {return text_Future;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Future).append("|").append(text_Future).append("]").toString();}
                     public boolean isFuture()                                  {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Future);}
                    };
                }
            }
        }

        return flyweightFuture;
    }

    private static FixSecurityTypeField flyweightGovernmentNationalMortgageAssociation;
    public static final FixSecurityTypeField flyweightGovernmentNationalMortgageAssociation()
    {
        if (flyweightGovernmentNationalMortgageAssociation == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightGovernmentNationalMortgageAssociation == null)
                {
                    flyweightGovernmentNationalMortgageAssociation  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_GovernmentNationalMortgageAssociation;}
                     public String  getValueDescription()                       {return text_GovernmentNationalMortgageAssociation;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_GovernmentNationalMortgageAssociation).append("|").append(text_GovernmentNationalMortgageAssociation).append("]").toString();}
                     public boolean isGovernmentNationalMortgageAssociation()   {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_GovernmentNationalMortgageAssociation);}
                    };
                }
            }
        }

        return flyweightGovernmentNationalMortgageAssociation;
    }

    private static FixSecurityTypeField flyweightTreasuriesPlusAgencyDebenture;
    public static final FixSecurityTypeField flyweightTreasuriesPlusAgencyDebenture()
    {
        if (flyweightTreasuriesPlusAgencyDebenture == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightTreasuriesPlusAgencyDebenture == null)
                {
                    flyweightTreasuriesPlusAgencyDebenture  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_TreasuriesPlusAgencyDebenture;}
                     public String  getValueDescription()                       {return text_TreasuriesPlusAgencyDebenture;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_TreasuriesPlusAgencyDebenture).append("|").append(text_TreasuriesPlusAgencyDebenture).append("]").toString();}
                     public boolean isTreasuriesPlusAgencyDebenture()           {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_TreasuriesPlusAgencyDebenture);}
                    };
                }
            }
        }

        return flyweightTreasuriesPlusAgencyDebenture;
    }

    private static FixSecurityTypeField flyweightMutualFund;
    public static final FixSecurityTypeField flyweightMutualFund()
    {
        if (flyweightMutualFund == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightMutualFund == null)
                {
                    flyweightMutualFund  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_MutualFund;}
                     public String  getValueDescription()                       {return text_MutualFund;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MutualFund).append("|").append(text_MutualFund).append("]").toString();}
                     public boolean isMutualFund()                              {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MutualFund);}
                    };
                }
            }
        }

        return flyweightMutualFund;
    }

    private static FixSecurityTypeField flyweightMortgageInterestOnly;
    public static final FixSecurityTypeField flyweightMortgageInterestOnly()
    {
        if (flyweightMortgageInterestOnly == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightMortgageInterestOnly == null)
                {
                    flyweightMortgageInterestOnly  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_MortgageInterestOnly;}
                     public String  getValueDescription()                       {return text_MortgageInterestOnly;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MortgageInterestOnly).append("|").append(text_MortgageInterestOnly).append("]").toString();}
                     public boolean isMortgageInterestOnly()                    {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MortgageInterestOnly);}
                    };
                }
            }
        }

        return flyweightMortgageInterestOnly;
    }

    private static FixSecurityTypeField flyweightMortgagePrincipalOnly;
    public static final FixSecurityTypeField flyweightMortgagePrincipalOnly()
    {
        if (flyweightMortgagePrincipalOnly == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightMortgagePrincipalOnly == null)
                {
                    flyweightMortgagePrincipalOnly  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_MortgagePrincipalOnly;}
                     public String  getValueDescription()                       {return text_MortgagePrincipalOnly;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MortgagePrincipalOnly).append("|").append(text_MortgagePrincipalOnly).append("]").toString();}
                     public boolean isMortgagePrincipalOnly()                   {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MortgagePrincipalOnly);}
                    };
                }
            }
        }

        return flyweightMortgagePrincipalOnly;
    }

    private static FixSecurityTypeField flyweightMortgagePrivatePlacement;
    public static final FixSecurityTypeField flyweightMortgagePrivatePlacement()
    {
        if (flyweightMortgagePrivatePlacement == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightMortgagePrivatePlacement == null)
                {
                    flyweightMortgagePrivatePlacement  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_MortgagePrivatePlacement;}
                     public String  getValueDescription()                       {return text_MortgagePrivatePlacement;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MortgagePrivatePlacement).append("|").append(text_MortgagePrivatePlacement).append("]").toString();}
                     public boolean isMortgagePrivatePlacement()                {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MortgagePrivatePlacement);}
                    };
                }
            }
        }

        return flyweightMortgagePrivatePlacement;
    }

    private static FixSecurityTypeField flyweightMiscellaneousPassthru;
    public static final FixSecurityTypeField flyweightMiscellaneousPassthru()
    {
        if (flyweightMiscellaneousPassthru == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightMiscellaneousPassthru == null)
                {
                    flyweightMiscellaneousPassthru  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_MiscellaneousPassthru;}
                     public String  getValueDescription()                       {return text_MiscellaneousPassthru;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MiscellaneousPassthru).append("|").append(text_MiscellaneousPassthru).append("]").toString();}
                     public boolean isMiscellaneousPassthru()                   {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MiscellaneousPassthru);}
                    };
                }
            }
        }

        return flyweightMiscellaneousPassthru;
    }

    private static FixSecurityTypeField flyweightMunicipalBond;
    public static final FixSecurityTypeField flyweightMunicipalBond()
    {
        if (flyweightMunicipalBond == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightMunicipalBond == null)
                {
                    flyweightMunicipalBond  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_MunicipalBond;}
                     public String  getValueDescription()                       {return text_MunicipalBond;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MunicipalBond).append("|").append(text_MunicipalBond).append("]").toString();}
                     public boolean isMunicipalBond()                           {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MunicipalBond);}
                    };
                }
            }
        }

        return flyweightMunicipalBond;
    }

    private static FixSecurityTypeField flyweightNoIsitcSecurityType;
    public static final FixSecurityTypeField flyweightNoIsitcSecurityType()
    {
        if (flyweightNoIsitcSecurityType == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightNoIsitcSecurityType == null)
                {
                    flyweightNoIsitcSecurityType  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_NoIsitcSecurityType;}
                     public String  getValueDescription()                       {return text_NoIsitcSecurityType;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_NoIsitcSecurityType).append("|").append(text_NoIsitcSecurityType).append("]").toString();}
                     public boolean isNoIsitcSecurityType()                     {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_NoIsitcSecurityType);}
                    };
                }
            }
        }

        return flyweightNoIsitcSecurityType;
    }

    private static FixSecurityTypeField flyweightOption;
    public static final FixSecurityTypeField flyweightOption()
    {
        if (flyweightOption == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightOption == null)
                {
                    flyweightOption  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_Option;}
                     public String  getValueDescription()                       {return text_Option;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Option).append("|").append(text_Option).append("]").toString();}
                     public boolean isOption()                                  {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Option);}
                    };
                }
            }
        }

        return flyweightOption;
    }

    private static FixSecurityTypeField flyweightPreferredStock;
    public static final FixSecurityTypeField flyweightPreferredStock()
    {
        if (flyweightPreferredStock == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightPreferredStock == null)
                {
                    flyweightPreferredStock  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_PreferredStock;}
                     public String  getValueDescription()                       {return text_PreferredStock;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_PreferredStock).append("|").append(text_PreferredStock).append("]").toString();}
                     public boolean isPreferredStock()                          {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_PreferredStock);}
                    };
                }
            }
        }

        return flyweightPreferredStock;
    }

    private static FixSecurityTypeField flyweightRepurchaseAgreement;
    public static final FixSecurityTypeField flyweightRepurchaseAgreement()
    {
        if (flyweightRepurchaseAgreement == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightRepurchaseAgreement == null)
                {
                    flyweightRepurchaseAgreement  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_RepurchaseAgreement;}
                     public String  getValueDescription()                       {return text_RepurchaseAgreement;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_RepurchaseAgreement).append("|").append(text_RepurchaseAgreement).append("]").toString();}
                     public boolean isRepurchaseAgreement()                     {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_RepurchaseAgreement);}
                    };
                }
            }
        }

        return flyweightRepurchaseAgreement;
    }

    private static FixSecurityTypeField flyweightReverseRepurchaseAgreement;
    public static final FixSecurityTypeField flyweightReverseRepurchaseAgreement()
    {
        if (flyweightReverseRepurchaseAgreement == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightReverseRepurchaseAgreement == null)
                {
                    flyweightReverseRepurchaseAgreement  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_ReverseRepurchaseAgreement;}
                     public String  getValueDescription()                       {return text_ReverseRepurchaseAgreement;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ReverseRepurchaseAgreement).append("|").append(text_ReverseRepurchaseAgreement).append("]").toString();}
                     public boolean isReverseRepurchaseAgreement()              {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ReverseRepurchaseAgreement);}
                    };
                }
            }
        }

        return flyweightReverseRepurchaseAgreement;
    }

    private static FixSecurityTypeField flyweightStudentLoanMarketingAssociation;
    public static final FixSecurityTypeField flyweightStudentLoanMarketingAssociation()
    {
        if (flyweightStudentLoanMarketingAssociation == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightStudentLoanMarketingAssociation == null)
                {
                    flyweightStudentLoanMarketingAssociation  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_StudentLoanMarketingAssociation;}
                     public String  getValueDescription()                       {return text_StudentLoanMarketingAssociation;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_StudentLoanMarketingAssociation).append("|").append(text_StudentLoanMarketingAssociation).append("]").toString();}
                     public boolean isStudentLoanMarketingAssociation()         {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_StudentLoanMarketingAssociation);}
                    };
                }
            }
        }

        return flyweightStudentLoanMarketingAssociation;
    }

    private static FixSecurityTypeField flyweightTimeDeposit;
    public static final FixSecurityTypeField flyweightTimeDeposit()
    {
        if (flyweightTimeDeposit == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightTimeDeposit == null)
                {
                    flyweightTimeDeposit  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_TimeDeposit;}
                     public String  getValueDescription()                       {return text_TimeDeposit;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_TimeDeposit).append("|").append(text_TimeDeposit).append("]").toString();}
                     public boolean isTimeDeposit()                             {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_TimeDeposit);}
                    };
                }
            }
        }

        return flyweightTimeDeposit;
    }

    private static FixSecurityTypeField flyweightUsTreasuryBill;
    public static final FixSecurityTypeField flyweightUsTreasuryBill()
    {
        if (flyweightUsTreasuryBill == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightUsTreasuryBill == null)
                {
                    flyweightUsTreasuryBill  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_UsTreasuryBill;}
                     public String  getValueDescription()                       {return text_UsTreasuryBill;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_UsTreasuryBill).append("|").append(text_UsTreasuryBill).append("]").toString();}
                     public boolean isUsTreasuryBill()                          {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_UsTreasuryBill);}
                    };
                }
            }
        }

        return flyweightUsTreasuryBill;
    }

    private static FixSecurityTypeField flyweightWarrant;
    public static final FixSecurityTypeField flyweightWarrant()
    {
        if (flyweightWarrant == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightWarrant == null)
                {
                    flyweightWarrant  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_Warrant;}
                     public String  getValueDescription()                       {return text_Warrant;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Warrant).append("|").append(text_Warrant).append("]").toString();}
                     public boolean isWarrant()                                 {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Warrant);}
                    };
                }
            }
        }

        return flyweightWarrant;
    }

    private static FixSecurityTypeField flyweightCatsTigers;
    public static final FixSecurityTypeField flyweightCatsTigers()
    {
        if (flyweightCatsTigers == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightCatsTigers == null)
                {
                    flyweightCatsTigers  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_CatsTigers;}
                     public String  getValueDescription()                       {return text_CatsTigers;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CatsTigers).append("|").append(text_CatsTigers).append("]").toString();}
                     public boolean isCatsTigers()                              {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CatsTigers);}
                    };
                }
            }
        }

        return flyweightCatsTigers;
    }

    private static FixSecurityTypeField flyweightMultiLeg;
    public static final FixSecurityTypeField flyweightMultiLeg()
    {
        if (flyweightMultiLeg == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightMultiLeg == null)
                {
                    flyweightMultiLeg  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_MultiLeg;}
                     public String  getValueDescription()                       {return text_MultiLeg;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MultiLeg).append("|").append(text_MultiLeg).append("]").toString();}
                     public boolean isMultiLeg()                                {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MultiLeg);}
                    };
                }
            }
        }

        return flyweightMultiLeg;
    }

    private static FixSecurityTypeField flyweightIndex;
    public static final FixSecurityTypeField flyweightIndex()
    {
        if (flyweightIndex == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightIndex == null)
                {
                    flyweightIndex  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_Index;}
                     public String  getValueDescription()                       {return text_Index;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Index).append("|").append(text_Index).append("]").toString();}
                     public boolean isIndex()                                   {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Index);}
                    };
                }
            }
        }

        return flyweightIndex;
    }

    private static FixSecurityTypeField flyweightCommodity;
    public static final FixSecurityTypeField flyweightCommodity()
    {
        if (flyweightCommodity == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightCommodity == null)
                {
                    flyweightCommodity  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_Commodity;}
                     public String  getValueDescription()                       {return text_Commodity;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Commodity).append("|").append(text_Commodity).append("]").toString();}
                     public boolean isCommodity()                               {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Commodity);}
                    };
                }
            }
        }

        return flyweightCommodity;
    }

    private static FixSecurityTypeField flyweightDebt;
    public static final FixSecurityTypeField flyweightDebt()
    {
        if (flyweightDebt == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightDebt == null)
                {
                    flyweightDebt  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_Debt;}
                     public String  getValueDescription()                       {return text_Debt;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Debt).append("|").append(text_Debt).append("]").toString();}
                     public boolean isDebt()                                    {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Debt);}
                    };
                }
            }
        }

        return flyweightDebt;
    }

    private static FixSecurityTypeField flyweightLinkedNote;
    public static final FixSecurityTypeField flyweightLinkedNote()
    {
        if (flyweightLinkedNote == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightLinkedNote == null)
                {
                    flyweightLinkedNote  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_LinkedNote;}
                     public String  getValueDescription()                       {return text_LinkedNote;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_LinkedNote).append("|").append(text_LinkedNote).append("]").toString();}
                     public boolean isLinkedNote()                              {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_LinkedNote);}
                    };
                }
            }
        }

        return flyweightLinkedNote;
    }

    private static FixSecurityTypeField flyweightUnitInvestmentTrust;
    public static final FixSecurityTypeField flyweightUnitInvestmentTrust()
    {
        if (flyweightUnitInvestmentTrust == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightUnitInvestmentTrust == null)
                {
                    flyweightUnitInvestmentTrust  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_UnitInvestmentTrust;}
                     public String  getValueDescription()                       {return text_UnitInvestmentTrust;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_UnitInvestmentTrust).append("|").append(text_UnitInvestmentTrust).append("]").toString();}
                     public boolean isUnitInvestmentTrust()                     {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_UnitInvestmentTrust);}
                    };
                }
            }
        }

        return flyweightUnitInvestmentTrust;
    }

    private static FixSecurityTypeField flyweightVolatilityIndex;
    public static final FixSecurityTypeField flyweightVolatilityIndex()
    {
        if (flyweightVolatilityIndex == null)
        {
            synchronized(FixSecurityTypeField.class)
            {
                if (flyweightVolatilityIndex == null)
                {
                    flyweightVolatilityIndex  = new FixSecurityTypeField()
                    {public boolean hasValue()                                  {return true;}
                     public String  getValue()                                  {return string_VolatilityIndex;}
                     public String  getValueDescription()                       {return text_VolatilityIndex;}
                     public String  toString()                                  {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_VolatilityIndex).append("|").append(text_VolatilityIndex).append("]").toString();}
                     public boolean isVolatilityIndex()                         {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_VolatilityIndex);}
                    };
                }
            }
        }

        return flyweightVolatilityIndex;
    }


    public boolean isBankersAcceptance()                       {return false;}
    public boolean isConvertibleBond()                         {return false;}
    public boolean isCertificateOfDeposit()                    {return false;}
    public boolean isCollateralizeMortgageObligation()         {return false;}
    public boolean isCorporateBond()                           {return false;}
    public boolean isCommercialPaper()                         {return false;}
    public boolean isCorporatePrivatePlacement()               {return false;}
    public boolean isCommonStock()                             {return false;}
    public boolean isFederalHousingAuthority()                 {return false;}
    public boolean isFederalHomeLoan()                         {return false;}
    public boolean isFederalNationalMortgageAssociation()      {return false;}
    public boolean isForeignExchangeContract()                 {return false;}
    public boolean isFuture()                                  {return false;}
    public boolean isGovernmentNationalMortgageAssociation()   {return false;}
    public boolean isTreasuriesPlusAgencyDebenture()           {return false;}
    public boolean isMutualFund()                              {return false;}
    public boolean isMortgageInterestOnly()                    {return false;}
    public boolean isMortgagePrincipalOnly()                   {return false;}
    public boolean isMortgagePrivatePlacement()                {return false;}
    public boolean isMiscellaneousPassthru()                   {return false;}
    public boolean isMunicipalBond()                           {return false;}
    public boolean isNoIsitcSecurityType()                     {return false;}
    public boolean isOption()                                  {return false;}
    public boolean isPreferredStock()                          {return false;}
    public boolean isRepurchaseAgreement()                     {return false;}
    public boolean isReverseRepurchaseAgreement()              {return false;}
    public boolean isStudentLoanMarketingAssociation()         {return false;}
    public boolean isTimeDeposit()                             {return false;}
    public boolean isUsTreasuryBill()                          {return false;}
    public boolean isWarrant()                                 {return false;}
    public boolean isCatsTigers()                              {return false;}
    public boolean isMultiLeg()                                {return false;}
    public boolean isIndex()                                   {return false;}
    public boolean isCommodity()                               {return false;}
    public boolean isDebt()                                    {return false;}
    public boolean isLinkedNote()                              {return false;}
    public boolean isUnitInvestmentTrust()                     {return false;}
    public boolean isVolatilityIndex()                         {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixSecurityTypeField create(char[] array, int offset, int length)
    {
        return create(new String(array, offset, length));
    }

    public static FixSecurityTypeField create(final String paramString)
    {                                                                                               
        if (BankersAcceptance.equals(paramString))               return flyweightBankersAcceptance();
        if (ConvertibleBond.equals(paramString))                 return flyweightConvertibleBond();
        if (CertificateOfDeposit.equals(paramString))            return flyweightCertificateOfDeposit();
        if (CollateralizeMortgageObligation.equals(paramString)) return flyweightCollateralizeMortgageObligation();
        if (CorporateBond.equals(paramString))                   return flyweightCorporateBond();
        if (CommercialPaper.equals(paramString))                 return flyweightCommercialPaper();
        if (CorporatePrivatePlacement.equals(paramString))       return flyweightCorporatePrivatePlacement();
        if (CommonStock.equals(paramString))                     return flyweightCommonStock();
        if (FederalHousingAuthority.equals(paramString))         return flyweightFederalHousingAuthority();
        if (FederalHomeLoan.equals(paramString))                 return flyweightFederalHomeLoan();
        if (FederalNationalMortgageAssociation.equals(paramString)) return flyweightFederalNationalMortgageAssociation();
        if (ForeignExchangeContract.equals(paramString))         return flyweightForeignExchangeContract();
        if (Future.equals(paramString))                          return flyweightFuture();
        if (GovernmentNationalMortgageAssociation.equals(paramString)) return flyweightGovernmentNationalMortgageAssociation();
        if (TreasuriesPlusAgencyDebenture.equals(paramString))   return flyweightTreasuriesPlusAgencyDebenture();
        if (MutualFund.equals(paramString))                      return flyweightMutualFund();
        if (MortgageInterestOnly.equals(paramString))            return flyweightMortgageInterestOnly();
        if (MortgagePrincipalOnly.equals(paramString))           return flyweightMortgagePrincipalOnly();
        if (MortgagePrivatePlacement.equals(paramString))        return flyweightMortgagePrivatePlacement();
        if (MiscellaneousPassthru.equals(paramString))           return flyweightMiscellaneousPassthru();
        if (MunicipalBond.equals(paramString))                   return flyweightMunicipalBond();
        if (NoIsitcSecurityType.equals(paramString))             return flyweightNoIsitcSecurityType();
        if (Option.equals(paramString))                          return flyweightOption();
        if (PreferredStock.equals(paramString))                  return flyweightPreferredStock();
        if (RepurchaseAgreement.equals(paramString))             return flyweightRepurchaseAgreement();
        if (ReverseRepurchaseAgreement.equals(paramString))      return flyweightReverseRepurchaseAgreement();
        if (StudentLoanMarketingAssociation.equals(paramString)) return flyweightStudentLoanMarketingAssociation();
        if (TimeDeposit.equals(paramString))                     return flyweightTimeDeposit();
        if (UsTreasuryBill.equals(paramString))                  return flyweightUsTreasuryBill();
        if (Warrant.equals(paramString))                         return flyweightWarrant();
        if (CatsTigers.equals(paramString))                      return flyweightCatsTigers();
        if (MultiLeg.equals(paramString))                        return flyweightMultiLeg();
        if (Index.equals(paramString))                           return flyweightIndex();
        if (Commodity.equals(paramString))                       return flyweightCommodity();
        if (Debt.equals(paramString))                            return flyweightDebt();
        if (LinkedNote.equals(paramString))                      return flyweightLinkedNote();
        if (UnitInvestmentTrust.equals(paramString))             return flyweightUnitInvestmentTrust();
        if (VolatilityIndex.equals(paramString))                 return flyweightVolatilityIndex();
        return null;
    }                                                                                               
}
