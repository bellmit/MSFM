package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixOpenCloseSettleFlagField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [286] (known as OpenCloseSettleFlag).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixOpenCloseSettleFlagField implements FixFieldIF, HasCharValueIF
{   
    public static final int    TagID         =  286;
    public static final String TagIDAsString = "286";
    public static final char[] TagIDAsChars  = {'2','8','6'};
    public static final String TagName       = "OpenCloseSettleFlag";
    public static final String TagFixType    = "CHAR";

    public static final char    DailyOpenCloseSettlementPrice                = '0';
    public static final String  string_DailyOpenCloseSettlementPrice         = "0";
    public static final String  tagged_DailyOpenCloseSettlementPrice         = TagIDAsString + EQUALS + string_DailyOpenCloseSettlementPrice + SOH;
    public static final char[]  taggedchars_DailyOpenCloseSettlementPrice    = {'2','8','6', EQUALSchar, '0', SOHchar};
    public static final String  text_DailyOpenCloseSettlementPrice           = "DailyOpenCloseSettlementPrice";
    public static final char    SessionOpenCloseSettlementPrice              = '1';
    public static final String  string_SessionOpenCloseSettlementPrice       = "1";
    public static final String  tagged_SessionOpenCloseSettlementPrice       = TagIDAsString + EQUALS + string_SessionOpenCloseSettlementPrice + SOH;
    public static final char[]  taggedchars_SessionOpenCloseSettlementPrice  = {'2','8','6', EQUALSchar, '1', SOHchar};
    public static final String  text_SessionOpenCloseSettlementPrice         = "SessionOpenCloseSettlementPrice";
    public static final char    DeliverySettlementPrice                      = '2';
    public static final String  string_DeliverySettlementPrice               = "2";
    public static final String  tagged_DeliverySettlementPrice               = TagIDAsString + EQUALS + string_DeliverySettlementPrice + SOH;
    public static final char[]  taggedchars_DeliverySettlementPrice          = {'2','8','6', EQUALSchar, '2', SOHchar};
    public static final String  text_DeliverySettlementPrice                 = "DeliverySettlementPrice";
    public static final char    ExpectedOpen                                 = '3';
    public static final String  string_ExpectedOpen                          = "3";
    public static final String  tagged_ExpectedOpen                          = TagIDAsString + EQUALS + string_ExpectedOpen + SOH;
    public static final char[]  taggedchars_ExpectedOpen                     = {'2','8','6', EQUALSchar, '3', SOHchar};
    public static final String  text_ExpectedOpen                            = "ExpectedOpen";

    private static FixOpenCloseSettleFlagField flyweightDailyOpenCloseSettlementPrice;
    public static final FixOpenCloseSettleFlagField flyweightDailyOpenCloseSettlementPrice()
    {
        if (flyweightDailyOpenCloseSettlementPrice == null)
        {
            synchronized(FixOpenCloseSettleFlagField.class)
            {
                if (flyweightDailyOpenCloseSettlementPrice == null)
                {
                    flyweightDailyOpenCloseSettlementPrice  = new FixOpenCloseSettleFlagField()
                    {public boolean hasValue()                            {return true;}
                     public String  getValue()                            {return string_DailyOpenCloseSettlementPrice;}
                     public String  getValueDescription()                 {return text_DailyOpenCloseSettlementPrice;}
                     public String  toString()                            {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_DailyOpenCloseSettlementPrice).append("|").append(text_DailyOpenCloseSettlementPrice).append("]").toString();}
                     public boolean isDailyOpenCloseSettlementPrice()     {return true;}
                     public char    charValue()                           {return DailyOpenCloseSettlementPrice;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_DailyOpenCloseSettlementPrice);}
                    };
                }
            }
        }

        return flyweightDailyOpenCloseSettlementPrice;
    }

    private static FixOpenCloseSettleFlagField flyweightSessionOpenCloseSettlementPrice;
    public static final FixOpenCloseSettleFlagField flyweightSessionOpenCloseSettlementPrice()
    {
        if (flyweightSessionOpenCloseSettlementPrice == null)
        {
            synchronized(FixOpenCloseSettleFlagField.class)
            {
                if (flyweightSessionOpenCloseSettlementPrice == null)
                {
                    flyweightSessionOpenCloseSettlementPrice  = new FixOpenCloseSettleFlagField()
                    {public boolean hasValue()                            {return true;}
                     public String  getValue()                            {return string_SessionOpenCloseSettlementPrice;}
                     public String  getValueDescription()                 {return text_SessionOpenCloseSettlementPrice;}
                     public String  toString()                            {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_SessionOpenCloseSettlementPrice).append("|").append(text_SessionOpenCloseSettlementPrice).append("]").toString();}
                     public boolean isSessionOpenCloseSettlementPrice()   {return true;}
                     public char    charValue()                           {return SessionOpenCloseSettlementPrice;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_SessionOpenCloseSettlementPrice);}
                    };
                }
            }
        }

        return flyweightSessionOpenCloseSettlementPrice;
    }

    private static FixOpenCloseSettleFlagField flyweightDeliverySettlementPrice;
    public static final FixOpenCloseSettleFlagField flyweightDeliverySettlementPrice()
    {
        if (flyweightDeliverySettlementPrice == null)
        {
            synchronized(FixOpenCloseSettleFlagField.class)
            {
                if (flyweightDeliverySettlementPrice == null)
                {
                    flyweightDeliverySettlementPrice  = new FixOpenCloseSettleFlagField()
                    {public boolean hasValue()                            {return true;}
                     public String  getValue()                            {return string_DeliverySettlementPrice;}
                     public String  getValueDescription()                 {return text_DeliverySettlementPrice;}
                     public String  toString()                            {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_DeliverySettlementPrice).append("|").append(text_DeliverySettlementPrice).append("]").toString();}
                     public boolean isDeliverySettlementPrice()           {return true;}
                     public char    charValue()                           {return DeliverySettlementPrice;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_DeliverySettlementPrice);}
                    };
                }
            }
        }

        return flyweightDeliverySettlementPrice;
    }

    private static FixOpenCloseSettleFlagField flyweightExpectedOpen;
    public static final FixOpenCloseSettleFlagField flyweightExpectedOpen()
    {
        if (flyweightExpectedOpen == null)
        {
            synchronized(FixOpenCloseSettleFlagField.class)
            {
                if (flyweightExpectedOpen == null)
                {
                    flyweightExpectedOpen  = new FixOpenCloseSettleFlagField()
                    {public boolean hasValue()                            {return true;}
                     public String  getValue()                            {return string_ExpectedOpen;}
                     public String  getValueDescription()                 {return text_ExpectedOpen;}
                     public String  toString()                            {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ExpectedOpen).append("|").append(text_ExpectedOpen).append("]").toString();}
                     public boolean isExpectedOpen()                      {return true;}
                     public char    charValue()                           {return ExpectedOpen;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ExpectedOpen);}
                    };
                }
            }
        }

        return flyweightExpectedOpen;
    }


    public boolean isDailyOpenCloseSettlementPrice()     {return false;}
    public boolean isSessionOpenCloseSettlementPrice()   {return false;}
    public boolean isDeliverySettlementPrice()           {return false;}
    public boolean isExpectedOpen()                      {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixOpenCloseSettleFlagField create(char[] array, int offset, int length)
    {
        if (length == 1)
        {
            return create(array[offset]);
        }

        return null;
    }

    public static FixOpenCloseSettleFlagField create(final char param)
    {
        switch (param)
        {                                                                                           
            case DailyOpenCloseSettlementPrice:   return flyweightDailyOpenCloseSettlementPrice();
            case SessionOpenCloseSettlementPrice: return flyweightSessionOpenCloseSettlementPrice();
            case DeliverySettlementPrice:         return flyweightDeliverySettlementPrice();
            case ExpectedOpen:                    return flyweightExpectedOpen();
        }
                                                                                                    
        return null;
    }                                                                                               
}
