package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixSettlInstTransTypeField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [163] (known as SettlInstTransType).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixSettlInstTransTypeField implements FixFieldIF, HasCharValueIF
{   
    public static final int    TagID         =  163;
    public static final String TagIDAsString = "163";
    public static final char[] TagIDAsChars  = {'1','6','3'};
    public static final String TagName       = "SettlInstTransType";
    public static final String TagFixType    = "CHAR";

    public static final char    New                  = 'N';
    public static final String  string_New           = "N";
    public static final String  tagged_New           = TagIDAsString + EQUALS + string_New + SOH;
    public static final char[]  taggedchars_New      = {'1','6','3', EQUALSchar, 'N', SOHchar};
    public static final String  text_New             = "New";
    public static final char    Cancel               = 'C';
    public static final String  string_Cancel        = "C";
    public static final String  tagged_Cancel        = TagIDAsString + EQUALS + string_Cancel + SOH;
    public static final char[]  taggedchars_Cancel   = {'1','6','3', EQUALSchar, 'C', SOHchar};
    public static final String  text_Cancel          = "Cancel";
    public static final char    Replace              = 'R';
    public static final String  string_Replace       = "R";
    public static final String  tagged_Replace       = TagIDAsString + EQUALS + string_Replace + SOH;
    public static final char[]  taggedchars_Replace  = {'1','6','3', EQUALSchar, 'R', SOHchar};
    public static final String  text_Replace         = "Replace";

    private static FixSettlInstTransTypeField flyweightNew;
    public static final FixSettlInstTransTypeField flyweightNew()
    {
        if (flyweightNew == null)
        {
            synchronized(FixSettlInstTransTypeField.class)
            {
                if (flyweightNew == null)
                {
                    flyweightNew  = new FixSettlInstTransTypeField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_New;}
                     public String  getValueDescription()             {return text_New;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_New).append("|").append(text_New).append("]").toString();}
                     public boolean isNew()                           {return true;}
                     public char    charValue()                       {return New;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_New);}
                    };
                }
            }
        }

        return flyweightNew;
    }

    private static FixSettlInstTransTypeField flyweightCancel;
    public static final FixSettlInstTransTypeField flyweightCancel()
    {
        if (flyweightCancel == null)
        {
            synchronized(FixSettlInstTransTypeField.class)
            {
                if (flyweightCancel == null)
                {
                    flyweightCancel  = new FixSettlInstTransTypeField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Cancel;}
                     public String  getValueDescription()             {return text_Cancel;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Cancel).append("|").append(text_Cancel).append("]").toString();}
                     public boolean isCancel()                        {return true;}
                     public char    charValue()                       {return Cancel;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Cancel);}
                    };
                }
            }
        }

        return flyweightCancel;
    }

    private static FixSettlInstTransTypeField flyweightReplace;
    public static final FixSettlInstTransTypeField flyweightReplace()
    {
        if (flyweightReplace == null)
        {
            synchronized(FixSettlInstTransTypeField.class)
            {
                if (flyweightReplace == null)
                {
                    flyweightReplace  = new FixSettlInstTransTypeField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Replace;}
                     public String  getValueDescription()             {return text_Replace;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Replace).append("|").append(text_Replace).append("]").toString();}
                     public boolean isReplace()                       {return true;}
                     public char    charValue()                       {return Replace;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Replace);}
                    };
                }
            }
        }

        return flyweightReplace;
    }


    public boolean isNew()       {return false;}
    public boolean isCancel()    {return false;}
    public boolean isReplace()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixSettlInstTransTypeField create(char[] array, int offset, int length)
    {
        if (length == 1)
        {
            return create(array[offset]);
        }

        return null;
    }

    public static FixSettlInstTransTypeField create(final char param)
    {
        switch (param)
        {                                                                                           
            case New:     return flyweightNew();
            case Cancel:  return flyweightCancel();
            case Replace: return flyweightReplace();
        }
                                                                                                    
        return null;
    }                                                                                               
}
