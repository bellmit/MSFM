package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixLastCapacityField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [29] (known as LastCapacity).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixLastCapacityField implements FixFieldIF, HasCharValueIF
{   
    public static final int    TagID         =  29;
    public static final String TagIDAsString = "29";
    public static final char[] TagIDAsChars  = {'2','9'};
    public static final String TagName       = "LastCapacity";
    public static final String TagFixType    = "CHAR";

    public static final char    Agent                         = '1';
    public static final String  string_Agent                  = "1";
    public static final String  tagged_Agent                  = TagIDAsString + EQUALS + string_Agent + SOH;
    public static final char[]  taggedchars_Agent             = {'2','9', EQUALSchar, '1', SOHchar};
    public static final String  text_Agent                    = "Agent";
    public static final char    CrossAsAgent                  = '2';
    public static final String  string_CrossAsAgent           = "2";
    public static final String  tagged_CrossAsAgent           = TagIDAsString + EQUALS + string_CrossAsAgent + SOH;
    public static final char[]  taggedchars_CrossAsAgent      = {'2','9', EQUALSchar, '2', SOHchar};
    public static final String  text_CrossAsAgent             = "CrossAsAgent";
    public static final char    CrossAsPrincipal              = '3';
    public static final String  string_CrossAsPrincipal       = "3";
    public static final String  tagged_CrossAsPrincipal       = TagIDAsString + EQUALS + string_CrossAsPrincipal + SOH;
    public static final char[]  taggedchars_CrossAsPrincipal  = {'2','9', EQUALSchar, '3', SOHchar};
    public static final String  text_CrossAsPrincipal         = "CrossAsPrincipal";
    public static final char    Principal                     = '4';
    public static final String  string_Principal              = "4";
    public static final String  tagged_Principal              = TagIDAsString + EQUALS + string_Principal + SOH;
    public static final char[]  taggedchars_Principal         = {'2','9', EQUALSchar, '4', SOHchar};
    public static final String  text_Principal                = "Principal";

    private static FixLastCapacityField flyweightAgent;
    public static final FixLastCapacityField flyweightAgent()
    {
        if (flyweightAgent == null)
        {
            synchronized(FixLastCapacityField.class)
            {
                if (flyweightAgent == null)
                {
                    flyweightAgent  = new FixLastCapacityField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Agent;}
                     public String  getValueDescription()             {return text_Agent;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Agent).append("|").append(text_Agent).append("]").toString();}
                     public boolean isAgent()                         {return true;}
                     public char    charValue()                       {return Agent;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Agent);}
                    };
                }
            }
        }

        return flyweightAgent;
    }

    private static FixLastCapacityField flyweightCrossAsAgent;
    public static final FixLastCapacityField flyweightCrossAsAgent()
    {
        if (flyweightCrossAsAgent == null)
        {
            synchronized(FixLastCapacityField.class)
            {
                if (flyweightCrossAsAgent == null)
                {
                    flyweightCrossAsAgent  = new FixLastCapacityField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_CrossAsAgent;}
                     public String  getValueDescription()             {return text_CrossAsAgent;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CrossAsAgent).append("|").append(text_CrossAsAgent).append("]").toString();}
                     public boolean isCrossAsAgent()                  {return true;}
                     public char    charValue()                       {return CrossAsAgent;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CrossAsAgent);}
                    };
                }
            }
        }

        return flyweightCrossAsAgent;
    }

    private static FixLastCapacityField flyweightCrossAsPrincipal;
    public static final FixLastCapacityField flyweightCrossAsPrincipal()
    {
        if (flyweightCrossAsPrincipal == null)
        {
            synchronized(FixLastCapacityField.class)
            {
                if (flyweightCrossAsPrincipal == null)
                {
                    flyweightCrossAsPrincipal  = new FixLastCapacityField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_CrossAsPrincipal;}
                     public String  getValueDescription()             {return text_CrossAsPrincipal;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CrossAsPrincipal).append("|").append(text_CrossAsPrincipal).append("]").toString();}
                     public boolean isCrossAsPrincipal()              {return true;}
                     public char    charValue()                       {return CrossAsPrincipal;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CrossAsPrincipal);}
                    };
                }
            }
        }

        return flyweightCrossAsPrincipal;
    }

    private static FixLastCapacityField flyweightPrincipal;
    public static final FixLastCapacityField flyweightPrincipal()
    {
        if (flyweightPrincipal == null)
        {
            synchronized(FixLastCapacityField.class)
            {
                if (flyweightPrincipal == null)
                {
                    flyweightPrincipal  = new FixLastCapacityField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Principal;}
                     public String  getValueDescription()             {return text_Principal;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Principal).append("|").append(text_Principal).append("]").toString();}
                     public boolean isPrincipal()                     {return true;}
                     public char    charValue()                       {return Principal;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Principal);}
                    };
                }
            }
        }

        return flyweightPrincipal;
    }


    public boolean isAgent()              {return false;}
    public boolean isCrossAsAgent()       {return false;}
    public boolean isCrossAsPrincipal()   {return false;}
    public boolean isPrincipal()          {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixLastCapacityField create(char[] array, int offset, int length)
    {
        if (length == 1)
        {
            return create(array[offset]);
        }

        return null;
    }

    public static FixLastCapacityField create(final char param)
    {
        switch (param)
        {                                                                                           
            case Agent:            return flyweightAgent();
            case CrossAsAgent:     return flyweightCrossAsAgent();
            case CrossAsPrincipal: return flyweightCrossAsPrincipal();
            case Principal:        return flyweightPrincipal();
        }
                                                                                                    
        return null;
    }                                                                                               
}
