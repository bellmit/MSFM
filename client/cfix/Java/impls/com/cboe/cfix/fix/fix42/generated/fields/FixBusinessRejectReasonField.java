package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixBusinessRejectReasonField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [380] (known as BusinessRejectReason).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixBusinessRejectReasonField implements FixFieldIF, HasIntValueIF
{   
    public static final int    TagID         =  380;
    public static final String TagIDAsString = "380";
    public static final char[] TagIDAsChars  = {'3','8','0'};
    public static final String TagName       = "BusinessRejectReason";
    public static final String TagFixType    = "INT";
    public static final char[]  taggedchars_value0 = {'3','8','0', EQUALSchar, ZEROchar, SOHchar};
    public static final char[]  taggedchars_value1 = {'3','8','0', EQUALSchar, ONEchar,  SOHchar};

    public static final int     Other                                          = 0;
    public static final String  string_Other                                   = "0";
    public static final String  tagged_Other                                   = TagIDAsString + EQUALS + string_Other + SOH;
    public static final char[]  taggedchars_Other                              = {'3','8','0', EQUALSchar, '0', SOHchar};
    public static final String  text_Other                                     = "Other";
    public static final int     UnknownId                                      = 1;
    public static final String  string_UnknownId                               = "1";
    public static final String  tagged_UnknownId                               = TagIDAsString + EQUALS + string_UnknownId + SOH;
    public static final char[]  taggedchars_UnknownId                          = {'3','8','0', EQUALSchar, '1', SOHchar};
    public static final String  text_UnknownId                                 = "UnknownId";
    public static final int     UnknownSecurity                                = 2;
    public static final String  string_UnknownSecurity                         = "2";
    public static final String  tagged_UnknownSecurity                         = TagIDAsString + EQUALS + string_UnknownSecurity + SOH;
    public static final char[]  taggedchars_UnknownSecurity                    = {'3','8','0', EQUALSchar, '2', SOHchar};
    public static final String  text_UnknownSecurity                           = "UnknownSecurity";
    public static final int     UnsupportedMessageType                         = 3;
    public static final String  string_UnsupportedMessageType                  = "3";
    public static final String  tagged_UnsupportedMessageType                  = TagIDAsString + EQUALS + string_UnsupportedMessageType + SOH;
    public static final char[]  taggedchars_UnsupportedMessageType             = {'3','8','0', EQUALSchar, '3', SOHchar};
    public static final String  text_UnsupportedMessageType                    = "UnsupportedMessageType";
    public static final int     ApplicationNotAvailable                        = 4;
    public static final String  string_ApplicationNotAvailable                 = "4";
    public static final String  tagged_ApplicationNotAvailable                 = TagIDAsString + EQUALS + string_ApplicationNotAvailable + SOH;
    public static final char[]  taggedchars_ApplicationNotAvailable            = {'3','8','0', EQUALSchar, '4', SOHchar};
    public static final String  text_ApplicationNotAvailable                   = "ApplicationNotAvailable";
    public static final int     ConditionallyRequiredFieldMissing              = 5;
    public static final String  string_ConditionallyRequiredFieldMissing       = "5";
    public static final String  tagged_ConditionallyRequiredFieldMissing       = TagIDAsString + EQUALS + string_ConditionallyRequiredFieldMissing + SOH;
    public static final char[]  taggedchars_ConditionallyRequiredFieldMissing  = {'3','8','0', EQUALSchar, '5', SOHchar};
    public static final String  text_ConditionallyRequiredFieldMissing         = "ConditionallyRequiredFieldMissing";

    private static FixBusinessRejectReasonField flyweightOther;
    public static final FixBusinessRejectReasonField flyweightOther()
    {
        if (flyweightOther == null)
        {
            synchronized(FixBusinessRejectReasonField.class)
            {
                if (flyweightOther == null)
                {
                    flyweightOther  = new FixBusinessRejectReasonField()
                    {public boolean hasValue()                              {return true;}
                     public String  getValue()                              {return string_Other;}
                     public String  getValueDescription()                   {return text_Other;}
                     public String  toString()                              {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Other).append("|").append(text_Other).append("]").toString();}
                     public boolean isOther()                               {return true;}
                     public int     intValue()                              {return Other;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Other);}
                    };
                }
            }
        }

        return flyweightOther;
    }

    private static FixBusinessRejectReasonField flyweightUnknownId;
    public static final FixBusinessRejectReasonField flyweightUnknownId()
    {
        if (flyweightUnknownId == null)
        {
            synchronized(FixBusinessRejectReasonField.class)
            {
                if (flyweightUnknownId == null)
                {
                    flyweightUnknownId  = new FixBusinessRejectReasonField()
                    {public boolean hasValue()                              {return true;}
                     public String  getValue()                              {return string_UnknownId;}
                     public String  getValueDescription()                   {return text_UnknownId;}
                     public String  toString()                              {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_UnknownId).append("|").append(text_UnknownId).append("]").toString();}
                     public boolean isUnknownId()                           {return true;}
                     public int     intValue()                              {return UnknownId;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_UnknownId);}
                    };
                }
            }
        }

        return flyweightUnknownId;
    }

    private static FixBusinessRejectReasonField flyweightUnknownSecurity;
    public static final FixBusinessRejectReasonField flyweightUnknownSecurity()
    {
        if (flyweightUnknownSecurity == null)
        {
            synchronized(FixBusinessRejectReasonField.class)
            {
                if (flyweightUnknownSecurity == null)
                {
                    flyweightUnknownSecurity  = new FixBusinessRejectReasonField()
                    {public boolean hasValue()                              {return true;}
                     public String  getValue()                              {return string_UnknownSecurity;}
                     public String  getValueDescription()                   {return text_UnknownSecurity;}
                     public String  toString()                              {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_UnknownSecurity).append("|").append(text_UnknownSecurity).append("]").toString();}
                     public boolean isUnknownSecurity()                     {return true;}
                     public int     intValue()                              {return UnknownSecurity;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_UnknownSecurity);}
                    };
                }
            }
        }

        return flyweightUnknownSecurity;
    }

    private static FixBusinessRejectReasonField flyweightUnsupportedMessageType;
    public static final FixBusinessRejectReasonField flyweightUnsupportedMessageType()
    {
        if (flyweightUnsupportedMessageType == null)
        {
            synchronized(FixBusinessRejectReasonField.class)
            {
                if (flyweightUnsupportedMessageType == null)
                {
                    flyweightUnsupportedMessageType  = new FixBusinessRejectReasonField()
                    {public boolean hasValue()                              {return true;}
                     public String  getValue()                              {return string_UnsupportedMessageType;}
                     public String  getValueDescription()                   {return text_UnsupportedMessageType;}
                     public String  toString()                              {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_UnsupportedMessageType).append("|").append(text_UnsupportedMessageType).append("]").toString();}
                     public boolean isUnsupportedMessageType()              {return true;}
                     public int     intValue()                              {return UnsupportedMessageType;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_UnsupportedMessageType);}
                    };
                }
            }
        }

        return flyweightUnsupportedMessageType;
    }

    private static FixBusinessRejectReasonField flyweightApplicationNotAvailable;
    public static final FixBusinessRejectReasonField flyweightApplicationNotAvailable()
    {
        if (flyweightApplicationNotAvailable == null)
        {
            synchronized(FixBusinessRejectReasonField.class)
            {
                if (flyweightApplicationNotAvailable == null)
                {
                    flyweightApplicationNotAvailable  = new FixBusinessRejectReasonField()
                    {public boolean hasValue()                              {return true;}
                     public String  getValue()                              {return string_ApplicationNotAvailable;}
                     public String  getValueDescription()                   {return text_ApplicationNotAvailable;}
                     public String  toString()                              {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ApplicationNotAvailable).append("|").append(text_ApplicationNotAvailable).append("]").toString();}
                     public boolean isApplicationNotAvailable()             {return true;}
                     public int     intValue()                              {return ApplicationNotAvailable;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ApplicationNotAvailable);}
                    };
                }
            }
        }

        return flyweightApplicationNotAvailable;
    }

    private static FixBusinessRejectReasonField flyweightConditionallyRequiredFieldMissing;
    public static final FixBusinessRejectReasonField flyweightConditionallyRequiredFieldMissing()
    {
        if (flyweightConditionallyRequiredFieldMissing == null)
        {
            synchronized(FixBusinessRejectReasonField.class)
            {
                if (flyweightConditionallyRequiredFieldMissing == null)
                {
                    flyweightConditionallyRequiredFieldMissing  = new FixBusinessRejectReasonField()
                    {public boolean hasValue()                              {return true;}
                     public String  getValue()                              {return string_ConditionallyRequiredFieldMissing;}
                     public String  getValueDescription()                   {return text_ConditionallyRequiredFieldMissing;}
                     public String  toString()                              {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ConditionallyRequiredFieldMissing).append("|").append(text_ConditionallyRequiredFieldMissing).append("]").toString();}
                     public boolean isConditionallyRequiredFieldMissing()   {return true;}
                     public int     intValue()                              {return ConditionallyRequiredFieldMissing;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ConditionallyRequiredFieldMissing);}
                    };
                }
            }
        }

        return flyweightConditionallyRequiredFieldMissing;
    }


    public boolean isOther()                               {return false;}
    public boolean isUnknownId()                           {return false;}
    public boolean isUnknownSecurity()                     {return false;}
    public boolean isUnsupportedMessageType()              {return false;}
    public boolean isApplicationNotAvailable()             {return false;}
    public boolean isConditionallyRequiredFieldMissing()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixBusinessRejectReasonField create(char[] array, int offset, int length)
    {
        int param = IntegerHelper.parseInt(array, offset, length);
        if (param == IntegerHelper.INVALID_VALUE)
        {
            return null;
        }
        return create(param);
    }

    public static FixBusinessRejectReasonField create(final int param)
    {
        switch (param)
        {                                                                                           
            case Other:                             return flyweightOther();
            case UnknownId:                         return flyweightUnknownId();
            case UnknownSecurity:                   return flyweightUnknownSecurity();
            case UnsupportedMessageType:            return flyweightUnsupportedMessageType();
            case ApplicationNotAvailable:           return flyweightApplicationNotAvailable();
            case ConditionallyRequiredFieldMissing: return flyweightConditionallyRequiredFieldMissing();
        }
                                                                                                    
        return null;
    }                                                                                               
}
