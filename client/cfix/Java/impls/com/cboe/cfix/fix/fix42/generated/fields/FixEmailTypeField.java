package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixEmailTypeField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [94] (known as EmailType).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixEmailTypeField implements FixFieldIF, HasCharValueIF
{   
    public static final int    TagID         =  94;
    public static final String TagIDAsString = "94";
    public static final char[] TagIDAsChars  = {'9','4'};
    public static final String TagName       = "EmailType";
    public static final String TagFixType    = "CHAR";

    public static final char    New                     = '0';
    public static final String  string_New              = "0";
    public static final String  tagged_New              = TagIDAsString + EQUALS + string_New + SOH;
    public static final char[]  taggedchars_New         = {'9','4', EQUALSchar, '0', SOHchar};
    public static final String  text_New                = "New";
    public static final char    Reply                   = '1';
    public static final String  string_Reply            = "1";
    public static final String  tagged_Reply            = TagIDAsString + EQUALS + string_Reply + SOH;
    public static final char[]  taggedchars_Reply       = {'9','4', EQUALSchar, '1', SOHchar};
    public static final String  text_Reply              = "Reply";
    public static final char    AdminReply              = '2';
    public static final String  string_AdminReply       = "2";
    public static final String  tagged_AdminReply       = TagIDAsString + EQUALS + string_AdminReply + SOH;
    public static final char[]  taggedchars_AdminReply  = {'9','4', EQUALSchar, '2', SOHchar};
    public static final String  text_AdminReply         = "AdminReply";

    private static FixEmailTypeField flyweightNew;
    public static final FixEmailTypeField flyweightNew()
    {
        if (flyweightNew == null)
        {
            synchronized(FixEmailTypeField.class)
            {
                if (flyweightNew == null)
                {
                    flyweightNew  = new FixEmailTypeField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_New;}
                     public String  getValueDescription()             {return text_New;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_New).append("|").append(text_New).append("]").toString();}
                     public boolean isNew()                           {return true;}
                     public char    charValue()                       {return New;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_New);}
                    };
                }
            }
        }

        return flyweightNew;
    }

    private static FixEmailTypeField flyweightReply;
    public static final FixEmailTypeField flyweightReply()
    {
        if (flyweightReply == null)
        {
            synchronized(FixEmailTypeField.class)
            {
                if (flyweightReply == null)
                {
                    flyweightReply  = new FixEmailTypeField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Reply;}
                     public String  getValueDescription()             {return text_Reply;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Reply).append("|").append(text_Reply).append("]").toString();}
                     public boolean isReply()                         {return true;}
                     public char    charValue()                       {return Reply;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Reply);}
                    };
                }
            }
        }

        return flyweightReply;
    }

    private static FixEmailTypeField flyweightAdminReply;
    public static final FixEmailTypeField flyweightAdminReply()
    {
        if (flyweightAdminReply == null)
        {
            synchronized(FixEmailTypeField.class)
            {
                if (flyweightAdminReply == null)
                {
                    flyweightAdminReply  = new FixEmailTypeField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_AdminReply;}
                     public String  getValueDescription()             {return text_AdminReply;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_AdminReply).append("|").append(text_AdminReply).append("]").toString();}
                     public boolean isAdminReply()                    {return true;}
                     public char    charValue()                       {return AdminReply;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_AdminReply);}
                    };
                }
            }
        }

        return flyweightAdminReply;
    }


    public boolean isNew()          {return false;}
    public boolean isReply()        {return false;}
    public boolean isAdminReply()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixEmailTypeField create(char[] array, int offset, int length)
    {
        if (length == 1)
        {
            return create(array[offset]);
        }

        return null;
    }

    public static FixEmailTypeField create(final char param)
    {
        switch (param)
        {                                                                                           
            case New:        return flyweightNew();
            case Reply:      return flyweightReply();
            case AdminReply: return flyweightAdminReply();
        }
                                                                                                    
        return null;
    }                                                                                               
}
