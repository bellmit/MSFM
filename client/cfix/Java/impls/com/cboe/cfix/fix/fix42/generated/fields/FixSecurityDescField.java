package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixSecurityDescField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [107] (known as SecurityDesc).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;

public abstract class FixSecurityDescField implements FixFieldIF
{   
    public static final int    TagID         =  107;
    public static final String TagIDAsString = "107";
    public static final char[] TagIDAsChars  = {'1','0','7'};
    public static final String TagName       = "SecurityDesc";
    public static final String TagFixType    = "STRING";

    public static final String  Unknown                     = "1";
    public static final String  string_Unknown              = Unknown;
    public static final char[]  chars_Unknown               = {'1'};
    public static final String  tagged_Unknown              = TagIDAsString + EQUALS + string_Unknown + SOH;
    public static final char[]  taggedchars_Unknown         = {'1','0','7', EQUALSchar, '1', SOHchar};
    public static final String  text_Unknown                = "Unknown";
    public static final String  Straddle                    = "2";
    public static final String  string_Straddle             = Straddle;
    public static final char[]  chars_Straddle              = {'2'};
    public static final String  tagged_Straddle             = TagIDAsString + EQUALS + string_Straddle + SOH;
    public static final char[]  taggedchars_Straddle        = {'1','0','7', EQUALSchar, '2', SOHchar};
    public static final String  text_Straddle               = "Straddle";
    public static final String  PseudoStraddle              = "3";
    public static final String  string_PseudoStraddle       = PseudoStraddle;
    public static final char[]  chars_PseudoStraddle        = {'3'};
    public static final String  tagged_PseudoStraddle       = TagIDAsString + EQUALS + string_PseudoStraddle + SOH;
    public static final char[]  taggedchars_PseudoStraddle  = {'1','0','7', EQUALSchar, '3', SOHchar};
    public static final String  text_PseudoStraddle         = "PseudoStraddle";
    public static final String  Vertical                    = "4";
    public static final String  string_Vertical             = Vertical;
    public static final char[]  chars_Vertical              = {'4'};
    public static final String  tagged_Vertical             = TagIDAsString + EQUALS + string_Vertical + SOH;
    public static final char[]  taggedchars_Vertical        = {'1','0','7', EQUALSchar, '4', SOHchar};
    public static final String  text_Vertical               = "Vertical";
    public static final String  Ratio                       = "5";
    public static final String  string_Ratio                = Ratio;
    public static final char[]  chars_Ratio                 = {'5'};
    public static final String  tagged_Ratio                = TagIDAsString + EQUALS + string_Ratio + SOH;
    public static final char[]  taggedchars_Ratio           = {'1','0','7', EQUALSchar, '5', SOHchar};
    public static final String  text_Ratio                  = "Ratio";
    public static final String  Time                        = "6";
    public static final String  string_Time                 = Time;
    public static final char[]  chars_Time                  = {'6'};
    public static final String  tagged_Time                 = TagIDAsString + EQUALS + string_Time + SOH;
    public static final char[]  taggedchars_Time            = {'1','0','7', EQUALSchar, '6', SOHchar};
    public static final String  text_Time                   = "Time";
    public static final String  Diagonal                    = "7";
    public static final String  string_Diagonal             = Diagonal;
    public static final char[]  chars_Diagonal              = {'7'};
    public static final String  tagged_Diagonal             = TagIDAsString + EQUALS + string_Diagonal + SOH;
    public static final char[]  taggedchars_Diagonal        = {'1','0','7', EQUALSchar, '7', SOHchar};
    public static final String  text_Diagonal               = "Diagonal";
    public static final String  Combo                       = "8";
    public static final String  string_Combo                = Combo;
    public static final char[]  chars_Combo                 = {'8'};
    public static final String  tagged_Combo                = TagIDAsString + EQUALS + string_Combo + SOH;
    public static final char[]  taggedchars_Combo           = {'1','0','7', EQUALSchar, '8', SOHchar};
    public static final String  text_Combo                  = "Combo";

    private static FixSecurityDescField flyweightUnknown;
    public static final FixSecurityDescField flyweightUnknown()
    {
        if (flyweightUnknown == null)
        {
            synchronized(FixSecurityDescField.class)
            {
                if (flyweightUnknown == null)
                {
                    flyweightUnknown  = new FixSecurityDescField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Unknown;}
                     public String  getValueDescription()             {return text_Unknown;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Unknown).append("|").append(text_Unknown).append("]").toString();}
                     public boolean isUnknown()                       {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Unknown);}
                    };
                }
            }
        }

        return flyweightUnknown;
    }

    private static FixSecurityDescField flyweightStraddle;
    public static final FixSecurityDescField flyweightStraddle()
    {
        if (flyweightStraddle == null)
        {
            synchronized(FixSecurityDescField.class)
            {
                if (flyweightStraddle == null)
                {
                    flyweightStraddle  = new FixSecurityDescField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Straddle;}
                     public String  getValueDescription()             {return text_Straddle;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Straddle).append("|").append(text_Straddle).append("]").toString();}
                     public boolean isStraddle()                      {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Straddle);}
                    };
                }
            }
        }

        return flyweightStraddle;
    }

    private static FixSecurityDescField flyweightPseudoStraddle;
    public static final FixSecurityDescField flyweightPseudoStraddle()
    {
        if (flyweightPseudoStraddle == null)
        {
            synchronized(FixSecurityDescField.class)
            {
                if (flyweightPseudoStraddle == null)
                {
                    flyweightPseudoStraddle  = new FixSecurityDescField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_PseudoStraddle;}
                     public String  getValueDescription()             {return text_PseudoStraddle;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_PseudoStraddle).append("|").append(text_PseudoStraddle).append("]").toString();}
                     public boolean isPseudoStraddle()                {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_PseudoStraddle);}
                    };
                }
            }
        }

        return flyweightPseudoStraddle;
    }

    private static FixSecurityDescField flyweightVertical;
    public static final FixSecurityDescField flyweightVertical()
    {
        if (flyweightVertical == null)
        {
            synchronized(FixSecurityDescField.class)
            {
                if (flyweightVertical == null)
                {
                    flyweightVertical  = new FixSecurityDescField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Vertical;}
                     public String  getValueDescription()             {return text_Vertical;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Vertical).append("|").append(text_Vertical).append("]").toString();}
                     public boolean isVertical()                      {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Vertical);}
                    };
                }
            }
        }

        return flyweightVertical;
    }

    private static FixSecurityDescField flyweightRatio;
    public static final FixSecurityDescField flyweightRatio()
    {
        if (flyweightRatio == null)
        {
            synchronized(FixSecurityDescField.class)
            {
                if (flyweightRatio == null)
                {
                    flyweightRatio  = new FixSecurityDescField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Ratio;}
                     public String  getValueDescription()             {return text_Ratio;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Ratio).append("|").append(text_Ratio).append("]").toString();}
                     public boolean isRatio()                         {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Ratio);}
                    };
                }
            }
        }

        return flyweightRatio;
    }

    private static FixSecurityDescField flyweightTime;
    public static final FixSecurityDescField flyweightTime()
    {
        if (flyweightTime == null)
        {
            synchronized(FixSecurityDescField.class)
            {
                if (flyweightTime == null)
                {
                    flyweightTime  = new FixSecurityDescField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Time;}
                     public String  getValueDescription()             {return text_Time;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Time).append("|").append(text_Time).append("]").toString();}
                     public boolean isTime()                          {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Time);}
                    };
                }
            }
        }

        return flyweightTime;
    }

    private static FixSecurityDescField flyweightDiagonal;
    public static final FixSecurityDescField flyweightDiagonal()
    {
        if (flyweightDiagonal == null)
        {
            synchronized(FixSecurityDescField.class)
            {
                if (flyweightDiagonal == null)
                {
                    flyweightDiagonal  = new FixSecurityDescField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Diagonal;}
                     public String  getValueDescription()             {return text_Diagonal;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Diagonal).append("|").append(text_Diagonal).append("]").toString();}
                     public boolean isDiagonal()                      {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Diagonal);}
                    };
                }
            }
        }

        return flyweightDiagonal;
    }

    private static FixSecurityDescField flyweightCombo;
    public static final FixSecurityDescField flyweightCombo()
    {
        if (flyweightCombo == null)
        {
            synchronized(FixSecurityDescField.class)
            {
                if (flyweightCombo == null)
                {
                    flyweightCombo  = new FixSecurityDescField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Combo;}
                     public String  getValueDescription()             {return text_Combo;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Combo).append("|").append(text_Combo).append("]").toString();}
                     public boolean isCombo()                         {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Combo);}
                    };
                }
            }
        }

        return flyweightCombo;
    }


    public boolean isUnknown()          {return false;}
    public boolean isStraddle()         {return false;}
    public boolean isPseudoStraddle()   {return false;}
    public boolean isVertical()         {return false;}
    public boolean isRatio()            {return false;}
    public boolean isTime()             {return false;}
    public boolean isDiagonal()         {return false;}
    public boolean isCombo()            {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixSecurityDescField create(char[] array, int offset, int length)
    {
        return create(new String(array, offset, length));
    }

    public static FixSecurityDescField create(final String paramString)
    {                                                                                               
        if (Unknown.equals(paramString))  return flyweightUnknown();
        if (Straddle.equals(paramString)) return flyweightStraddle();
        if (PseudoStraddle.equals(paramString)) return flyweightPseudoStraddle();
        if (Vertical.equals(paramString)) return flyweightVertical();
        if (Ratio.equals(paramString))    return flyweightRatio();
        if (Time.equals(paramString))     return flyweightTime();
        if (Diagonal.equals(paramString)) return flyweightDiagonal();
        if (Combo.equals(paramString))    return flyweightCombo();
        return new FixSecurityDescField()
        {       public String  valueString = paramString;
                public boolean hasValue()                        {return valueString != null;}
                public String  getValue()                        {return valueString;}
                public String  getValueDescription()             {return valueString;}
        };
    }                                                                                               
}
