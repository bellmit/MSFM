package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixSettlLocationField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [166] (known as SettlLocation).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;

public abstract class FixSettlLocationField implements FixFieldIF
{   
    public static final int    TagID         =  166;
    public static final String TagIDAsString = "166";
    public static final char[] TagIDAsChars  = {'1','6','6'};
    public static final String TagName       = "SettlLocation";
    public static final String TagFixType    = "STRING";

    public static final String  Cedel                                  = "CED";
    public static final String  string_Cedel                           = Cedel;
    public static final char[]  chars_Cedel                            = {'C','E','D'};
    public static final String  tagged_Cedel                           = TagIDAsString + EQUALS + string_Cedel + SOH;
    public static final char[]  taggedchars_Cedel                      = {'1','6','6', EQUALSchar, 'C','E','D', SOHchar};
    public static final String  text_Cedel                             = "Cedel";
    public static final String  DepositoryTrustCompany                 = "DTC";
    public static final String  string_DepositoryTrustCompany          = DepositoryTrustCompany;
    public static final char[]  chars_DepositoryTrustCompany           = {'D','T','C'};
    public static final String  tagged_DepositoryTrustCompany          = TagIDAsString + EQUALS + string_DepositoryTrustCompany + SOH;
    public static final char[]  taggedchars_DepositoryTrustCompany     = {'1','6','6', EQUALSchar, 'D','T','C', SOHchar};
    public static final String  text_DepositoryTrustCompany            = "DepositoryTrustCompany";
    public static final String  Euroclear                              = "EUR";
    public static final String  string_Euroclear                       = Euroclear;
    public static final char[]  chars_Euroclear                        = {'E','U','R'};
    public static final String  tagged_Euroclear                       = TagIDAsString + EQUALS + string_Euroclear + SOH;
    public static final char[]  taggedchars_Euroclear                  = {'1','6','6', EQUALSchar, 'E','U','R', SOHchar};
    public static final String  text_Euroclear                         = "Euroclear";
    public static final String  FederalBookEntry                       = "FED";
    public static final String  string_FederalBookEntry                = FederalBookEntry;
    public static final char[]  chars_FederalBookEntry                 = {'F','E','D'};
    public static final String  tagged_FederalBookEntry                = TagIDAsString + EQUALS + string_FederalBookEntry + SOH;
    public static final char[]  taggedchars_FederalBookEntry           = {'1','6','6', EQUALSchar, 'F','E','D', SOHchar};
    public static final String  text_FederalBookEntry                  = "FederalBookEntry";
    public static final String  Physical                               = "PNY";
    public static final String  string_Physical                        = Physical;
    public static final char[]  chars_Physical                         = {'P','N','Y'};
    public static final String  tagged_Physical                        = TagIDAsString + EQUALS + string_Physical + SOH;
    public static final char[]  taggedchars_Physical                   = {'1','6','6', EQUALSchar, 'P','N','Y', SOHchar};
    public static final String  text_Physical                          = "Physical";
    public static final String  ParticipantTrustCompany                = "PTC";
    public static final String  string_ParticipantTrustCompany         = ParticipantTrustCompany;
    public static final char[]  chars_ParticipantTrustCompany          = {'P','T','C'};
    public static final String  tagged_ParticipantTrustCompany         = TagIDAsString + EQUALS + string_ParticipantTrustCompany + SOH;
    public static final char[]  taggedchars_ParticipantTrustCompany    = {'1','6','6', EQUALSchar, 'P','T','C', SOHchar};
    public static final String  text_ParticipantTrustCompany           = "ParticipantTrustCompany";
    public static final String  LocalMarketSettleLocation              = "ISO";
    public static final String  string_LocalMarketSettleLocation       = LocalMarketSettleLocation;
    public static final char[]  chars_LocalMarketSettleLocation        = {'I','S','O'};
    public static final String  tagged_LocalMarketSettleLocation       = TagIDAsString + EQUALS + string_LocalMarketSettleLocation + SOH;
    public static final char[]  taggedchars_LocalMarketSettleLocation  = {'1','6','6', EQUALSchar, 'I','S','O', SOHchar};
    public static final String  text_LocalMarketSettleLocation         = "LocalMarketSettleLocation";

    private static FixSettlLocationField flyweightCedel;
    public static final FixSettlLocationField flyweightCedel()
    {
        if (flyweightCedel == null)
        {
            synchronized(FixSettlLocationField.class)
            {
                if (flyweightCedel == null)
                {
                    flyweightCedel  = new FixSettlLocationField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Cedel;}
                     public String  getValueDescription()             {return text_Cedel;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Cedel).append("|").append(text_Cedel).append("]").toString();}
                     public boolean isCedel()                         {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Cedel);}
                    };
                }
            }
        }

        return flyweightCedel;
    }

    private static FixSettlLocationField flyweightDepositoryTrustCompany;
    public static final FixSettlLocationField flyweightDepositoryTrustCompany()
    {
        if (flyweightDepositoryTrustCompany == null)
        {
            synchronized(FixSettlLocationField.class)
            {
                if (flyweightDepositoryTrustCompany == null)
                {
                    flyweightDepositoryTrustCompany  = new FixSettlLocationField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_DepositoryTrustCompany;}
                     public String  getValueDescription()             {return text_DepositoryTrustCompany;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_DepositoryTrustCompany).append("|").append(text_DepositoryTrustCompany).append("]").toString();}
                     public boolean isDepositoryTrustCompany()        {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_DepositoryTrustCompany);}
                    };
                }
            }
        }

        return flyweightDepositoryTrustCompany;
    }

    private static FixSettlLocationField flyweightEuroclear;
    public static final FixSettlLocationField flyweightEuroclear()
    {
        if (flyweightEuroclear == null)
        {
            synchronized(FixSettlLocationField.class)
            {
                if (flyweightEuroclear == null)
                {
                    flyweightEuroclear  = new FixSettlLocationField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Euroclear;}
                     public String  getValueDescription()             {return text_Euroclear;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Euroclear).append("|").append(text_Euroclear).append("]").toString();}
                     public boolean isEuroclear()                     {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Euroclear);}
                    };
                }
            }
        }

        return flyweightEuroclear;
    }

    private static FixSettlLocationField flyweightFederalBookEntry;
    public static final FixSettlLocationField flyweightFederalBookEntry()
    {
        if (flyweightFederalBookEntry == null)
        {
            synchronized(FixSettlLocationField.class)
            {
                if (flyweightFederalBookEntry == null)
                {
                    flyweightFederalBookEntry  = new FixSettlLocationField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_FederalBookEntry;}
                     public String  getValueDescription()             {return text_FederalBookEntry;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_FederalBookEntry).append("|").append(text_FederalBookEntry).append("]").toString();}
                     public boolean isFederalBookEntry()              {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_FederalBookEntry);}
                    };
                }
            }
        }

        return flyweightFederalBookEntry;
    }

    private static FixSettlLocationField flyweightPhysical;
    public static final FixSettlLocationField flyweightPhysical()
    {
        if (flyweightPhysical == null)
        {
            synchronized(FixSettlLocationField.class)
            {
                if (flyweightPhysical == null)
                {
                    flyweightPhysical  = new FixSettlLocationField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Physical;}
                     public String  getValueDescription()             {return text_Physical;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Physical).append("|").append(text_Physical).append("]").toString();}
                     public boolean isPhysical()                      {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Physical);}
                    };
                }
            }
        }

        return flyweightPhysical;
    }

    private static FixSettlLocationField flyweightParticipantTrustCompany;
    public static final FixSettlLocationField flyweightParticipantTrustCompany()
    {
        if (flyweightParticipantTrustCompany == null)
        {
            synchronized(FixSettlLocationField.class)
            {
                if (flyweightParticipantTrustCompany == null)
                {
                    flyweightParticipantTrustCompany  = new FixSettlLocationField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_ParticipantTrustCompany;}
                     public String  getValueDescription()             {return text_ParticipantTrustCompany;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ParticipantTrustCompany).append("|").append(text_ParticipantTrustCompany).append("]").toString();}
                     public boolean isParticipantTrustCompany()       {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ParticipantTrustCompany);}
                    };
                }
            }
        }

        return flyweightParticipantTrustCompany;
    }

    private static FixSettlLocationField flyweightLocalMarketSettleLocation;
    public static final FixSettlLocationField flyweightLocalMarketSettleLocation()
    {
        if (flyweightLocalMarketSettleLocation == null)
        {
            synchronized(FixSettlLocationField.class)
            {
                if (flyweightLocalMarketSettleLocation == null)
                {
                    flyweightLocalMarketSettleLocation  = new FixSettlLocationField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_LocalMarketSettleLocation;}
                     public String  getValueDescription()             {return text_LocalMarketSettleLocation;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_LocalMarketSettleLocation).append("|").append(text_LocalMarketSettleLocation).append("]").toString();}
                     public boolean isLocalMarketSettleLocation()     {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_LocalMarketSettleLocation);}
                    };
                }
            }
        }

        return flyweightLocalMarketSettleLocation;
    }


    public boolean isCedel()                       {return false;}
    public boolean isDepositoryTrustCompany()      {return false;}
    public boolean isEuroclear()                   {return false;}
    public boolean isFederalBookEntry()            {return false;}
    public boolean isPhysical()                    {return false;}
    public boolean isParticipantTrustCompany()     {return false;}
    public boolean isLocalMarketSettleLocation()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixSettlLocationField create(char[] array, int offset, int length)
    {
        return create(new String(array, offset, length));
    }

    public static FixSettlLocationField create(final String paramString)
    {                                                                                               
        if (Cedel.equals(paramString))               return flyweightCedel();
        if (DepositoryTrustCompany.equals(paramString)) return flyweightDepositoryTrustCompany();
        if (Euroclear.equals(paramString))           return flyweightEuroclear();
        if (FederalBookEntry.equals(paramString))    return flyweightFederalBookEntry();
        if (Physical.equals(paramString))            return flyweightPhysical();
        if (ParticipantTrustCompany.equals(paramString)) return flyweightParticipantTrustCompany();
        if (LocalMarketSettleLocation.equals(paramString)) return flyweightLocalMarketSettleLocation();
        return null;
    }                                                                                               
}
