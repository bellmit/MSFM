package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixDiscretionInstField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [388] (known as DiscretionInst).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixDiscretionInstField implements FixFieldIF, HasCharValueIF
{   
    public static final int    TagID         =  388;
    public static final String TagIDAsString = "388";
    public static final char[] TagIDAsChars  = {'3','8','8'};
    public static final String TagName       = "DiscretionInst";
    public static final String TagFixType    = "CHAR";

    public static final char    RelatedToDisplayedPrice                 = '0';
    public static final String  string_RelatedToDisplayedPrice          = "0";
    public static final String  tagged_RelatedToDisplayedPrice          = TagIDAsString + EQUALS + string_RelatedToDisplayedPrice + SOH;
    public static final char[]  taggedchars_RelatedToDisplayedPrice     = {'3','8','8', EQUALSchar, '0', SOHchar};
    public static final String  text_RelatedToDisplayedPrice            = "RelatedToDisplayedPrice";
    public static final char    RelatedToMarketPrice                    = '1';
    public static final String  string_RelatedToMarketPrice             = "1";
    public static final String  tagged_RelatedToMarketPrice             = TagIDAsString + EQUALS + string_RelatedToMarketPrice + SOH;
    public static final char[]  taggedchars_RelatedToMarketPrice        = {'3','8','8', EQUALSchar, '1', SOHchar};
    public static final String  text_RelatedToMarketPrice               = "RelatedToMarketPrice";
    public static final char    RelatedToPrimaryPrice                   = '2';
    public static final String  string_RelatedToPrimaryPrice            = "2";
    public static final String  tagged_RelatedToPrimaryPrice            = TagIDAsString + EQUALS + string_RelatedToPrimaryPrice + SOH;
    public static final char[]  taggedchars_RelatedToPrimaryPrice       = {'3','8','8', EQUALSchar, '2', SOHchar};
    public static final String  text_RelatedToPrimaryPrice              = "RelatedToPrimaryPrice";
    public static final char    RelatedToLocalPrimaryPrice              = '3';
    public static final String  string_RelatedToLocalPrimaryPrice       = "3";
    public static final String  tagged_RelatedToLocalPrimaryPrice       = TagIDAsString + EQUALS + string_RelatedToLocalPrimaryPrice + SOH;
    public static final char[]  taggedchars_RelatedToLocalPrimaryPrice  = {'3','8','8', EQUALSchar, '3', SOHchar};
    public static final String  text_RelatedToLocalPrimaryPrice         = "RelatedToLocalPrimaryPrice";
    public static final char    RelatedToMidpointPrice                  = '4';
    public static final String  string_RelatedToMidpointPrice           = "4";
    public static final String  tagged_RelatedToMidpointPrice           = TagIDAsString + EQUALS + string_RelatedToMidpointPrice + SOH;
    public static final char[]  taggedchars_RelatedToMidpointPrice      = {'3','8','8', EQUALSchar, '4', SOHchar};
    public static final String  text_RelatedToMidpointPrice             = "RelatedToMidpointPrice";
    public static final char    RelatedToLastTradePrice                 = '5';
    public static final String  string_RelatedToLastTradePrice          = "5";
    public static final String  tagged_RelatedToLastTradePrice          = TagIDAsString + EQUALS + string_RelatedToLastTradePrice + SOH;
    public static final char[]  taggedchars_RelatedToLastTradePrice     = {'3','8','8', EQUALSchar, '5', SOHchar};
    public static final String  text_RelatedToLastTradePrice            = "RelatedToLastTradePrice";

    private static FixDiscretionInstField flyweightRelatedToDisplayedPrice;
    public static final FixDiscretionInstField flyweightRelatedToDisplayedPrice()
    {
        if (flyweightRelatedToDisplayedPrice == null)
        {
            synchronized(FixDiscretionInstField.class)
            {
                if (flyweightRelatedToDisplayedPrice == null)
                {
                    flyweightRelatedToDisplayedPrice  = new FixDiscretionInstField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_RelatedToDisplayedPrice;}
                     public String  getValueDescription()             {return text_RelatedToDisplayedPrice;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_RelatedToDisplayedPrice).append("|").append(text_RelatedToDisplayedPrice).append("]").toString();}
                     public boolean isRelatedToDisplayedPrice()       {return true;}
                     public char    charValue()                       {return RelatedToDisplayedPrice;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_RelatedToDisplayedPrice);}
                    };
                }
            }
        }

        return flyweightRelatedToDisplayedPrice;
    }

    private static FixDiscretionInstField flyweightRelatedToMarketPrice;
    public static final FixDiscretionInstField flyweightRelatedToMarketPrice()
    {
        if (flyweightRelatedToMarketPrice == null)
        {
            synchronized(FixDiscretionInstField.class)
            {
                if (flyweightRelatedToMarketPrice == null)
                {
                    flyweightRelatedToMarketPrice  = new FixDiscretionInstField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_RelatedToMarketPrice;}
                     public String  getValueDescription()             {return text_RelatedToMarketPrice;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_RelatedToMarketPrice).append("|").append(text_RelatedToMarketPrice).append("]").toString();}
                     public boolean isRelatedToMarketPrice()          {return true;}
                     public char    charValue()                       {return RelatedToMarketPrice;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_RelatedToMarketPrice);}
                    };
                }
            }
        }

        return flyweightRelatedToMarketPrice;
    }

    private static FixDiscretionInstField flyweightRelatedToPrimaryPrice;
    public static final FixDiscretionInstField flyweightRelatedToPrimaryPrice()
    {
        if (flyweightRelatedToPrimaryPrice == null)
        {
            synchronized(FixDiscretionInstField.class)
            {
                if (flyweightRelatedToPrimaryPrice == null)
                {
                    flyweightRelatedToPrimaryPrice  = new FixDiscretionInstField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_RelatedToPrimaryPrice;}
                     public String  getValueDescription()             {return text_RelatedToPrimaryPrice;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_RelatedToPrimaryPrice).append("|").append(text_RelatedToPrimaryPrice).append("]").toString();}
                     public boolean isRelatedToPrimaryPrice()         {return true;}
                     public char    charValue()                       {return RelatedToPrimaryPrice;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_RelatedToPrimaryPrice);}
                    };
                }
            }
        }

        return flyweightRelatedToPrimaryPrice;
    }

    private static FixDiscretionInstField flyweightRelatedToLocalPrimaryPrice;
    public static final FixDiscretionInstField flyweightRelatedToLocalPrimaryPrice()
    {
        if (flyweightRelatedToLocalPrimaryPrice == null)
        {
            synchronized(FixDiscretionInstField.class)
            {
                if (flyweightRelatedToLocalPrimaryPrice == null)
                {
                    flyweightRelatedToLocalPrimaryPrice  = new FixDiscretionInstField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_RelatedToLocalPrimaryPrice;}
                     public String  getValueDescription()             {return text_RelatedToLocalPrimaryPrice;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_RelatedToLocalPrimaryPrice).append("|").append(text_RelatedToLocalPrimaryPrice).append("]").toString();}
                     public boolean isRelatedToLocalPrimaryPrice()    {return true;}
                     public char    charValue()                       {return RelatedToLocalPrimaryPrice;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_RelatedToLocalPrimaryPrice);}
                    };
                }
            }
        }

        return flyweightRelatedToLocalPrimaryPrice;
    }

    private static FixDiscretionInstField flyweightRelatedToMidpointPrice;
    public static final FixDiscretionInstField flyweightRelatedToMidpointPrice()
    {
        if (flyweightRelatedToMidpointPrice == null)
        {
            synchronized(FixDiscretionInstField.class)
            {
                if (flyweightRelatedToMidpointPrice == null)
                {
                    flyweightRelatedToMidpointPrice  = new FixDiscretionInstField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_RelatedToMidpointPrice;}
                     public String  getValueDescription()             {return text_RelatedToMidpointPrice;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_RelatedToMidpointPrice).append("|").append(text_RelatedToMidpointPrice).append("]").toString();}
                     public boolean isRelatedToMidpointPrice()        {return true;}
                     public char    charValue()                       {return RelatedToMidpointPrice;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_RelatedToMidpointPrice);}
                    };
                }
            }
        }

        return flyweightRelatedToMidpointPrice;
    }

    private static FixDiscretionInstField flyweightRelatedToLastTradePrice;
    public static final FixDiscretionInstField flyweightRelatedToLastTradePrice()
    {
        if (flyweightRelatedToLastTradePrice == null)
        {
            synchronized(FixDiscretionInstField.class)
            {
                if (flyweightRelatedToLastTradePrice == null)
                {
                    flyweightRelatedToLastTradePrice  = new FixDiscretionInstField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_RelatedToLastTradePrice;}
                     public String  getValueDescription()             {return text_RelatedToLastTradePrice;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_RelatedToLastTradePrice).append("|").append(text_RelatedToLastTradePrice).append("]").toString();}
                     public boolean isRelatedToLastTradePrice()       {return true;}
                     public char    charValue()                       {return RelatedToLastTradePrice;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_RelatedToLastTradePrice);}
                    };
                }
            }
        }

        return flyweightRelatedToLastTradePrice;
    }


    public boolean isRelatedToDisplayedPrice()      {return false;}
    public boolean isRelatedToMarketPrice()         {return false;}
    public boolean isRelatedToPrimaryPrice()        {return false;}
    public boolean isRelatedToLocalPrimaryPrice()   {return false;}
    public boolean isRelatedToMidpointPrice()       {return false;}
    public boolean isRelatedToLastTradePrice()      {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixDiscretionInstField create(char[] array, int offset, int length)
    {
        if (length == 1)
        {
            return create(array[offset]);
        }

        return null;
    }

    public static FixDiscretionInstField create(final char param)
    {
        switch (param)
        {                                                                                           
            case RelatedToDisplayedPrice:    return flyweightRelatedToDisplayedPrice();
            case RelatedToMarketPrice:       return flyweightRelatedToMarketPrice();
            case RelatedToPrimaryPrice:      return flyweightRelatedToPrimaryPrice();
            case RelatedToLocalPrimaryPrice: return flyweightRelatedToLocalPrimaryPrice();
            case RelatedToMidpointPrice:     return flyweightRelatedToMidpointPrice();
            case RelatedToLastTradePrice:    return flyweightRelatedToLastTradePrice();
        }
                                                                                                    
        return null;
    }                                                                                               
}
