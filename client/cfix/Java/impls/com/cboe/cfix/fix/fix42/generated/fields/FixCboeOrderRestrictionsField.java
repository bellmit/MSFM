package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixCboeOrderRestrictionsField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [6529] (known as CboeOrderRestrictions).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixCboeOrderRestrictionsField implements FixFieldIF
{   
    public static final int    TagID         =  6529;
    public static final String TagIDAsString = "6529";
    public static final char[] TagIDAsChars  = {'6','5','2','9'};
    public static final String TagName       = "CboeOrderRestrictions";
    public static final String TagFixType    = "MULTIPLEVALUESTRING";

    public static final char    Five              = '5';
    public static final String  string_Five       = "5";
    public static final String  tagged_Five       = TagIDAsString + EQUALS + string_Five + SOH;
    public static final char[]  taggedchars_Five  = {'6','5','2','9', EQUALSchar, '5', SOHchar};
    public static final int     bitmask_Five      = 1 << 1; public static final String text_Five       = "Five";
    public static final char    Nine              = '9';
    public static final String  string_Nine       = "9";
    public static final String  tagged_Nine       = TagIDAsString + EQUALS + string_Nine + SOH;
    public static final char[]  taggedchars_Nine  = {'6','5','2','9', EQUALSchar, '9', SOHchar};
    public static final int     bitmask_Nine      = 1 << 2; public static final String text_Nine       = "Nine";

    private static FixCboeOrderRestrictionsField flyweightFive;
    public static final FixCboeOrderRestrictionsField flyweightFive()
    {
        if (flyweightFive == null)
        {
            synchronized(FixCboeOrderRestrictionsField.class)
            {
                if (flyweightFive == null)
                {
                    flyweightFive  = new FixCboeOrderRestrictionsField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Five;}
                     public String  getValueDescription()             {return text_Five;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Five).append("|").append(text_Five).append("]").toString();}
                     public boolean isFive()                          {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Five);}
                    };
                }
            }
        }

        return flyweightFive;
    }

    private static FixCboeOrderRestrictionsField flyweightNine;
    public static final FixCboeOrderRestrictionsField flyweightNine()
    {
        if (flyweightNine == null)
        {
            synchronized(FixCboeOrderRestrictionsField.class)
            {
                if (flyweightNine == null)
                {
                    flyweightNine  = new FixCboeOrderRestrictionsField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Nine;}
                     public String  getValueDescription()             {return text_Nine;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Nine).append("|").append(text_Nine).append("]").toString();}
                     public boolean isNine()                          {return true;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Nine);}
                    };
                }
            }
        }

        return flyweightNine;
    }


    public boolean isFive()   {return false;}
    public boolean isNine()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixCboeOrderRestrictionsField create(char[] array, int offset, int length)
    {
        return create(new String(array, offset, length));
    }

    public static FixCboeOrderRestrictionsField create(final String multiparam)
    {
        int bitmask = 0;

        for (int i = 0; i < multiparam.length(); i++)
        {
            switch (multiparam.charAt(i))
            {                                                                                           
                case Five:
                    if (multiparam.length() == 1) return flyweightFive();
                    bitmask |= bitmask_Five;
                    break;
                case Nine:
                    if (multiparam.length() == 1) return flyweightNine();
                    bitmask |= bitmask_Nine;
                    break;
                default:
                    return null;
            }
        }

        if (bitmask == 0)
        {
            return null;
        }

        final int bits = bitmask;

        return new FixCboeOrderRestrictionsField()
        {       public int value = bits;
                public boolean hasValue()                        {return bits != 0;}
                public String  getValue()                        {return this.toMultipleValueString(value);}
        };
    }                                                                                               
    public static String toMultipleValueString(int bitmask)
    {
        StringBuilder buffer = new StringBuilder();
                                                                                                        
        if (BitHelper.isBitMaskSet(bitmask, bitmask_Five)) buffer.append(string_Five).append(' ');
        if (BitHelper.isBitMaskSet(bitmask, bitmask_Nine)) buffer.append(string_Nine).append(' ');

        if (buffer.charAt(buffer.length() - 1) == ' ') buffer.setLength(buffer.length() - 1);

        return buffer.toString();
    }                                                                                                   
}
