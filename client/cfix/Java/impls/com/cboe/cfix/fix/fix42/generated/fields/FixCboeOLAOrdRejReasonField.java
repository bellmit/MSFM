package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixCboeOLAOrdRejReasonField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [5209] (known as CboeOLAOrdRejReason).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixCboeOLAOrdRejReasonField implements FixFieldIF, HasIntValueIF
{   
    public static final int    TagID         =  5209;
    public static final String TagIDAsString = "5209";
    public static final char[] TagIDAsChars  = {'5','2','0','9'};
    public static final String TagName       = "CboeOLAOrdRejReason";
    public static final String TagFixType    = "INT";
    public static final char[]  taggedchars_value0 = {'5','2','0','9', EQUALSchar, ZEROchar, SOHchar};
    public static final char[]  taggedchars_value1 = {'5','2','0','9', EQUALSchar, ONEchar,  SOHchar};

    public static final int     BrokerOrExchangeOption                        = 0;
    public static final String  string_BrokerOrExchangeOption                 = "0";
    public static final String  tagged_BrokerOrExchangeOption                 = TagIDAsString + EQUALS + string_BrokerOrExchangeOption + SOH;
    public static final char[]  taggedchars_BrokerOrExchangeOption            = {'5','2','0','9', EQUALSchar, '0', SOHchar};
    public static final String  text_BrokerOrExchangeOption                   = "BrokerOrExchangeOption";
    public static final int     UnknownSymbol                                 = 1;
    public static final String  string_UnknownSymbol                          = "1";
    public static final String  tagged_UnknownSymbol                          = TagIDAsString + EQUALS + string_UnknownSymbol + SOH;
    public static final char[]  taggedchars_UnknownSymbol                     = {'5','2','0','9', EQUALSchar, '1', SOHchar};
    public static final String  text_UnknownSymbol                            = "UnknownSymbol";
    public static final int     ExchangeOrTradingSessionClosed                = 2;
    public static final String  string_ExchangeOrTradingSessionClosed         = "2";
    public static final String  tagged_ExchangeOrTradingSessionClosed         = TagIDAsString + EQUALS + string_ExchangeOrTradingSessionClosed + SOH;
    public static final char[]  taggedchars_ExchangeOrTradingSessionClosed    = {'5','2','0','9', EQUALSchar, '2', SOHchar};
    public static final String  text_ExchangeOrTradingSessionClosed           = "ExchangeOrTradingSessionClosed";
    public static final int     OrderExceedsLimit                             = 3;
    public static final String  string_OrderExceedsLimit                      = "3";
    public static final String  tagged_OrderExceedsLimit                      = TagIDAsString + EQUALS + string_OrderExceedsLimit + SOH;
    public static final char[]  taggedchars_OrderExceedsLimit                 = {'5','2','0','9', EQUALSchar, '3', SOHchar};
    public static final String  text_OrderExceedsLimit                        = "OrderExceedsLimit";
    public static final int     TooLateToEnter                                = 4;
    public static final String  string_TooLateToEnter                         = "4";
    public static final String  tagged_TooLateToEnter                         = TagIDAsString + EQUALS + string_TooLateToEnter + SOH;
    public static final char[]  taggedchars_TooLateToEnter                    = {'5','2','0','9', EQUALSchar, '4', SOHchar};
    public static final String  text_TooLateToEnter                           = "TooLateToEnter";
    public static final int     UnknownOrder                                  = 5;
    public static final String  string_UnknownOrder                           = "5";
    public static final String  tagged_UnknownOrder                           = TagIDAsString + EQUALS + string_UnknownOrder + SOH;
    public static final char[]  taggedchars_UnknownOrder                      = {'5','2','0','9', EQUALSchar, '5', SOHchar};
    public static final String  text_UnknownOrder                             = "UnknownOrder";
    public static final int     DuplicateOrder                                = 6;
    public static final String  string_DuplicateOrder                         = "6";
    public static final String  tagged_DuplicateOrder                         = TagIDAsString + EQUALS + string_DuplicateOrder + SOH;
    public static final char[]  taggedchars_DuplicateOrder                    = {'5','2','0','9', EQUALSchar, '6', SOHchar};
    public static final String  text_DuplicateOrder                           = "DuplicateOrder";
    public static final int     StaleOrder                                    = 8;
    public static final String  string_StaleOrder                             = "8";
    public static final String  tagged_StaleOrder                             = TagIDAsString + EQUALS + string_StaleOrder + SOH;
    public static final char[]  taggedchars_StaleOrder                        = {'5','2','0','9', EQUALSchar, '8', SOHchar};
    public static final String  text_StaleOrder                               = "StaleOrder";
    public static final int     InvalidInstrumentStateRotation                = 31;
    public static final String  string_InvalidInstrumentStateRotation         = "31";
    public static final String  tagged_InvalidInstrumentStateRotation         = TagIDAsString + EQUALS + string_InvalidInstrumentStateRotation + SOH;
    public static final char[]  taggedchars_InvalidInstrumentStateRotation    = {'5','2','0','9', EQUALSchar, '3','1', SOHchar};
    public static final String  text_InvalidInstrumentStateRotation           = "InvalidInstrumentStateRotation";
    public static final int     InvalidInstrumentStateNonFirm                 = 32;
    public static final String  string_InvalidInstrumentStateNonFirm          = "32";
    public static final String  tagged_InvalidInstrumentStateNonFirm          = TagIDAsString + EQUALS + string_InvalidInstrumentStateNonFirm + SOH;
    public static final char[]  taggedchars_InvalidInstrumentStateNonFirm     = {'5','2','0','9', EQUALSchar, '3','2', SOHchar};
    public static final String  text_InvalidInstrumentStateNonFirm            = "InvalidInstrumentStateNonFirm";
    public static final int     InvalidInstrumentStateHalted                  = 33;
    public static final String  string_InvalidInstrumentStateHalted           = "33";
    public static final String  tagged_InvalidInstrumentStateHalted           = TagIDAsString + EQUALS + string_InvalidInstrumentStateHalted + SOH;
    public static final char[]  taggedchars_InvalidInstrumentStateHalted      = {'5','2','0','9', EQUALSchar, '3','3', SOHchar};
    public static final String  text_InvalidInstrumentStateHalted             = "InvalidInstrumentStateHalted";
    public static final int     NotAtNbbo                                     = 34;
    public static final String  string_NotAtNbbo                              = "34";
    public static final String  tagged_NotAtNbbo                              = TagIDAsString + EQUALS + string_NotAtNbbo + SOH;
    public static final char[]  taggedchars_NotAtNbbo                         = {'5','2','0','9', EQUALSchar, '3','4', SOHchar};
    public static final String  text_NotAtNbbo                                = "NotAtNbbo";
    public static final int     PriceOutOfBounds                              = 35;
    public static final String  string_PriceOutOfBounds                       = "35";
    public static final String  tagged_PriceOutOfBounds                       = TagIDAsString + EQUALS + string_PriceOutOfBounds + SOH;
    public static final char[]  taggedchars_PriceOutOfBounds                  = {'5','2','0','9', EQUALSchar, '3','5', SOHchar};
    public static final String  text_PriceOutOfBounds                         = "PriceOutOfBounds";
    public static final int     UnknownClearingFirm                           = 36;
    public static final String  string_UnknownClearingFirm                    = "36";
    public static final String  tagged_UnknownClearingFirm                    = TagIDAsString + EQUALS + string_UnknownClearingFirm + SOH;
    public static final char[]  taggedchars_UnknownClearingFirm               = {'5','2','0','9', EQUALSchar, '3','6', SOHchar};
    public static final String  text_UnknownClearingFirm                      = "UnknownClearingFirm";
    public static final int     SubAccountIdMissing                           = 37;
    public static final String  string_SubAccountIdMissing                    = "37";
    public static final String  tagged_SubAccountIdMissing                    = TagIDAsString + EQUALS + string_SubAccountIdMissing + SOH;
    public static final char[]  taggedchars_SubAccountIdMissing               = {'5','2','0','9', EQUALSchar, '3','7', SOHchar};
    public static final String  text_SubAccountIdMissing                      = "SubAccountIdMissing";
    public static final int     InvalidAutoEx                                 = 38;
    public static final String  string_InvalidAutoEx                          = "38";
    public static final String  tagged_InvalidAutoEx                          = TagIDAsString + EQUALS + string_InvalidAutoEx + SOH;
    public static final char[]  taggedchars_InvalidAutoEx                     = {'5','2','0','9', EQUALSchar, '3','8', SOHchar};
    public static final String  text_InvalidAutoEx                            = "InvalidAutoEx";
    public static final int     AccountMissing                                = 39;
    public static final String  string_AccountMissing                         = "39";
    public static final String  tagged_AccountMissing                         = TagIDAsString + EQUALS + string_AccountMissing + SOH;
    public static final char[]  taggedchars_AccountMissing                    = {'5','2','0','9', EQUALSchar, '3','9', SOHchar};
    public static final String  text_AccountMissing                           = "AccountMissing";
    public static final int     InvalidTimeInForce                            = 40;
    public static final String  string_InvalidTimeInForce                     = "40";
    public static final String  tagged_InvalidTimeInForce                     = TagIDAsString + EQUALS + string_InvalidTimeInForce + SOH;
    public static final char[]  taggedchars_InvalidTimeInForce                = {'5','2','0','9', EQUALSchar, '4','0', SOHchar};
    public static final String  text_InvalidTimeInForce                       = "InvalidTimeInForce";
    public static final int     InvalidOpenClose                              = 41;
    public static final String  string_InvalidOpenClose                       = "41";
    public static final String  tagged_InvalidOpenClose                       = TagIDAsString + EQUALS + string_InvalidOpenClose + SOH;
    public static final char[]  taggedchars_InvalidOpenClose                  = {'5','2','0','9', EQUALSchar, '4','1', SOHchar};
    public static final String  text_InvalidOpenClose                         = "InvalidOpenClose";
    public static final int     MissingExecBroker                             = 42;
    public static final String  string_MissingExecBroker                      = "42";
    public static final String  tagged_MissingExecBroker                      = TagIDAsString + EQUALS + string_MissingExecBroker + SOH;
    public static final char[]  taggedchars_MissingExecBroker                 = {'5','2','0','9', EQUALSchar, '4','2', SOHchar};
    public static final String  text_MissingExecBroker                        = "MissingExecBroker";
    public static final int     MissingClearingAccount                        = 43;
    public static final String  string_MissingClearingAccount                 = "43";
    public static final String  tagged_MissingClearingAccount                 = TagIDAsString + EQUALS + string_MissingClearingAccount + SOH;
    public static final char[]  taggedchars_MissingClearingAccount            = {'5','2','0','9', EQUALSchar, '4','3', SOHchar};
    public static final String  text_MissingClearingAccount                   = "MissingClearingAccount";
    public static final int     MissingExecInfo                               = 44;
    public static final String  string_MissingExecInfo                        = "44";
    public static final String  tagged_MissingExecInfo                        = TagIDAsString + EQUALS + string_MissingExecInfo + SOH;
    public static final char[]  taggedchars_MissingExecInfo                   = {'5','2','0','9', EQUALSchar, '4','4', SOHchar};
    public static final String  text_MissingExecInfo                          = "MissingExecInfo";
    public static final int     OrderReceivedTooSoon                          = 45;
    public static final String  string_OrderReceivedTooSoon                   = "45";
    public static final String  tagged_OrderReceivedTooSoon                   = TagIDAsString + EQUALS + string_OrderReceivedTooSoon + SOH;
    public static final char[]  taggedchars_OrderReceivedTooSoon              = {'5','2','0','9', EQUALSchar, '4','5', SOHchar};
    public static final String  text_OrderReceivedTooSoon                     = "OrderReceivedTooSoon";
    public static final int     InvalidOrderCapacity                          = 46;
    public static final String  string_InvalidOrderCapacity                   = "46";
    public static final String  tagged_InvalidOrderCapacity                   = TagIDAsString + EQUALS + string_InvalidOrderCapacity + SOH;
    public static final char[]  taggedchars_InvalidOrderCapacity              = {'5','2','0','9', EQUALSchar, '4','6', SOHchar};
    public static final String  text_InvalidOrderCapacity                     = "InvalidOrderCapacity";
    public static final int     LatePrintToOpraTape                           = 61;
    public static final String  string_LatePrintToOpraTape                    = "61";
    public static final String  tagged_LatePrintToOpraTape                    = TagIDAsString + EQUALS + string_LatePrintToOpraTape + SOH;
    public static final char[]  taggedchars_LatePrintToOpraTape               = {'5','2','0','9', EQUALSchar, '6','1', SOHchar};
    public static final String  text_LatePrintToOpraTape                      = "LatePrintToOpraTape";
    public static final int     CommunicationDelaysToOpra                     = 62;
    public static final String  string_CommunicationDelaysToOpra              = "62";
    public static final String  tagged_CommunicationDelaysToOpra              = TagIDAsString + EQUALS + string_CommunicationDelaysToOpra + SOH;
    public static final char[]  taggedchars_CommunicationDelaysToOpra         = {'5','2','0','9', EQUALSchar, '6','2', SOHchar};
    public static final String  text_CommunicationDelaysToOpra                = "CommunicationDelaysToOpra";
    public static final int     ManualTrade                                   = 63;
    public static final String  string_ManualTrade                            = "63";
    public static final String  tagged_ManualTrade                            = TagIDAsString + EQUALS + string_ManualTrade + SOH;
    public static final char[]  taggedchars_ManualTrade                       = {'5','2','0','9', EQUALSchar, '6','3', SOHchar};
    public static final String  text_ManualTrade                              = "ManualTrade";
    public static final int     ProcessingProblemsAtMarketCenter              = 64;
    public static final String  string_ProcessingProblemsAtMarketCenter       = "64";
    public static final String  tagged_ProcessingProblemsAtMarketCenter       = TagIDAsString + EQUALS + string_ProcessingProblemsAtMarketCenter + SOH;
    public static final char[]  taggedchars_ProcessingProblemsAtMarketCenter  = {'5','2','0','9', EQUALSchar, '6','4', SOHchar};
    public static final String  text_ProcessingProblemsAtMarketCenter         = "ProcessingProblemsAtMarketCenter";
    public static final int     ComplexOrder                                  = 65;
    public static final String  string_ComplexOrder                           = "65";
    public static final String  tagged_ComplexOrder                           = TagIDAsString + EQUALS + string_ComplexOrder + SOH;
    public static final char[]  taggedchars_ComplexOrder                      = {'5','2','0','9', EQUALSchar, '6','5', SOHchar};
    public static final String  text_ComplexOrder                             = "ComplexOrder";
    public static final int     TradeRejected                                 = 66;
    public static final String  string_TradeRejected                          = "66";
    public static final String  tagged_TradeRejected                          = TagIDAsString + EQUALS + string_TradeRejected + SOH;
    public static final char[]  taggedchars_TradeRejected                     = {'5','2','0','9', EQUALSchar, '6','6', SOHchar};
    public static final String  text_TradeRejected                            = "TradeRejected";
    public static final int     TradeBustedCorrected                          = 67;
    public static final String  string_TradeBustedCorrected                   = "67";
    public static final String  tagged_TradeBustedCorrected                   = TagIDAsString + EQUALS + string_TradeBustedCorrected + SOH;
    public static final char[]  taggedchars_TradeBustedCorrected              = {'5','2','0','9', EQUALSchar, '6','7', SOHchar};
    public static final String  text_TradeBustedCorrected                     = "TradeBustedCorrected";
    public static final int     OriginalOrderRejected                         = 68;
    public static final String  string_OriginalOrderRejected                  = "68";
    public static final String  tagged_OriginalOrderRejected                  = TagIDAsString + EQUALS + string_OriginalOrderRejected + SOH;
    public static final char[]  taggedchars_OriginalOrderRejected             = {'5','2','0','9', EQUALSchar, '6','8', SOHchar};
    public static final String  text_OriginalOrderRejected                    = "OriginalOrderRejected";
    public static final int     CancelDueToNonBlockTrade                      = 69;
    public static final String  string_CancelDueToNonBlockTrade               = "69";
    public static final String  tagged_CancelDueToNonBlockTrade               = TagIDAsString + EQUALS + string_CancelDueToNonBlockTrade + SOH;
    public static final char[]  taggedchars_CancelDueToNonBlockTrade          = {'5','2','0','9', EQUALSchar, '6','9', SOHchar};
    public static final String  text_CancelDueToNonBlockTrade                 = "CancelDueToNonBlockTrade";

    private static FixCboeOLAOrdRejReasonField flyweightBrokerOrExchangeOption;
    public static final FixCboeOLAOrdRejReasonField flyweightBrokerOrExchangeOption()
    {
        if (flyweightBrokerOrExchangeOption == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightBrokerOrExchangeOption == null)
                {
                    flyweightBrokerOrExchangeOption  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_BrokerOrExchangeOption;}
                     public String  getValueDescription()                  {return text_BrokerOrExchangeOption;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_BrokerOrExchangeOption).append("|").append(text_BrokerOrExchangeOption).append("]").toString();}
                     public boolean isBrokerOrExchangeOption()             {return true;}
                     public int     intValue()                             {return BrokerOrExchangeOption;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_BrokerOrExchangeOption);}
                    };
                }
            }
        }

        return flyweightBrokerOrExchangeOption;
    }

    private static FixCboeOLAOrdRejReasonField flyweightUnknownSymbol;
    public static final FixCboeOLAOrdRejReasonField flyweightUnknownSymbol()
    {
        if (flyweightUnknownSymbol == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightUnknownSymbol == null)
                {
                    flyweightUnknownSymbol  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_UnknownSymbol;}
                     public String  getValueDescription()                  {return text_UnknownSymbol;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_UnknownSymbol).append("|").append(text_UnknownSymbol).append("]").toString();}
                     public boolean isUnknownSymbol()                      {return true;}
                     public int     intValue()                             {return UnknownSymbol;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_UnknownSymbol);}
                    };
                }
            }
        }

        return flyweightUnknownSymbol;
    }

    private static FixCboeOLAOrdRejReasonField flyweightExchangeOrTradingSessionClosed;
    public static final FixCboeOLAOrdRejReasonField flyweightExchangeOrTradingSessionClosed()
    {
        if (flyweightExchangeOrTradingSessionClosed == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightExchangeOrTradingSessionClosed == null)
                {
                    flyweightExchangeOrTradingSessionClosed  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_ExchangeOrTradingSessionClosed;}
                     public String  getValueDescription()                  {return text_ExchangeOrTradingSessionClosed;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ExchangeOrTradingSessionClosed).append("|").append(text_ExchangeOrTradingSessionClosed).append("]").toString();}
                     public boolean isExchangeOrTradingSessionClosed()     {return true;}
                     public int     intValue()                             {return ExchangeOrTradingSessionClosed;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ExchangeOrTradingSessionClosed);}
                    };
                }
            }
        }

        return flyweightExchangeOrTradingSessionClosed;
    }

    private static FixCboeOLAOrdRejReasonField flyweightOrderExceedsLimit;
    public static final FixCboeOLAOrdRejReasonField flyweightOrderExceedsLimit()
    {
        if (flyweightOrderExceedsLimit == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightOrderExceedsLimit == null)
                {
                    flyweightOrderExceedsLimit  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_OrderExceedsLimit;}
                     public String  getValueDescription()                  {return text_OrderExceedsLimit;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_OrderExceedsLimit).append("|").append(text_OrderExceedsLimit).append("]").toString();}
                     public boolean isOrderExceedsLimit()                  {return true;}
                     public int     intValue()                             {return OrderExceedsLimit;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_OrderExceedsLimit);}
                    };
                }
            }
        }

        return flyweightOrderExceedsLimit;
    }

    private static FixCboeOLAOrdRejReasonField flyweightTooLateToEnter;
    public static final FixCboeOLAOrdRejReasonField flyweightTooLateToEnter()
    {
        if (flyweightTooLateToEnter == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightTooLateToEnter == null)
                {
                    flyweightTooLateToEnter  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_TooLateToEnter;}
                     public String  getValueDescription()                  {return text_TooLateToEnter;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_TooLateToEnter).append("|").append(text_TooLateToEnter).append("]").toString();}
                     public boolean isTooLateToEnter()                     {return true;}
                     public int     intValue()                             {return TooLateToEnter;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_TooLateToEnter);}
                    };
                }
            }
        }

        return flyweightTooLateToEnter;
    }

    private static FixCboeOLAOrdRejReasonField flyweightUnknownOrder;
    public static final FixCboeOLAOrdRejReasonField flyweightUnknownOrder()
    {
        if (flyweightUnknownOrder == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightUnknownOrder == null)
                {
                    flyweightUnknownOrder  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_UnknownOrder;}
                     public String  getValueDescription()                  {return text_UnknownOrder;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_UnknownOrder).append("|").append(text_UnknownOrder).append("]").toString();}
                     public boolean isUnknownOrder()                       {return true;}
                     public int     intValue()                             {return UnknownOrder;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_UnknownOrder);}
                    };
                }
            }
        }

        return flyweightUnknownOrder;
    }

    private static FixCboeOLAOrdRejReasonField flyweightDuplicateOrder;
    public static final FixCboeOLAOrdRejReasonField flyweightDuplicateOrder()
    {
        if (flyweightDuplicateOrder == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightDuplicateOrder == null)
                {
                    flyweightDuplicateOrder  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_DuplicateOrder;}
                     public String  getValueDescription()                  {return text_DuplicateOrder;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_DuplicateOrder).append("|").append(text_DuplicateOrder).append("]").toString();}
                     public boolean isDuplicateOrder()                     {return true;}
                     public int     intValue()                             {return DuplicateOrder;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_DuplicateOrder);}
                    };
                }
            }
        }

        return flyweightDuplicateOrder;
    }

    private static FixCboeOLAOrdRejReasonField flyweightStaleOrder;
    public static final FixCboeOLAOrdRejReasonField flyweightStaleOrder()
    {
        if (flyweightStaleOrder == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightStaleOrder == null)
                {
                    flyweightStaleOrder  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_StaleOrder;}
                     public String  getValueDescription()                  {return text_StaleOrder;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_StaleOrder).append("|").append(text_StaleOrder).append("]").toString();}
                     public boolean isStaleOrder()                         {return true;}
                     public int     intValue()                             {return StaleOrder;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_StaleOrder);}
                    };
                }
            }
        }

        return flyweightStaleOrder;
    }

    private static FixCboeOLAOrdRejReasonField flyweightInvalidInstrumentStateRotation;
    public static final FixCboeOLAOrdRejReasonField flyweightInvalidInstrumentStateRotation()
    {
        if (flyweightInvalidInstrumentStateRotation == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightInvalidInstrumentStateRotation == null)
                {
                    flyweightInvalidInstrumentStateRotation  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_InvalidInstrumentStateRotation;}
                     public String  getValueDescription()                  {return text_InvalidInstrumentStateRotation;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_InvalidInstrumentStateRotation).append("|").append(text_InvalidInstrumentStateRotation).append("]").toString();}
                     public boolean isInvalidInstrumentStateRotation()     {return true;}
                     public int     intValue()                             {return InvalidInstrumentStateRotation;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_InvalidInstrumentStateRotation);}
                    };
                }
            }
        }

        return flyweightInvalidInstrumentStateRotation;
    }

    private static FixCboeOLAOrdRejReasonField flyweightInvalidInstrumentStateNonFirm;
    public static final FixCboeOLAOrdRejReasonField flyweightInvalidInstrumentStateNonFirm()
    {
        if (flyweightInvalidInstrumentStateNonFirm == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightInvalidInstrumentStateNonFirm == null)
                {
                    flyweightInvalidInstrumentStateNonFirm  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_InvalidInstrumentStateNonFirm;}
                     public String  getValueDescription()                  {return text_InvalidInstrumentStateNonFirm;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_InvalidInstrumentStateNonFirm).append("|").append(text_InvalidInstrumentStateNonFirm).append("]").toString();}
                     public boolean isInvalidInstrumentStateNonFirm()      {return true;}
                     public int     intValue()                             {return InvalidInstrumentStateNonFirm;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_InvalidInstrumentStateNonFirm);}
                    };
                }
            }
        }

        return flyweightInvalidInstrumentStateNonFirm;
    }

    private static FixCboeOLAOrdRejReasonField flyweightInvalidInstrumentStateHalted;
    public static final FixCboeOLAOrdRejReasonField flyweightInvalidInstrumentStateHalted()
    {
        if (flyweightInvalidInstrumentStateHalted == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightInvalidInstrumentStateHalted == null)
                {
                    flyweightInvalidInstrumentStateHalted  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_InvalidInstrumentStateHalted;}
                     public String  getValueDescription()                  {return text_InvalidInstrumentStateHalted;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_InvalidInstrumentStateHalted).append("|").append(text_InvalidInstrumentStateHalted).append("]").toString();}
                     public boolean isInvalidInstrumentStateHalted()       {return true;}
                     public int     intValue()                             {return InvalidInstrumentStateHalted;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_InvalidInstrumentStateHalted);}
                    };
                }
            }
        }

        return flyweightInvalidInstrumentStateHalted;
    }

    private static FixCboeOLAOrdRejReasonField flyweightNotAtNbbo;
    public static final FixCboeOLAOrdRejReasonField flyweightNotAtNbbo()
    {
        if (flyweightNotAtNbbo == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightNotAtNbbo == null)
                {
                    flyweightNotAtNbbo  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_NotAtNbbo;}
                     public String  getValueDescription()                  {return text_NotAtNbbo;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_NotAtNbbo).append("|").append(text_NotAtNbbo).append("]").toString();}
                     public boolean isNotAtNbbo()                          {return true;}
                     public int     intValue()                             {return NotAtNbbo;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_NotAtNbbo);}
                    };
                }
            }
        }

        return flyweightNotAtNbbo;
    }

    private static FixCboeOLAOrdRejReasonField flyweightPriceOutOfBounds;
    public static final FixCboeOLAOrdRejReasonField flyweightPriceOutOfBounds()
    {
        if (flyweightPriceOutOfBounds == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightPriceOutOfBounds == null)
                {
                    flyweightPriceOutOfBounds  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_PriceOutOfBounds;}
                     public String  getValueDescription()                  {return text_PriceOutOfBounds;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_PriceOutOfBounds).append("|").append(text_PriceOutOfBounds).append("]").toString();}
                     public boolean isPriceOutOfBounds()                   {return true;}
                     public int     intValue()                             {return PriceOutOfBounds;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_PriceOutOfBounds);}
                    };
                }
            }
        }

        return flyweightPriceOutOfBounds;
    }

    private static FixCboeOLAOrdRejReasonField flyweightUnknownClearingFirm;
    public static final FixCboeOLAOrdRejReasonField flyweightUnknownClearingFirm()
    {
        if (flyweightUnknownClearingFirm == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightUnknownClearingFirm == null)
                {
                    flyweightUnknownClearingFirm  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_UnknownClearingFirm;}
                     public String  getValueDescription()                  {return text_UnknownClearingFirm;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_UnknownClearingFirm).append("|").append(text_UnknownClearingFirm).append("]").toString();}
                     public boolean isUnknownClearingFirm()                {return true;}
                     public int     intValue()                             {return UnknownClearingFirm;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_UnknownClearingFirm);}
                    };
                }
            }
        }

        return flyweightUnknownClearingFirm;
    }

    private static FixCboeOLAOrdRejReasonField flyweightSubAccountIdMissing;
    public static final FixCboeOLAOrdRejReasonField flyweightSubAccountIdMissing()
    {
        if (flyweightSubAccountIdMissing == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightSubAccountIdMissing == null)
                {
                    flyweightSubAccountIdMissing  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_SubAccountIdMissing;}
                     public String  getValueDescription()                  {return text_SubAccountIdMissing;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_SubAccountIdMissing).append("|").append(text_SubAccountIdMissing).append("]").toString();}
                     public boolean isSubAccountIdMissing()                {return true;}
                     public int     intValue()                             {return SubAccountIdMissing;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_SubAccountIdMissing);}
                    };
                }
            }
        }

        return flyweightSubAccountIdMissing;
    }

    private static FixCboeOLAOrdRejReasonField flyweightInvalidAutoEx;
    public static final FixCboeOLAOrdRejReasonField flyweightInvalidAutoEx()
    {
        if (flyweightInvalidAutoEx == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightInvalidAutoEx == null)
                {
                    flyweightInvalidAutoEx  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_InvalidAutoEx;}
                     public String  getValueDescription()                  {return text_InvalidAutoEx;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_InvalidAutoEx).append("|").append(text_InvalidAutoEx).append("]").toString();}
                     public boolean isInvalidAutoEx()                      {return true;}
                     public int     intValue()                             {return InvalidAutoEx;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_InvalidAutoEx);}
                    };
                }
            }
        }

        return flyweightInvalidAutoEx;
    }

    private static FixCboeOLAOrdRejReasonField flyweightAccountMissing;
    public static final FixCboeOLAOrdRejReasonField flyweightAccountMissing()
    {
        if (flyweightAccountMissing == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightAccountMissing == null)
                {
                    flyweightAccountMissing  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_AccountMissing;}
                     public String  getValueDescription()                  {return text_AccountMissing;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_AccountMissing).append("|").append(text_AccountMissing).append("]").toString();}
                     public boolean isAccountMissing()                     {return true;}
                     public int     intValue()                             {return AccountMissing;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_AccountMissing);}
                    };
                }
            }
        }

        return flyweightAccountMissing;
    }

    private static FixCboeOLAOrdRejReasonField flyweightInvalidTimeInForce;
    public static final FixCboeOLAOrdRejReasonField flyweightInvalidTimeInForce()
    {
        if (flyweightInvalidTimeInForce == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightInvalidTimeInForce == null)
                {
                    flyweightInvalidTimeInForce  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_InvalidTimeInForce;}
                     public String  getValueDescription()                  {return text_InvalidTimeInForce;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_InvalidTimeInForce).append("|").append(text_InvalidTimeInForce).append("]").toString();}
                     public boolean isInvalidTimeInForce()                 {return true;}
                     public int     intValue()                             {return InvalidTimeInForce;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_InvalidTimeInForce);}
                    };
                }
            }
        }

        return flyweightInvalidTimeInForce;
    }

    private static FixCboeOLAOrdRejReasonField flyweightInvalidOpenClose;
    public static final FixCboeOLAOrdRejReasonField flyweightInvalidOpenClose()
    {
        if (flyweightInvalidOpenClose == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightInvalidOpenClose == null)
                {
                    flyweightInvalidOpenClose  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_InvalidOpenClose;}
                     public String  getValueDescription()                  {return text_InvalidOpenClose;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_InvalidOpenClose).append("|").append(text_InvalidOpenClose).append("]").toString();}
                     public boolean isInvalidOpenClose()                   {return true;}
                     public int     intValue()                             {return InvalidOpenClose;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_InvalidOpenClose);}
                    };
                }
            }
        }

        return flyweightInvalidOpenClose;
    }

    private static FixCboeOLAOrdRejReasonField flyweightMissingExecBroker;
    public static final FixCboeOLAOrdRejReasonField flyweightMissingExecBroker()
    {
        if (flyweightMissingExecBroker == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightMissingExecBroker == null)
                {
                    flyweightMissingExecBroker  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_MissingExecBroker;}
                     public String  getValueDescription()                  {return text_MissingExecBroker;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MissingExecBroker).append("|").append(text_MissingExecBroker).append("]").toString();}
                     public boolean isMissingExecBroker()                  {return true;}
                     public int     intValue()                             {return MissingExecBroker;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MissingExecBroker);}
                    };
                }
            }
        }

        return flyweightMissingExecBroker;
    }

    private static FixCboeOLAOrdRejReasonField flyweightMissingClearingAccount;
    public static final FixCboeOLAOrdRejReasonField flyweightMissingClearingAccount()
    {
        if (flyweightMissingClearingAccount == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightMissingClearingAccount == null)
                {
                    flyweightMissingClearingAccount  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_MissingClearingAccount;}
                     public String  getValueDescription()                  {return text_MissingClearingAccount;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MissingClearingAccount).append("|").append(text_MissingClearingAccount).append("]").toString();}
                     public boolean isMissingClearingAccount()             {return true;}
                     public int     intValue()                             {return MissingClearingAccount;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MissingClearingAccount);}
                    };
                }
            }
        }

        return flyweightMissingClearingAccount;
    }

    private static FixCboeOLAOrdRejReasonField flyweightMissingExecInfo;
    public static final FixCboeOLAOrdRejReasonField flyweightMissingExecInfo()
    {
        if (flyweightMissingExecInfo == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightMissingExecInfo == null)
                {
                    flyweightMissingExecInfo  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_MissingExecInfo;}
                     public String  getValueDescription()                  {return text_MissingExecInfo;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_MissingExecInfo).append("|").append(text_MissingExecInfo).append("]").toString();}
                     public boolean isMissingExecInfo()                    {return true;}
                     public int     intValue()                             {return MissingExecInfo;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_MissingExecInfo);}
                    };
                }
            }
        }

        return flyweightMissingExecInfo;
    }

    private static FixCboeOLAOrdRejReasonField flyweightOrderReceivedTooSoon;
    public static final FixCboeOLAOrdRejReasonField flyweightOrderReceivedTooSoon()
    {
        if (flyweightOrderReceivedTooSoon == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightOrderReceivedTooSoon == null)
                {
                    flyweightOrderReceivedTooSoon  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_OrderReceivedTooSoon;}
                     public String  getValueDescription()                  {return text_OrderReceivedTooSoon;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_OrderReceivedTooSoon).append("|").append(text_OrderReceivedTooSoon).append("]").toString();}
                     public boolean isOrderReceivedTooSoon()               {return true;}
                     public int     intValue()                             {return OrderReceivedTooSoon;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_OrderReceivedTooSoon);}
                    };
                }
            }
        }

        return flyweightOrderReceivedTooSoon;
    }

    private static FixCboeOLAOrdRejReasonField flyweightInvalidOrderCapacity;
    public static final FixCboeOLAOrdRejReasonField flyweightInvalidOrderCapacity()
    {
        if (flyweightInvalidOrderCapacity == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightInvalidOrderCapacity == null)
                {
                    flyweightInvalidOrderCapacity  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_InvalidOrderCapacity;}
                     public String  getValueDescription()                  {return text_InvalidOrderCapacity;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_InvalidOrderCapacity).append("|").append(text_InvalidOrderCapacity).append("]").toString();}
                     public boolean isInvalidOrderCapacity()               {return true;}
                     public int     intValue()                             {return InvalidOrderCapacity;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_InvalidOrderCapacity);}
                    };
                }
            }
        }

        return flyweightInvalidOrderCapacity;
    }

    private static FixCboeOLAOrdRejReasonField flyweightLatePrintToOpraTape;
    public static final FixCboeOLAOrdRejReasonField flyweightLatePrintToOpraTape()
    {
        if (flyweightLatePrintToOpraTape == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightLatePrintToOpraTape == null)
                {
                    flyweightLatePrintToOpraTape  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_LatePrintToOpraTape;}
                     public String  getValueDescription()                  {return text_LatePrintToOpraTape;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_LatePrintToOpraTape).append("|").append(text_LatePrintToOpraTape).append("]").toString();}
                     public boolean isLatePrintToOpraTape()                {return true;}
                     public int     intValue()                             {return LatePrintToOpraTape;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_LatePrintToOpraTape);}
                    };
                }
            }
        }

        return flyweightLatePrintToOpraTape;
    }

    private static FixCboeOLAOrdRejReasonField flyweightCommunicationDelaysToOpra;
    public static final FixCboeOLAOrdRejReasonField flyweightCommunicationDelaysToOpra()
    {
        if (flyweightCommunicationDelaysToOpra == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightCommunicationDelaysToOpra == null)
                {
                    flyweightCommunicationDelaysToOpra  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_CommunicationDelaysToOpra;}
                     public String  getValueDescription()                  {return text_CommunicationDelaysToOpra;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CommunicationDelaysToOpra).append("|").append(text_CommunicationDelaysToOpra).append("]").toString();}
                     public boolean isCommunicationDelaysToOpra()          {return true;}
                     public int     intValue()                             {return CommunicationDelaysToOpra;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CommunicationDelaysToOpra);}
                    };
                }
            }
        }

        return flyweightCommunicationDelaysToOpra;
    }

    private static FixCboeOLAOrdRejReasonField flyweightManualTrade;
    public static final FixCboeOLAOrdRejReasonField flyweightManualTrade()
    {
        if (flyweightManualTrade == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightManualTrade == null)
                {
                    flyweightManualTrade  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_ManualTrade;}
                     public String  getValueDescription()                  {return text_ManualTrade;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ManualTrade).append("|").append(text_ManualTrade).append("]").toString();}
                     public boolean isManualTrade()                        {return true;}
                     public int     intValue()                             {return ManualTrade;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ManualTrade);}
                    };
                }
            }
        }

        return flyweightManualTrade;
    }

    private static FixCboeOLAOrdRejReasonField flyweightProcessingProblemsAtMarketCenter;
    public static final FixCboeOLAOrdRejReasonField flyweightProcessingProblemsAtMarketCenter()
    {
        if (flyweightProcessingProblemsAtMarketCenter == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightProcessingProblemsAtMarketCenter == null)
                {
                    flyweightProcessingProblemsAtMarketCenter  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_ProcessingProblemsAtMarketCenter;}
                     public String  getValueDescription()                  {return text_ProcessingProblemsAtMarketCenter;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ProcessingProblemsAtMarketCenter).append("|").append(text_ProcessingProblemsAtMarketCenter).append("]").toString();}
                     public boolean isProcessingProblemsAtMarketCenter()   {return true;}
                     public int     intValue()                             {return ProcessingProblemsAtMarketCenter;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ProcessingProblemsAtMarketCenter);}
                    };
                }
            }
        }

        return flyweightProcessingProblemsAtMarketCenter;
    }

    private static FixCboeOLAOrdRejReasonField flyweightComplexOrder;
    public static final FixCboeOLAOrdRejReasonField flyweightComplexOrder()
    {
        if (flyweightComplexOrder == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightComplexOrder == null)
                {
                    flyweightComplexOrder  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_ComplexOrder;}
                     public String  getValueDescription()                  {return text_ComplexOrder;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_ComplexOrder).append("|").append(text_ComplexOrder).append("]").toString();}
                     public boolean isComplexOrder()                       {return true;}
                     public int     intValue()                             {return ComplexOrder;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_ComplexOrder);}
                    };
                }
            }
        }

        return flyweightComplexOrder;
    }

    private static FixCboeOLAOrdRejReasonField flyweightTradeRejected;
    public static final FixCboeOLAOrdRejReasonField flyweightTradeRejected()
    {
        if (flyweightTradeRejected == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightTradeRejected == null)
                {
                    flyweightTradeRejected  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_TradeRejected;}
                     public String  getValueDescription()                  {return text_TradeRejected;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_TradeRejected).append("|").append(text_TradeRejected).append("]").toString();}
                     public boolean isTradeRejected()                      {return true;}
                     public int     intValue()                             {return TradeRejected;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_TradeRejected);}
                    };
                }
            }
        }

        return flyweightTradeRejected;
    }

    private static FixCboeOLAOrdRejReasonField flyweightTradeBustedCorrected;
    public static final FixCboeOLAOrdRejReasonField flyweightTradeBustedCorrected()
    {
        if (flyweightTradeBustedCorrected == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightTradeBustedCorrected == null)
                {
                    flyweightTradeBustedCorrected  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_TradeBustedCorrected;}
                     public String  getValueDescription()                  {return text_TradeBustedCorrected;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_TradeBustedCorrected).append("|").append(text_TradeBustedCorrected).append("]").toString();}
                     public boolean isTradeBustedCorrected()               {return true;}
                     public int     intValue()                             {return TradeBustedCorrected;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_TradeBustedCorrected);}
                    };
                }
            }
        }

        return flyweightTradeBustedCorrected;
    }

    private static FixCboeOLAOrdRejReasonField flyweightOriginalOrderRejected;
    public static final FixCboeOLAOrdRejReasonField flyweightOriginalOrderRejected()
    {
        if (flyweightOriginalOrderRejected == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightOriginalOrderRejected == null)
                {
                    flyweightOriginalOrderRejected  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_OriginalOrderRejected;}
                     public String  getValueDescription()                  {return text_OriginalOrderRejected;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_OriginalOrderRejected).append("|").append(text_OriginalOrderRejected).append("]").toString();}
                     public boolean isOriginalOrderRejected()              {return true;}
                     public int     intValue()                             {return OriginalOrderRejected;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_OriginalOrderRejected);}
                    };
                }
            }
        }

        return flyweightOriginalOrderRejected;
    }

    private static FixCboeOLAOrdRejReasonField flyweightCancelDueToNonBlockTrade;
    public static final FixCboeOLAOrdRejReasonField flyweightCancelDueToNonBlockTrade()
    {
        if (flyweightCancelDueToNonBlockTrade == null)
        {
            synchronized(FixCboeOLAOrdRejReasonField.class)
            {
                if (flyweightCancelDueToNonBlockTrade == null)
                {
                    flyweightCancelDueToNonBlockTrade  = new FixCboeOLAOrdRejReasonField()
                    {public boolean hasValue()                             {return true;}
                     public String  getValue()                             {return string_CancelDueToNonBlockTrade;}
                     public String  getValueDescription()                  {return text_CancelDueToNonBlockTrade;}
                     public String  toString()                             {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_CancelDueToNonBlockTrade).append("|").append(text_CancelDueToNonBlockTrade).append("]").toString();}
                     public boolean isCancelDueToNonBlockTrade()           {return true;}
                     public int     intValue()                             {return CancelDueToNonBlockTrade;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_CancelDueToNonBlockTrade);}
                    };
                }
            }
        }

        return flyweightCancelDueToNonBlockTrade;
    }


    public boolean isBrokerOrExchangeOption()             {return false;}
    public boolean isUnknownSymbol()                      {return false;}
    public boolean isExchangeOrTradingSessionClosed()     {return false;}
    public boolean isOrderExceedsLimit()                  {return false;}
    public boolean isTooLateToEnter()                     {return false;}
    public boolean isUnknownOrder()                       {return false;}
    public boolean isDuplicateOrder()                     {return false;}
    public boolean isStaleOrder()                         {return false;}
    public boolean isInvalidInstrumentStateRotation()     {return false;}
    public boolean isInvalidInstrumentStateNonFirm()      {return false;}
    public boolean isInvalidInstrumentStateHalted()       {return false;}
    public boolean isNotAtNbbo()                          {return false;}
    public boolean isPriceOutOfBounds()                   {return false;}
    public boolean isUnknownClearingFirm()                {return false;}
    public boolean isSubAccountIdMissing()                {return false;}
    public boolean isInvalidAutoEx()                      {return false;}
    public boolean isAccountMissing()                     {return false;}
    public boolean isInvalidTimeInForce()                 {return false;}
    public boolean isInvalidOpenClose()                   {return false;}
    public boolean isMissingExecBroker()                  {return false;}
    public boolean isMissingClearingAccount()             {return false;}
    public boolean isMissingExecInfo()                    {return false;}
    public boolean isOrderReceivedTooSoon()               {return false;}
    public boolean isInvalidOrderCapacity()               {return false;}
    public boolean isLatePrintToOpraTape()                {return false;}
    public boolean isCommunicationDelaysToOpra()          {return false;}
    public boolean isManualTrade()                        {return false;}
    public boolean isProcessingProblemsAtMarketCenter()   {return false;}
    public boolean isComplexOrder()                       {return false;}
    public boolean isTradeRejected()                      {return false;}
    public boolean isTradeBustedCorrected()               {return false;}
    public boolean isOriginalOrderRejected()              {return false;}
    public boolean isCancelDueToNonBlockTrade()           {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixCboeOLAOrdRejReasonField create(char[] array, int offset, int length)
    {
        int param = IntegerHelper.parseInt(array, offset, length);
        if (param == IntegerHelper.INVALID_VALUE)
        {
            return null;
        }
        return create(param);
    }

    public static FixCboeOLAOrdRejReasonField create(final int param)
    {
        switch (param)
        {                                                                                           
            case BrokerOrExchangeOption:           return flyweightBrokerOrExchangeOption();
            case UnknownSymbol:                    return flyweightUnknownSymbol();
            case ExchangeOrTradingSessionClosed:   return flyweightExchangeOrTradingSessionClosed();
            case OrderExceedsLimit:                return flyweightOrderExceedsLimit();
            case TooLateToEnter:                   return flyweightTooLateToEnter();
            case UnknownOrder:                     return flyweightUnknownOrder();
            case DuplicateOrder:                   return flyweightDuplicateOrder();
            case StaleOrder:                       return flyweightStaleOrder();
            case InvalidInstrumentStateRotation:   return flyweightInvalidInstrumentStateRotation();
            case InvalidInstrumentStateNonFirm:    return flyweightInvalidInstrumentStateNonFirm();
            case InvalidInstrumentStateHalted:     return flyweightInvalidInstrumentStateHalted();
            case NotAtNbbo:                        return flyweightNotAtNbbo();
            case PriceOutOfBounds:                 return flyweightPriceOutOfBounds();
            case UnknownClearingFirm:              return flyweightUnknownClearingFirm();
            case SubAccountIdMissing:              return flyweightSubAccountIdMissing();
            case InvalidAutoEx:                    return flyweightInvalidAutoEx();
            case AccountMissing:                   return flyweightAccountMissing();
            case InvalidTimeInForce:               return flyweightInvalidTimeInForce();
            case InvalidOpenClose:                 return flyweightInvalidOpenClose();
            case MissingExecBroker:                return flyweightMissingExecBroker();
            case MissingClearingAccount:           return flyweightMissingClearingAccount();
            case MissingExecInfo:                  return flyweightMissingExecInfo();
            case OrderReceivedTooSoon:             return flyweightOrderReceivedTooSoon();
            case InvalidOrderCapacity:             return flyweightInvalidOrderCapacity();
            case LatePrintToOpraTape:              return flyweightLatePrintToOpraTape();
            case CommunicationDelaysToOpra:        return flyweightCommunicationDelaysToOpra();
            case ManualTrade:                      return flyweightManualTrade();
            case ProcessingProblemsAtMarketCenter: return flyweightProcessingProblemsAtMarketCenter();
            case ComplexOrder:                     return flyweightComplexOrder();
            case TradeRejected:                    return flyweightTradeRejected();
            case TradeBustedCorrected:             return flyweightTradeBustedCorrected();
            case OriginalOrderRejected:            return flyweightOriginalOrderRejected();
            case CancelDueToNonBlockTrade:         return flyweightCancelDueToNonBlockTrade();
        }
                                                                                                    
        return null;
    }                                                                                               
}
