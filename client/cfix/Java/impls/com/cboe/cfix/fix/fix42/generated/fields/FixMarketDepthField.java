package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixMarketDepthField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [264] (known as MarketDepth).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixMarketDepthField implements FixFieldIF, HasIntValueIF
{   
    public static final int    TagID         =  264;
    public static final String TagIDAsString = "264";
    public static final char[] TagIDAsChars  = {'2','6','4'};
    public static final String TagName       = "MarketDepth";
    public static final String TagFixType    = "INT";
    public static final char[]  taggedchars_value0 = {'2','6','4', EQUALSchar, ZEROchar, SOHchar};
    public static final char[]  taggedchars_value1 = {'2','6','4', EQUALSchar, ONEchar,  SOHchar};

    public static final int     FullBook               = 0;
    public static final String  string_FullBook        = "0";
    public static final String  tagged_FullBook        = TagIDAsString + EQUALS + string_FullBook + SOH;
    public static final char[]  taggedchars_FullBook   = {'2','6','4', EQUALSchar, '0', SOHchar};
    public static final String  text_FullBook          = "FullBook";
    public static final int     TopOfBook              = 1;
    public static final String  string_TopOfBook       = "1";
    public static final String  tagged_TopOfBook       = TagIDAsString + EQUALS + string_TopOfBook + SOH;
    public static final char[]  taggedchars_TopOfBook  = {'2','6','4', EQUALSchar, '1', SOHchar};
    public static final String  text_TopOfBook         = "TopOfBook";

    private static FixMarketDepthField flyweightFullBook;
    public static final FixMarketDepthField flyweightFullBook()
    {
        if (flyweightFullBook == null)
        {
            synchronized(FixMarketDepthField.class)
            {
                if (flyweightFullBook == null)
                {
                    flyweightFullBook  = new FixMarketDepthField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_FullBook;}
                     public String  getValueDescription()             {return text_FullBook;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_FullBook).append("|").append(text_FullBook).append("]").toString();}
                     public boolean isFullBook()                      {return true;}
                     public int     intValue()                        {return FullBook;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_FullBook);}
                    };
                }
            }
        }

        return flyweightFullBook;
    }

    private static FixMarketDepthField flyweightTopOfBook;
    public static final FixMarketDepthField flyweightTopOfBook()
    {
        if (flyweightTopOfBook == null)
        {
            synchronized(FixMarketDepthField.class)
            {
                if (flyweightTopOfBook == null)
                {
                    flyweightTopOfBook  = new FixMarketDepthField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_TopOfBook;}
                     public String  getValueDescription()             {return text_TopOfBook;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_TopOfBook).append("|").append(text_TopOfBook).append("]").toString();}
                     public boolean isTopOfBook()                     {return true;}
                     public int     intValue()                        {return TopOfBook;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_TopOfBook);}
                    };
                }
            }
        }

        return flyweightTopOfBook;
    }


    public boolean isFullBook()    {return false;}
    public boolean isTopOfBook()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixMarketDepthField create(char[] array, int offset, int length)
    {
        int param = IntegerHelper.parseInt(array, offset, length);
        if (param == IntegerHelper.INVALID_VALUE)
        {
            return null;
        }
        return create(param);
    }

    public static FixMarketDepthField create(final int param)
    {
        switch (param)
        {                                                                                           
            case FullBook:  return flyweightFullBook();
            case TopOfBook: return flyweightTopOfBook();
        }
                                                                                                    
        return null;
    }                                                                                               
}
