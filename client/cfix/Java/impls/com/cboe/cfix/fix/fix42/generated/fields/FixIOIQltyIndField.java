package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixIOIQltyIndField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [25] (known as IOIQltyInd).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixIOIQltyIndField implements FixFieldIF, HasCharValueIF
{   
    public static final int    TagID         =  25;
    public static final String TagIDAsString = "25";
    public static final char[] TagIDAsChars  = {'2','5'};
    public static final String TagName       = "IOIQltyInd";
    public static final String TagFixType    = "CHAR";

    public static final char    Low                 = 'L';
    public static final String  string_Low          = "L";
    public static final String  tagged_Low          = TagIDAsString + EQUALS + string_Low + SOH;
    public static final char[]  taggedchars_Low     = {'2','5', EQUALSchar, 'L', SOHchar};
    public static final String  text_Low            = "Low";
    public static final char    Medium              = 'M';
    public static final String  string_Medium       = "M";
    public static final String  tagged_Medium       = TagIDAsString + EQUALS + string_Medium + SOH;
    public static final char[]  taggedchars_Medium  = {'2','5', EQUALSchar, 'M', SOHchar};
    public static final String  text_Medium         = "Medium";
    public static final char    High                = 'H';
    public static final String  string_High         = "H";
    public static final String  tagged_High         = TagIDAsString + EQUALS + string_High + SOH;
    public static final char[]  taggedchars_High    = {'2','5', EQUALSchar, 'H', SOHchar};
    public static final String  text_High           = "High";

    private static FixIOIQltyIndField flyweightLow;
    public static final FixIOIQltyIndField flyweightLow()
    {
        if (flyweightLow == null)
        {
            synchronized(FixIOIQltyIndField.class)
            {
                if (flyweightLow == null)
                {
                    flyweightLow  = new FixIOIQltyIndField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Low;}
                     public String  getValueDescription()             {return text_Low;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Low).append("|").append(text_Low).append("]").toString();}
                     public boolean isLow()                           {return true;}
                     public char    charValue()                       {return Low;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Low);}
                    };
                }
            }
        }

        return flyweightLow;
    }

    private static FixIOIQltyIndField flyweightMedium;
    public static final FixIOIQltyIndField flyweightMedium()
    {
        if (flyweightMedium == null)
        {
            synchronized(FixIOIQltyIndField.class)
            {
                if (flyweightMedium == null)
                {
                    flyweightMedium  = new FixIOIQltyIndField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Medium;}
                     public String  getValueDescription()             {return text_Medium;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Medium).append("|").append(text_Medium).append("]").toString();}
                     public boolean isMedium()                        {return true;}
                     public char    charValue()                       {return Medium;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Medium);}
                    };
                }
            }
        }

        return flyweightMedium;
    }

    private static FixIOIQltyIndField flyweightHigh;
    public static final FixIOIQltyIndField flyweightHigh()
    {
        if (flyweightHigh == null)
        {
            synchronized(FixIOIQltyIndField.class)
            {
                if (flyweightHigh == null)
                {
                    flyweightHigh  = new FixIOIQltyIndField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_High;}
                     public String  getValueDescription()             {return text_High;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_High).append("|").append(text_High).append("]").toString();}
                     public boolean isHigh()                          {return true;}
                     public char    charValue()                       {return High;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_High);}
                    };
                }
            }
        }

        return flyweightHigh;
    }


    public boolean isLow()      {return false;}
    public boolean isMedium()   {return false;}
    public boolean isHigh()     {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixIOIQltyIndField create(char[] array, int offset, int length)
    {
        if (length == 1)
        {
            return create(array[offset]);
        }

        return null;
    }

    public static FixIOIQltyIndField create(final char param)
    {
        switch (param)
        {                                                                                           
            case Low:    return flyweightLow();
            case Medium: return flyweightMedium();
            case High:   return flyweightHigh();
        }
                                                                                                    
        return null;
    }                                                                                               
}
