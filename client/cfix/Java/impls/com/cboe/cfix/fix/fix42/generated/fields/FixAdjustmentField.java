package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixAdjustmentField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [334] (known as Adjustment).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixAdjustmentField implements FixFieldIF, HasIntValueIF
{   
    public static final int    TagID         =  334;
    public static final String TagIDAsString = "334";
    public static final char[] TagIDAsChars  = {'3','3','4'};
    public static final String TagName       = "Adjustment";
    public static final String TagFixType    = "INT";
    public static final char[]  taggedchars_value0 = {'3','3','4', EQUALSchar, ZEROchar, SOHchar};
    public static final char[]  taggedchars_value1 = {'3','3','4', EQUALSchar, ONEchar,  SOHchar};

    public static final int     Cancel                  = 1;
    public static final String  string_Cancel           = "1";
    public static final String  tagged_Cancel           = TagIDAsString + EQUALS + string_Cancel + SOH;
    public static final char[]  taggedchars_Cancel      = {'3','3','4', EQUALSchar, '1', SOHchar};
    public static final String  text_Cancel             = "Cancel";
    public static final int     Error                   = 2;
    public static final String  string_Error            = "2";
    public static final String  tagged_Error            = TagIDAsString + EQUALS + string_Error + SOH;
    public static final char[]  taggedchars_Error       = {'3','3','4', EQUALSchar, '2', SOHchar};
    public static final String  text_Error              = "Error";
    public static final int     Correction              = 3;
    public static final String  string_Correction       = "3";
    public static final String  tagged_Correction       = TagIDAsString + EQUALS + string_Correction + SOH;
    public static final char[]  taggedchars_Correction  = {'3','3','4', EQUALSchar, '3', SOHchar};
    public static final String  text_Correction         = "Correction";

    private static FixAdjustmentField flyweightCancel;
    public static final FixAdjustmentField flyweightCancel()
    {
        if (flyweightCancel == null)
        {
            synchronized(FixAdjustmentField.class)
            {
                if (flyweightCancel == null)
                {
                    flyweightCancel  = new FixAdjustmentField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Cancel;}
                     public String  getValueDescription()             {return text_Cancel;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Cancel).append("|").append(text_Cancel).append("]").toString();}
                     public boolean isCancel()                        {return true;}
                     public int     intValue()                        {return Cancel;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Cancel);}
                    };
                }
            }
        }

        return flyweightCancel;
    }

    private static FixAdjustmentField flyweightError;
    public static final FixAdjustmentField flyweightError()
    {
        if (flyweightError == null)
        {
            synchronized(FixAdjustmentField.class)
            {
                if (flyweightError == null)
                {
                    flyweightError  = new FixAdjustmentField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Error;}
                     public String  getValueDescription()             {return text_Error;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Error).append("|").append(text_Error).append("]").toString();}
                     public boolean isError()                         {return true;}
                     public int     intValue()                        {return Error;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Error);}
                    };
                }
            }
        }

        return flyweightError;
    }

    private static FixAdjustmentField flyweightCorrection;
    public static final FixAdjustmentField flyweightCorrection()
    {
        if (flyweightCorrection == null)
        {
            synchronized(FixAdjustmentField.class)
            {
                if (flyweightCorrection == null)
                {
                    flyweightCorrection  = new FixAdjustmentField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Correction;}
                     public String  getValueDescription()             {return text_Correction;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Correction).append("|").append(text_Correction).append("]").toString();}
                     public boolean isCorrection()                    {return true;}
                     public int     intValue()                        {return Correction;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Correction);}
                    };
                }
            }
        }

        return flyweightCorrection;
    }


    public boolean isCancel()       {return false;}
    public boolean isError()        {return false;}
    public boolean isCorrection()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixAdjustmentField create(char[] array, int offset, int length)
    {
        int param = IntegerHelper.parseInt(array, offset, length);
        if (param == IntegerHelper.INVALID_VALUE)
        {
            return null;
        }
        return create(param);
    }

    public static FixAdjustmentField create(final int param)
    {
        switch (param)
        {                                                                                           
            case Cancel:     return flyweightCancel();
            case Error:      return flyweightError();
            case Correction: return flyweightCorrection();
        }
                                                                                                    
        return null;
    }                                                                                               
}
