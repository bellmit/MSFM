package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixDueToRelatedField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [329] (known as DueToRelated).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;

public abstract class FixDueToRelatedField implements FixFieldIF, HasBooleanValueIF
{   
    public static final int    TagID         =  329;
    public static final String TagIDAsString = "329";
    public static final char[] TagIDAsChars  = {'3','2','9'};
    public static final String TagName       = "DueToRelated";
    public static final String TagFixType    = "BOOLEAN";

    public static final boolean HaltWasDueToRelatedSecurityBeingHalted                    = true;
    public static final String  string_HaltWasDueToRelatedSecurityBeingHalted             = FIX_YES;
    public static final String  tagged_HaltWasDueToRelatedSecurityBeingHalted             = TagIDAsString + EQUALS + string_HaltWasDueToRelatedSecurityBeingHalted + SOH;
    public static final char    char_HaltWasDueToRelatedSecurityBeingHalted               = 'Y';
    public static final char[]  taggedchars_HaltWasDueToRelatedSecurityBeingHalted        = {'3','2','9', EQUALSchar, 'Y', SOHchar};
    public static final String  text_HaltWasDueToRelatedSecurityBeingHalted               = "HaltWasDueToRelatedSecurityBeingHalted";
    public static final boolean HaltWasNotRelatedToAHaltOfTheRelatedSecurity              = false;
    public static final String  string_HaltWasNotRelatedToAHaltOfTheRelatedSecurity       = FIX_NO;
    public static final String  tagged_HaltWasNotRelatedToAHaltOfTheRelatedSecurity       = TagIDAsString + EQUALS + string_HaltWasNotRelatedToAHaltOfTheRelatedSecurity + SOH;
    public static final char    char_HaltWasNotRelatedToAHaltOfTheRelatedSecurity         = 'N';
    public static final char[]  taggedchars_HaltWasNotRelatedToAHaltOfTheRelatedSecurity  = {'3','2','9', EQUALSchar, 'N', SOHchar};
    public static final String  text_HaltWasNotRelatedToAHaltOfTheRelatedSecurity         = "HaltWasNotRelatedToAHaltOfTheRelatedSecurity";

    private static FixDueToRelatedField flyweightHaltWasDueToRelatedSecurityBeingHalted;
    public static final FixDueToRelatedField flyweightHaltWasDueToRelatedSecurityBeingHalted()
    {
        if (flyweightHaltWasDueToRelatedSecurityBeingHalted == null)
        {
            synchronized(FixDueToRelatedField.class)
            {
                if (flyweightHaltWasDueToRelatedSecurityBeingHalted == null)
                {
                    flyweightHaltWasDueToRelatedSecurityBeingHalted  = new FixDueToRelatedField()
                    {public boolean hasValue()                                         {return true;}
                     public String  getValue()                                         {return string_HaltWasDueToRelatedSecurityBeingHalted;}
                     public String  getValueDescription()                              {return text_HaltWasDueToRelatedSecurityBeingHalted;}
                     public String  toString()                                         {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_HaltWasDueToRelatedSecurityBeingHalted).append("|").append(text_HaltWasDueToRelatedSecurityBeingHalted).append("]").toString();}
                     public boolean isHaltWasDueToRelatedSecurityBeingHalted()         {return true;}
                     public boolean booleanValue()                                     {return HaltWasDueToRelatedSecurityBeingHalted;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder)      {fixMessageBuilder.append(taggedchars_HaltWasDueToRelatedSecurityBeingHalted);}
                    };
                }
            }
        }

        return flyweightHaltWasDueToRelatedSecurityBeingHalted;
    }

    private static FixDueToRelatedField flyweightHaltWasNotRelatedToAHaltOfTheRelatedSecurity;
    public static final FixDueToRelatedField flyweightHaltWasNotRelatedToAHaltOfTheRelatedSecurity()
    {
        if (flyweightHaltWasNotRelatedToAHaltOfTheRelatedSecurity == null)
        {
            synchronized(FixDueToRelatedField.class)
            {
                if (flyweightHaltWasNotRelatedToAHaltOfTheRelatedSecurity == null)
                {
                    flyweightHaltWasNotRelatedToAHaltOfTheRelatedSecurity  = new FixDueToRelatedField()
                    {public boolean hasValue()                                         {return true;}
                     public String  getValue()                                         {return string_HaltWasNotRelatedToAHaltOfTheRelatedSecurity;}
                     public String  getValueDescription()                              {return text_HaltWasNotRelatedToAHaltOfTheRelatedSecurity;}
                     public String  toString()                                         {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_HaltWasNotRelatedToAHaltOfTheRelatedSecurity).append("|").append(text_HaltWasNotRelatedToAHaltOfTheRelatedSecurity).append("]").toString();}
                     public boolean isHaltWasNotRelatedToAHaltOfTheRelatedSecurity()   {return true;}
                     public boolean booleanValue()                                     {return HaltWasNotRelatedToAHaltOfTheRelatedSecurity;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder)      {fixMessageBuilder.append(taggedchars_HaltWasNotRelatedToAHaltOfTheRelatedSecurity);}
                    };
                }
            }
        }

        return flyweightHaltWasNotRelatedToAHaltOfTheRelatedSecurity;
    }


    public boolean isHaltWasDueToRelatedSecurityBeingHalted()         {return false;}
    public boolean isHaltWasNotRelatedToAHaltOfTheRelatedSecurity()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixDueToRelatedField create(char[] array, int offset, int length)
    {
        if (length == 1)
        {                                                                                           
            if (array[offset] == char_HaltWasDueToRelatedSecurityBeingHalted)       return flyweightHaltWasDueToRelatedSecurityBeingHalted();
            if (array[offset] == char_HaltWasNotRelatedToAHaltOfTheRelatedSecurity) return flyweightHaltWasNotRelatedToAHaltOfTheRelatedSecurity();
        }
        return null;
    }

    public static final char[] truefalse_Flyweight  = new char[] {FixFieldIF.FIX_YESchar, FixFieldIF.FIX_NOchar};
    public static FixDueToRelatedField create(boolean param)
    {
        return create(truefalse_Flyweight, param ? 0 : 1, 1);
    }                                                                                               
}
