package com.cboe.cfix.fix.fix42.generated.fields;

/**
 * FixTradSesStatusField.java
 *
 * @author Dmitry Volpyansky
 *
 */

/**
 * This GENERATED file implements FIX Protocol's Field Tag [340] (known as TradSesStatus).
 *
 * WARNING: This entire file is completely generated by XSLT stylesheets from CboeFIX42.xml file.
 *
 */

import com.cboe.cfix.interfaces.*;
import com.cboe.cfix.util.*;
import com.cboe.client.util.*;

public abstract class FixTradSesStatusField implements FixFieldIF, HasIntValueIF
{   
    public static final int    TagID         =  340;
    public static final String TagIDAsString = "340";
    public static final char[] TagIDAsChars  = {'3','4','0'};
    public static final String TagName       = "TradSesStatus";
    public static final String TagFixType    = "INT";
    public static final char[]  taggedchars_value0 = {'3','4','0', EQUALSchar, ZEROchar, SOHchar};
    public static final char[]  taggedchars_value1 = {'3','4','0', EQUALSchar, ONEchar,  SOHchar};

    public static final int     Halted                = 1;
    public static final String  string_Halted         = "1";
    public static final String  tagged_Halted         = TagIDAsString + EQUALS + string_Halted + SOH;
    public static final char[]  taggedchars_Halted    = {'3','4','0', EQUALSchar, '1', SOHchar};
    public static final String  text_Halted           = "Halted";
    public static final int     Open                  = 2;
    public static final String  string_Open           = "2";
    public static final String  tagged_Open           = TagIDAsString + EQUALS + string_Open + SOH;
    public static final char[]  taggedchars_Open      = {'3','4','0', EQUALSchar, '2', SOHchar};
    public static final String  text_Open             = "Open";
    public static final int     Closed                = 3;
    public static final String  string_Closed         = "3";
    public static final String  tagged_Closed         = TagIDAsString + EQUALS + string_Closed + SOH;
    public static final char[]  taggedchars_Closed    = {'3','4','0', EQUALSchar, '3', SOHchar};
    public static final String  text_Closed           = "Closed";
    public static final int     PreOpen               = 4;
    public static final String  string_PreOpen        = "4";
    public static final String  tagged_PreOpen        = TagIDAsString + EQUALS + string_PreOpen + SOH;
    public static final char[]  taggedchars_PreOpen   = {'3','4','0', EQUALSchar, '4', SOHchar};
    public static final String  text_PreOpen          = "PreOpen";
    public static final int     PreClose              = 5;
    public static final String  string_PreClose       = "5";
    public static final String  tagged_PreClose       = TagIDAsString + EQUALS + string_PreClose + SOH;
    public static final char[]  taggedchars_PreClose  = {'3','4','0', EQUALSchar, '5', SOHchar};
    public static final String  text_PreClose         = "PreClose";

    private static FixTradSesStatusField flyweightHalted;
    public static final FixTradSesStatusField flyweightHalted()
    {
        if (flyweightHalted == null)
        {
            synchronized(FixTradSesStatusField.class)
            {
                if (flyweightHalted == null)
                {
                    flyweightHalted  = new FixTradSesStatusField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Halted;}
                     public String  getValueDescription()             {return text_Halted;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Halted).append("|").append(text_Halted).append("]").toString();}
                     public boolean isHalted()                        {return true;}
                     public int     intValue()                        {return Halted;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Halted);}
                    };
                }
            }
        }

        return flyweightHalted;
    }

    private static FixTradSesStatusField flyweightOpen;
    public static final FixTradSesStatusField flyweightOpen()
    {
        if (flyweightOpen == null)
        {
            synchronized(FixTradSesStatusField.class)
            {
                if (flyweightOpen == null)
                {
                    flyweightOpen  = new FixTradSesStatusField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Open;}
                     public String  getValueDescription()             {return text_Open;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Open).append("|").append(text_Open).append("]").toString();}
                     public boolean isOpen()                          {return true;}
                     public int     intValue()                        {return Open;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Open);}
                    };
                }
            }
        }

        return flyweightOpen;
    }

    private static FixTradSesStatusField flyweightClosed;
    public static final FixTradSesStatusField flyweightClosed()
    {
        if (flyweightClosed == null)
        {
            synchronized(FixTradSesStatusField.class)
            {
                if (flyweightClosed == null)
                {
                    flyweightClosed  = new FixTradSesStatusField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_Closed;}
                     public String  getValueDescription()             {return text_Closed;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_Closed).append("|").append(text_Closed).append("]").toString();}
                     public boolean isClosed()                        {return true;}
                     public int     intValue()                        {return Closed;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_Closed);}
                    };
                }
            }
        }

        return flyweightClosed;
    }

    private static FixTradSesStatusField flyweightPreOpen;
    public static final FixTradSesStatusField flyweightPreOpen()
    {
        if (flyweightPreOpen == null)
        {
            synchronized(FixTradSesStatusField.class)
            {
                if (flyweightPreOpen == null)
                {
                    flyweightPreOpen  = new FixTradSesStatusField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_PreOpen;}
                     public String  getValueDescription()             {return text_PreOpen;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_PreOpen).append("|").append(text_PreOpen).append("]").toString();}
                     public boolean isPreOpen()                       {return true;}
                     public int     intValue()                        {return PreOpen;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_PreOpen);}
                    };
                }
            }
        }

        return flyweightPreOpen;
    }

    private static FixTradSesStatusField flyweightPreClose;
    public static final FixTradSesStatusField flyweightPreClose()
    {
        if (flyweightPreClose == null)
        {
            synchronized(FixTradSesStatusField.class)
            {
                if (flyweightPreClose == null)
                {
                    flyweightPreClose  = new FixTradSesStatusField()
                    {public boolean hasValue()                        {return true;}
                     public String  getValue()                        {return string_PreClose;}
                     public String  getValueDescription()             {return text_PreClose;}
                     public String  toString()                        {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(string_PreClose).append("|").append(text_PreClose).append("]").toString();}
                     public boolean isPreClose()                      {return true;}
                     public int     intValue()                        {return PreClose;}
                     public void    accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(taggedchars_PreClose);}
                    };
                }
            }
        }

        return flyweightPreClose;
    }


    public boolean isHalted()     {return false;}
    public boolean isOpen()       {return false;}
    public boolean isClosed()     {return false;}
    public boolean isPreOpen()    {return false;}
    public boolean isPreClose()   {return false;}

    public final int    getTag()                                      {return TagID;}
    public final String getTagAsString()                              {return TagIDAsString;}
    public final char[] getTagAsChars()                               {return TagIDAsChars;}
    public final String getTagName()                                  {return TagName;}
    public       String getValueDescription()                         {return getValue();}
    public       void   accept(FixMessageBuilderIF fixMessageBuilder) {fixMessageBuilder.append(TagIDAsChars, getValue());}
    public       String toString()                                    {return new StringBuilder(64).append(TagName).append("{").append(TagIDAsString).append("} [").append(getValue()).append(']').toString();}

    public static FixTradSesStatusField create(char[] array, int offset, int length)
    {
        int param = IntegerHelper.parseInt(array, offset, length);
        if (param == IntegerHelper.INVALID_VALUE)
        {
            return null;
        }
        return create(param);
    }

    public static FixTradSesStatusField create(final int param)
    {
        switch (param)
        {                                                                                           
            case Halted:   return flyweightHalted();
            case Open:     return flyweightOpen();
            case Closed:   return flyweightClosed();
            case PreOpen:  return flyweightPreOpen();
            case PreClose: return flyweightPreClose();
        }
                                                                                                    
        return null;
    }                                                                                               
}
