package com.cboe.application.supplier.proxy;

import com.cboe.domain.instrumentorExtension.MethodInstrumentorExtension;
import com.cboe.domain.instrumentorExtension.MethodInstrumentorExtensionFactory;
import com.cboe.domain.instrumentorExtension.QueueInstrumentorExtension;
import com.cboe.domain.supplier.proxy.CallbackInterceptor;
import com.cboe.idl.cmiCallbackV2.CMIOrderStatusConsumer;
import com.cboe.infrastructureServices.foundationFramework.utilities.Log;
import com.cboe.instrumentationService.factories.InstrumentorAlreadyCreatedException;
import com.cboe.instrumentationService.instrumentors.Instrumentor;
import com.cboe.interfaces.callback.OrderStatusV2Consumer;

/**
 * Generated by Java Grinder
 * @author Java Grinder
 */
public class OrderStatusV2ConsumerInterceptor extends CallbackInterceptor implements OrderStatusV2Consumer
{


    MethodInstrumentorExtension acceptOrderStatus5;


    MethodInstrumentorExtension acceptOrderFilledReport4;


    MethodInstrumentorExtension acceptOrderCanceledReport3;


    MethodInstrumentorExtension acceptOrderBustReport2;


    MethodInstrumentorExtension acceptOrderBustReinstateReport1;

    MethodInstrumentorExtension acceptNewOrder0;
    CMIOrderStatusConsumer cmiObject;

    /**
     * Create a new instance of ths interceptor for the provided BObject.
     * Create a cache of the instrumentors necessary for instrumentation.
     */
    public OrderStatusV2ConsumerInterceptor(CMIOrderStatusConsumer o)
    {
        this.cmiObject = o;
    }

    /**
     */
    public void startInstrumentation(String prefix, boolean privateOnly)
    {
        try
        {
            StringBuilder name = new StringBuilder(prefix.length()+Instrumentor.NAME_DELIMITER.length()+35);
            name.append(prefix).append(Instrumentor.NAME_DELIMITER).append("acceptNewOrder0");
            acceptNewOrder0 = MethodInstrumentorExtensionFactory.createMethodInstrumentor(name.toString(), null, privateOnly);
            name.setLength(0);
            name.append(prefix).append(Instrumentor.NAME_DELIMITER).append("acceptOrderBustReinstateReport1");
            acceptOrderBustReinstateReport1 = MethodInstrumentorExtensionFactory.createMethodInstrumentor(name.toString(), null, privateOnly);
            name.setLength(0);
            name.append(prefix).append(Instrumentor.NAME_DELIMITER).append("acceptOrderBustReport2");
            acceptOrderBustReport2 = MethodInstrumentorExtensionFactory.createMethodInstrumentor(name.toString(), null, privateOnly);
            name.setLength(0);
            name.append(prefix).append(Instrumentor.NAME_DELIMITER).append("acceptOrderCanceledReport3");
            acceptOrderCanceledReport3 = MethodInstrumentorExtensionFactory.createMethodInstrumentor(name.toString(), null, privateOnly);
            name.setLength(0);
            name.append(prefix).append(Instrumentor.NAME_DELIMITER).append("acceptOrderFilledReport4");
            acceptOrderFilledReport4 = MethodInstrumentorExtensionFactory.createMethodInstrumentor(name.toString(), null, privateOnly);
            name.setLength(0);
            name.append(prefix).append(Instrumentor.NAME_DELIMITER).append("acceptOrderStatus5");
            acceptOrderStatus5 = MethodInstrumentorExtensionFactory.createMethodInstrumentor(name.toString(), null, privateOnly);
        } catch (InstrumentorAlreadyCreatedException e)
        {
            Log.exception(e);
        }
    }

    /**
     *
     */
    public void removeInstrumentation()
    {
        if(acceptNewOrder0 != null)
        {
            MethodInstrumentorExtensionFactory.removeMethodInstrumentor(acceptNewOrder0.getName());
            acceptNewOrder0 = null;
        }
        if(acceptOrderBustReinstateReport1 != null)
        {
            MethodInstrumentorExtensionFactory.removeMethodInstrumentor(acceptOrderBustReinstateReport1.getName());
            acceptOrderBustReinstateReport1 = null;
        }
        if(acceptOrderBustReport2 != null)
        {
            MethodInstrumentorExtensionFactory.removeMethodInstrumentor(acceptOrderBustReport2.getName());
            acceptOrderBustReport2 = null;
        }
        if(acceptOrderCanceledReport3 != null)
        {
            MethodInstrumentorExtensionFactory.removeMethodInstrumentor(acceptOrderCanceledReport3.getName());
            acceptOrderCanceledReport3 = null;
        }
        if(acceptOrderFilledReport4 != null)
        {
            MethodInstrumentorExtensionFactory.removeMethodInstrumentor(acceptOrderFilledReport4.getName());
            acceptOrderFilledReport4 = null;
        }
        if(acceptOrderStatus5 != null)
        {
            MethodInstrumentorExtensionFactory.removeMethodInstrumentor(acceptOrderStatus5.getName());
            acceptOrderStatus5 = null;
        }
    }

    /**
     *
     */
    public void addQueueInstrumentorRelation(QueueInstrumentorExtension queueInstrumentorExtension)
    {
        if(acceptNewOrder0 != null)
        {
            acceptNewOrder0.addQueueInstrumentorRelation(queueInstrumentorExtension);
        }
        if(acceptOrderBustReinstateReport1 != null)
        {
            acceptOrderBustReinstateReport1.addQueueInstrumentorRelation(queueInstrumentorExtension);
        }
        if(acceptOrderBustReport2 != null)
        {
            acceptOrderBustReport2.addQueueInstrumentorRelation(queueInstrumentorExtension);
        }
        if(acceptOrderCanceledReport3 != null)
        {
            acceptOrderCanceledReport3.addQueueInstrumentorRelation(queueInstrumentorExtension);
        }
        if(acceptOrderFilledReport4 != null)
        {
             acceptOrderFilledReport4.addQueueInstrumentorRelation(queueInstrumentorExtension);
        }
        if(acceptOrderStatus5 != null)
        {
            acceptOrderStatus5.addQueueInstrumentorRelation(queueInstrumentorExtension);
        }
    }

    /**
     */
    public void acceptNewOrder(com.cboe.idl.cmiOrder.OrderDetailStruct param0, int param1)
    {
        boolean exception = false;
        if (acceptNewOrder0 != null)
        {
            acceptNewOrder0.beforeMethodCall();
        }
        try
        {
            cmiObject.acceptNewOrder(param0, param1);
        } catch (RuntimeException ex)
        {
            exception = true;
            throw ex;
        } finally
        {
            if (acceptNewOrder0 != null)
            {
                acceptNewOrder0.incCalls(1);
                acceptNewOrder0.afterMethodCall();
                if (exception)
                {
                    acceptNewOrder0.incExceptions(1);
                }
            }
        }
    }

    /**
     */
    public void acceptOrderBustReinstateReport(com.cboe.idl.cmiOrder.OrderBustReinstateReportStruct param0, int param1)
    {
        boolean exception = false;
        if (acceptOrderBustReinstateReport1 != null)
        {
            acceptOrderBustReinstateReport1.beforeMethodCall();
        }
        try
        {
            cmiObject.acceptOrderBustReinstateReport(param0, param1);
        } catch (RuntimeException ex)
        {
            exception = true;
            throw ex;
        } finally
        {
            if (acceptOrderBustReinstateReport1 != null)
            {
                acceptOrderBustReinstateReport1.incCalls(1);
                acceptOrderBustReinstateReport1.afterMethodCall();
                if (exception)
                {
                    acceptOrderBustReinstateReport1.incExceptions(1);
                }
            }
        }
    }

    /**
     */
    public void acceptOrderBustReport(com.cboe.idl.cmiOrder.OrderBustReportStruct param0, int param1)
    {
        boolean exception = false;
        if (acceptOrderBustReport2 != null)
        {
            acceptOrderBustReport2.beforeMethodCall();
        }
        try
        {
            cmiObject.acceptOrderBustReport(param0, param1);
        } catch (RuntimeException ex)
        {
            exception = true;
            throw ex;
        } finally
        {
            if (acceptOrderBustReport2 != null)
            {
                acceptOrderBustReport2.incCalls(1);
                acceptOrderBustReport2.afterMethodCall();
                if (exception)
                {
                    acceptOrderBustReport2.incExceptions(1);
                }
            }
        }
    }

    /**
     */
    public void acceptOrderCanceledReport(com.cboe.idl.cmiOrder.OrderCancelReportStruct param0, int param1)
    {
        boolean exception = false;
        if (acceptOrderCanceledReport3 != null)
        {
            acceptOrderCanceledReport3.beforeMethodCall();
        }
        try
        {
            cmiObject.acceptOrderCanceledReport(param0, param1);
        } catch (RuntimeException ex)
        {
            exception = true;
            throw ex;
        } finally
        {
            if (acceptOrderCanceledReport3 != null)
            {
                acceptOrderCanceledReport3.incCalls(1);
                acceptOrderCanceledReport3.afterMethodCall();
                if (exception)
                {
                    acceptOrderCanceledReport3.incExceptions(1);
                }
            }
        }
    }

    /**
     */
    public void acceptOrderFilledReport(com.cboe.idl.cmiOrder.OrderFilledReportStruct param0, int param1)
    {
        boolean exception = false;
        if (acceptOrderFilledReport4 != null)
        {
            acceptOrderFilledReport4.beforeMethodCall();
        }
        try
        {
            cmiObject.acceptOrderFilledReport(param0, param1);
        } catch (RuntimeException ex)
        {
            exception = true;
            throw ex;
        } finally
        {
            if (acceptOrderFilledReport4 != null)
            {
                acceptOrderFilledReport4.incCalls(1);
                acceptOrderFilledReport4.afterMethodCall();
                if (exception)
                {
                    acceptOrderFilledReport4.incExceptions(1);
                }
            }
        }
    }

    /**
     */
    public void acceptOrderStatus(com.cboe.idl.cmiOrder.OrderDetailStruct[] param0, int param1)
    {
        boolean exception = false;
        if (acceptOrderStatus5 != null)
        {
            acceptOrderStatus5.beforeMethodCall();
        }
        try
        {
            cmiObject.acceptOrderStatus(param0, param1);
        } catch (RuntimeException ex)
        {
            exception = true;
            throw ex;
        } finally
        {
            if (acceptOrderStatus5 != null)
            {
                acceptOrderStatus5.incCalls(1);
                acceptOrderStatus5.afterMethodCall();
                if (exception)
                {
                    acceptOrderStatus5.incExceptions(1);
                }
            }
        }
    }
}