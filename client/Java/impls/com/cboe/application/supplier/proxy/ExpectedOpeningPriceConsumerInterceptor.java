package com.cboe.application.supplier.proxy;

import com.cboe.domain.instrumentorExtension.MethodInstrumentorExtension;
import com.cboe.domain.instrumentorExtension.MethodInstrumentorExtensionFactory;
import com.cboe.domain.instrumentorExtension.QueueInstrumentorExtension;
import com.cboe.domain.supplier.proxy.CallbackInterceptor;
import com.cboe.idl.cmiCallback.CMIExpectedOpeningPriceConsumer;
import com.cboe.infrastructureServices.foundationFramework.utilities.Log;
import com.cboe.instrumentationService.factories.InstrumentorAlreadyCreatedException;
import com.cboe.instrumentationService.instrumentors.Instrumentor;
import com.cboe.interfaces.callback.ExpectedOpeningPriceConsumer;

/**
 * Generated by Java Grinder
 * @author Java Grinder
 */
public class ExpectedOpeningPriceConsumerInterceptor extends CallbackInterceptor implements ExpectedOpeningPriceConsumer
{

    MethodInstrumentorExtension acceptExpectedOpeningPrice0;
    CMIExpectedOpeningPriceConsumer cmiObject;

    /**
     * Create a new instance of ths interceptor for the provided BObject.
     * Create a cache of the instrumentors necessary for instrumentation.
     */
    public ExpectedOpeningPriceConsumerInterceptor(CMIExpectedOpeningPriceConsumer o)
    {
        this.cmiObject = o;
    }

    /**
     */
    public void startInstrumentation(String prefix, boolean privateOnly)
    {
        try
        {
        	if (Log.isDebugOn())
        	{
        		acceptExpectedOpeningPrice0 = MethodInstrumentorExtensionFactory.createMethodInstrumentor(prefix + Instrumentor.NAME_DELIMITER + "acceptExpectedOpeningPrice0", null, privateOnly);
        	}
        } catch (InstrumentorAlreadyCreatedException e)
        {
            Log.exception(e);
        }
    }

    /**
     *
     */
    public void removeInstrumentation()
    {
        if(acceptExpectedOpeningPrice0 != null)
        {
            MethodInstrumentorExtensionFactory.removeMethodInstrumentor(acceptExpectedOpeningPrice0.getName());
            acceptExpectedOpeningPrice0 = null;
        }
    }

    /**
     *
     */
    public void addQueueInstrumentorRelation(QueueInstrumentorExtension queueInstrumentorExtension)
    {
        if(acceptExpectedOpeningPrice0!= null)
        {
            acceptExpectedOpeningPrice0.addQueueInstrumentorRelation(queueInstrumentorExtension);
        }
    }

    /**
     */
    public void acceptExpectedOpeningPrice(com.cboe.idl.cmiMarketData.ExpectedOpeningPriceStruct param0)
    {
        boolean exception = false;
        if (acceptExpectedOpeningPrice0 != null)
        {
            acceptExpectedOpeningPrice0.beforeMethodCall();
        }
        try
        {
            cmiObject.acceptExpectedOpeningPrice(param0);
        }
        catch (RuntimeException ex)
        {
            exception = true;
            throw ex;
        } finally
        {
            if (acceptExpectedOpeningPrice0 != null)
            {
                acceptExpectedOpeningPrice0.incCalls(1);
                acceptExpectedOpeningPrice0.afterMethodCall();
                if (exception)
                {
                    acceptExpectedOpeningPrice0.incExceptions(1);
                }
            }
        }
    }
}