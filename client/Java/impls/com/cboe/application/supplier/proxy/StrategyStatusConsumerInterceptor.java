package com.cboe.application.supplier.proxy;

import com.cboe.domain.instrumentorExtension.MethodInstrumentorExtension;
import com.cboe.domain.instrumentorExtension.MethodInstrumentorExtensionFactory;
import com.cboe.domain.instrumentorExtension.QueueInstrumentorExtension;
import com.cboe.domain.supplier.proxy.CallbackInterceptor;
import com.cboe.idl.cmiCallback.CMIStrategyStatusConsumer;
import com.cboe.infrastructureServices.foundationFramework.utilities.Log;
import com.cboe.instrumentationService.factories.InstrumentorAlreadyCreatedException;
import com.cboe.instrumentationService.instrumentors.Instrumentor;
import com.cboe.interfaces.callback.StrategyStatusConsumer;

/**
 * Generated by Java Grinder
 * @author Java Grinder
 */
public class StrategyStatusConsumerInterceptor extends CallbackInterceptor implements StrategyStatusConsumer
{

    MethodInstrumentorExtension updateProductStrategy0;
    CMIStrategyStatusConsumer cmiObject;

    /**
     * Create a new instance of ths interceptor for the provided BObject.
     * Create a cache of the instrumentors necessary for instrumentation.
     */
    public StrategyStatusConsumerInterceptor(CMIStrategyStatusConsumer o)
    {
        this.cmiObject = o;
    }

    /**
     */
    public void startInstrumentation(String prefix, boolean privateOnly)
    {
        try
        {
            StringBuilder name = new StringBuilder(prefix.length()+Instrumentor.NAME_DELIMITER.length()+22);
            name.append(prefix).append(Instrumentor.NAME_DELIMITER).append("updateProductStrategy0");
            updateProductStrategy0 = MethodInstrumentorExtensionFactory.createMethodInstrumentor(name.toString(), null, privateOnly);
        } catch (InstrumentorAlreadyCreatedException e)
        {
            Log.exception(e);
        }
    }

    /**
     *
     */
    public void removeInstrumentation()
    {
        if(updateProductStrategy0 != null)
        {
            MethodInstrumentorExtensionFactory.removeMethodInstrumentor(updateProductStrategy0.getName());
            updateProductStrategy0 = null;
        }
    }

    /**
     *
     */
    public void addQueueInstrumentorRelation(QueueInstrumentorExtension queueInstrumentorExtension)
    {
        if(updateProductStrategy0 != null)
        {
            updateProductStrategy0.addQueueInstrumentorRelation(queueInstrumentorExtension);
        }
    }

    /**
     */
    public void updateProductStrategy(com.cboe.idl.cmiSession.SessionStrategyStruct[] param0)
    {
        boolean exception = false;
        if (updateProductStrategy0 != null)
        {
            updateProductStrategy0.beforeMethodCall();
        }
        try
        {
            cmiObject.updateProductStrategy(param0);
        } catch (RuntimeException ex)
        {
            exception = true;
            throw ex;
        } finally
        {
            if (updateProductStrategy0 != null)
            {
                updateProductStrategy0.incCalls(1);
                updateProductStrategy0.afterMethodCall();
                if (exception)
                {
                    updateProductStrategy0.incExceptions(1);
                }
            }
        }
    }
}