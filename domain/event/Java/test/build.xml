
<project name="ant for domain.event.Java.test" default="all">

    <description>
    This ant build file compiles and run the tests under /vobs/dte/domain/event/Java/test
    </description>

    <!-- ant.file is the current file -->
    <echo>Building ${ant.file}</echo>

    <!-- top level domain event build -->
    <import file="/vobs/dte/domain/event/build/domain-event-build.xml"/>

    <!-- **************************************************************
            Init dirs based on OS.
    ******************************************************************* -->
    <target name="-domain.event.test.Init" depends="-domain.event.Init" description="set environment variables">

        <condition property="sbt.domain.event.test.project.dir" value="../../domain">
            <isset property="this.is.windows"/>
        </condition>

        <condition property="sbt.domain.event.test.project.dir" value="${sbt.domain.event.java.dir}/test">
            <isset property="this.is.unix"/>
        </condition>

	
    <!-- **************************************************************
            path name locations
    ******************************************************************* -->

        <!-- DOMAIN EVENT TEST SPECIFIC SOURCE LOCATIONS -->

        <property name="sbt.domain.event.test.classes.dir" location="${sbt.domain.event.classes.dir}/test"/>
        <property name="coverage.classes.dir"              location="${sbt.domain.event.classes.dir}/coverage-classes"/>
        <property name="sbt.domain.event.test.reports.dir" location="${sbt.domain.event.test.project.dir}/reports"/>
        <property name="sbt.domain.event.test.project.report" location="${sbt.domain.event.test.reports.dir}/junit-noframes.html"/>

        <!-- DOMAIN EVENT TEST SPECIFIC JAR LOCATIONS -->
        <property name="sbt.domain.event.test.rel.jar"              location="${sbt.domain.event.release.dir}/domain_test.jar"/>
        <property name="sbt.domain.event.test.class.jar"            location="${sbt.domain.event.test.classes.dir}/domain_test.jar"/>

        <!-- **************************************************************
            Classpaths
        ******************************************************************* -->
 
        <path id="sbt.domain.event.test.classpath"> <!-- (classpath for test jar compilation) -->
                <path refid="tpt.build.test.classpath"/>
                <path refid="sbt.third.party.classpath"/>
                <path refid="third.party.classpath"/>
                <pathelement location="/vobs/dte/cmi/release/jars/cmi_idl.jar"/>
                <pathelement location="/vobs/dte/domain/event/release/event_interfaces.jar"/>
                <pathelement location="/vobs/dte/domain/release/domain_interfaces.jar"/>
                <pathelement location="/vobs/dte/domain/release/domain_impls.jar"/>
                <pathelement location="/vobs/dte/domain/release/domain_idl.jar"/>
                <pathelement location="/vobs/dte/domain/event/release/event_idl.jar"/>
                <pathelement location="/vobs/dte/server/release/server_interfaces.jar"/>
                <pathelement location="/vobs/dte/client/release/client_interfaces.jar"/>
                <pathelement location="/vobs/dte/sysAdminClient/ics/release/ics_idl.jar"/>
                <pathelement location="/vobs/dte/CommonFacilities/release/CommonFacilities.jar"/>
                <pathelement location="/vobs/dte/FoundationFramework/release/jars/FoundationFramework.jar"/>
                <pathelement location="/vobs/dte/objectwave/release/objectwave.jar"/>
                <pathelement location="/vobs/dte/LoggingService/release/jars/LoggingService.jar"/>
                <pathelement location="/vobs/dte/LoggingService/release/jars/LoggingServiceIDL.jar"/>
                <pathelement location="/vobs/dte/common/release/jars/common.jar"/>
                <pathelement location="/vobs/dte/idlbase/omg/release/jars/OMGBaseClasses.jar"/>
                <pathelement location="/vobs/dte/idlbase/omg/release/jars/OMGServiceClasses.jar"/>
                <pathelement location="/vobs/dte/InfraVerity/release/jars/InfraVerityIDLClasses.jar"/>
                <pathelement location="/vobs/dte/SystemManagement/release/jars/SystemManagement.jar"/>
                <pathelement location="/vobs/dte/tools/java/jars/jawall.jar"/>
                <pathelement location="/vobs/dte/CommonLibraries/MsgCodec/release/MsgCodec.jar"/>
                <pathelement location="/vobs/tpt/tpt_tools/junit/run_dir/junit.jar"/>
                <pathelement location="/vobs/tpt/tpt_tools/mockito/run_dir/mockito-all.jar"/>
        </path>

         <path id="coverage.classpath">
             <pathelement location="${sbt.domain.event.classes.dir}/impls"/>
             <pathelement location="${sbt.domain.event.classes.dir}/interfaces"/>
         </path>

         <path id="emma.srcpath"> <!-- only needed for the detailed HTML report  -->
             <pathelement location="${sbt.domain.event.java.dir}/impls" />
             <pathelement location="${sbt.domain.event.java.dir}/interfaces" />
         </path>

         <path id="emma.classpath"> <!-- (where to find the coe coverage (EMMA) jars -->
             <pathelement location="/vobs/tpt/tpt_tools/emma/run_dir/lib/emma.jar"/>
             <pathelement location="/vobs/tpt/tpt_tools/emma/run_dir/lib/emma_ant.jar"/>
         </path>

         <!-- include the emma.classpath in the Ant references (so the <emma> tags are recognized) -->
         <taskdef resource="emma_ant.properties" classpathref="emma.classpath" />

        <path id="sbt.domain.event.run.test.classpath"> <!-- (classpath for JUnit test execution) -->
            <pathelement location="/vobs/tpt/tpt_tools/junit/run_dir/junit.jar"/>
                <pathelement location="/vobs/tpt/tpt_tools/ant/run_dir/lib/ant-junit.jar"/>
            <pathelement location="${sbt.domain.event.test.rel.jar}"/>
                <path refid="sbt.domain.event.test.classpath"/>
                <path refid="sbt.third.party.classpath"/>
        </path>

    </target>


    <!-- **************************************************************
            Clean
    ******************************************************************* -->
    <target name="Clean"
    description="Cleans compiled code and Jar files."
            depends="-domain.event.test.Init">

        <delete quiet="true">
            <fileset dir="${sbt.domain.event.test.classes.dir}">
                <filename name="**/*"/>
            </fileset>
            <fileset dir="${sbt.domain.event.test.reports.dir}">
                <filename name="**/*"/>
            </fileset>
            <fileset dir="${sbt.domain.event.test.project.dir}">
                <filename name="TESTS-TestSuites.xml"/>
            </fileset>
            <fileset dir="${coverage.classes.dir}">
                <filename name="**/*"/>
            </fileset>
        </delete>

        <ccuncheckout viewpath="${sbt.domain.event.test.rel.jar}"
                failonerr="false"
                keepcopy="false"/>
    </target>


    <!-- **************************************************************
            Compile, Build and Run Core and TEST Jars
    ******************************************************************* -->
    <target name="UnitTest"
        description="Compiles and Runs Unit Tests"
            depends="-domain.event.test.Init,Clean,-CompileCode,-CopyBuild">

         <junit-batch-emma-macro  classesdir="${sbt.domain.event.test.classes.dir}" srcdir="emma.srcpath" classpathref="sbt.domain.event.run.test.classpath" resultsdir="${sbt.domain.event.test.reports.dir}" coverage="${coverage.classes.dir}" coveragepathref="coverage.classpath" />

         <junit-report-macro  projectdir="${sbt.domain.event.test.project.dir}" reportsdir="${sbt.domain.event.test.reports.dir}" />
    </target>


    <!-- **************************************************************
            Compile, Build and Run Core and TEST Jars
		This target only runs the tests, and reports
		It is called by make
    ******************************************************************* -->
    <target name="UnitTest-Incremental"
        description="Runs Unit Tests"
            depends="-domain.event.test.Init">

         <!-- junit-batch-emma-macro  classesdir="${sbt.domain.event.test.classes.dir}" srcdir="emma.srcpath" classpathref="sbt.domain.event.run.test.classpath" resultsdir="${sbt.domain.event.test.reports.dir}" coverage="${coverage.classes.dir}" coveragepathref="coverage.classpath" / -->
            <junit-batch-macro  classesdir="${sbt.domain.event.test.classes.dir}" classpathref="sbt.domain.event.run.test.classpath" resultsdir="${sbt.domain.event.test.reports.dir}" />

         <junit-report-macro  projectdir="${sbt.domain.event.test.project.dir}" reportsdir="${sbt.domain.event.test.reports.dir}" />
    </target>

     <!-- **************************************************************
             Compile, Build and Run Core and TEST Jars
               This target only runs the tests
     ******************************************************************* -->
     <target name="UnitTest-Only"
         description="Runs Unit Tests"
             depends="-domain.event.test.Init">

            <junit-batch-macro  classesdir="${sbt.domain.event.test.classes.dir}" classpathref="sbt.domain.event.run.test.classpath" resultsdir="${sbt.domain.event.test.reports.dir}" />
    </target>


    <!-- **************************************************************
            Compile and Build
            (private target: no description and has a "-" prefix)
    ******************************************************************* -->
    <target name="-CompileCode" depends="-domain.event.test.Init">
            <catBuildInfo-macro rootDir="${dte.root}" outputDir="${build.info.dir}"
                outputFilename="${build.info.file}"/>

            <compile-macro  source="${sbt.domain.event.test.project.dir}" classpathref="sbt.domain.event.test.classpath" classesdir="${sbt.domain.event.test.classes.dir}" />

            <tstamp prefix="build">
                <format property="time" pattern="yyyy-MM-dd HH:mm:ss" />
            </tstamp>

            <jar jarfile="${sbt.domain.event.test.class.jar}">
               <fileset dir="${sbt.domain.event.test.classes.dir}" includes="**/*.class,**/*.txt,**/*.csv"/>
               <manifest>
                   <attribute name="Build-User" value="${user.name}"/>
                   <attribute name="OS-Platform" value="${os.name}"/>
                   <attribute name="Ant-Version" value="${ant.version}"/>
                   <attribute name="Created-At" value="${build.time}"/>
                   <attribute name="Created-By" value="JDK ${java.version}"/>
                   <attribute name="Main-Class" value="${configspec.class}"/>
               </manifest>
           </jar>
    </target>

    <!-- **************************************************************
            Copy Build Jar
            (private target: no description and has a "-" prefix)
    ******************************************************************* -->
    <target name="-CopyBuild"
        description="Copy view-private Jars to version controlled release directory"
            depends="-CompileCode">
            <buildcopy-macro  classesjar="${sbt.domain.event.test.class.jar}" releasejar="${sbt.domain.event.test.rel.jar}" releasedir="${sbt.domain.event.release.dir}" />
    </target>

    <!-- **************************************************************
            Checkin Release Jar
    ******************************************************************* -->
    <target name="Install"
        description="Checkin production version of the code"
            depends="-domain.event.test.Init">
            <install-macro  releasejar="${sbt.domain.event.test.rel.jar}" />
    </target>

</project>

